var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.157,1,1.654]],["body/classes/Account.html",[0,0.16,1,2.58,2,1.404,3,0.373,4,0.373,5,0.283,6,2.7,7,2.805,8,3.175,9,0.373,10,1.344,11,3.175,12,3.175,13,2.85,14,3.55,15,2.85,16,3.175,17,3.175,18,1.966,19,0.781,20,0.033,21,1.352,22,3.414,23,4.043,24,1.823,25,3.24,26,3.24,27,2.355,28,3.24,29,3.24,30,3.24,31,3.24,32,3.24,33,3.24,34,2.7,35,3.24,36,0.977,37,1.865,38,3.24,39,3.24,40,3.24,41,1.688,42,1.865,43,1.536,44,2.7,45,1.536,46,2.7,47,2.077,48,0.373,49,3.24,50,0.023,51,0.023]],["title/controllers/AccountController.html",[52,2.035,53,2.035]],["body/controllers/AccountController.html",[0,0.19,1,1.996,3,0.441,4,0.441,5,0.469,9,0.441,19,0.498,20,0.033,22,2.206,24,1.177,36,1.117,48,0.441,50,0.025,51,0.025,52,2.457,53,3.131,54,1.996,55,3.193,56,3.833,57,2.544,58,2.329,59,2.8,60,4.479,61,3.193,62,4.479,63,3.833,64,3.833,65,1.521,66,0.991,67,1.521,68,1.521,69,2.316,70,3.193,71,3.833,72,3.833,73,4.885,74,0.991,75,1.66,76,1.817,77,2.8,78,3.193,79,3.833,80,3.193,81,3.193,82,3.833,83,3.833,84,3.833,85,3.833,86,1.521,87,3.833,88,1.996,89,3.833]],["title/modules/AccountModule.html",[90,0.975,91,1.827]],["body/modules/AccountModule.html",[0,0.203,1,2.13,3,0.471,4,0.471,5,0.357,20,0.033,36,1.176,48,0.471,50,0.026,51,0.026,53,3.551,54,2.65,74,1.058,77,3.166,78,3.407,90,1.563,91,3.498,92,1.772,93,2.204,94,3.407,95,3.407,96,2.65,97,2.13,98,2.13,99,4.09,100,2.928,101,4.09,102,2.353,103,1.368,104,3.407,105,2.353,106,4.09]],["title/injectables/AccountService.html",[77,1.654,107,1.156]],["body/injectables/AccountService.html",[0,0.064,1,2.388,3,0.148,4,0.148,5,0.286,9,0.148,11,1.794,12,1.794,13,1.886,14,2.1,15,0.742,16,1.388,17,1.388,18,1.11,19,0.514,20,0.034,24,1.214,36,1.002,43,1.027,44,1.075,45,0.612,46,1.075,48,0.148,50,0.011,51,0.011,57,1.128,58,1.212,59,2.737,60,1.804,61,1.804,62,2.331,65,1.569,66,1.087,67,1.569,68,1.449,69,2.245,74,0.334,75,0.559,76,0.612,77,1.128,86,2.186,88,2.695,103,0.431,104,1.075,107,0.789,108,0.742,109,1.075,110,2.202,111,2.165,112,2.165,113,2.165,114,2.165,115,0.938,116,1.29,117,1.29,118,2.165,119,2.165,120,2.275,121,1.29,122,3.277,123,1.29,124,2.165,125,2.275,126,1.29,127,3.277,128,2.165,129,2.101,130,1.29,131,3.277,132,2.165,133,1.29,134,2.798,135,0.742,136,1.128,137,1.29,138,1.457,139,1.29,140,1.554,141,1.29,142,1.027,143,1.29,144,1.246,145,1.29,146,1.075,147,1.075,148,1.29,149,0.672,150,1.902,151,1.29,152,0.827,153,1.29,154,2.894,155,1.29,156,1.29,157,2.798,158,1.29,159,2.693,160,2.798,161,1.29,162,1.29,163,3.519,164,2.798,165,1.075,166,1.29,167,1.29,168,1.29,169,0.933,170,1.29,171,1.29,172,0.827,173,1.29,174,1.29,175,0.933,176,1.29,177,1.29,178,0.933,179,1.29,180,2.165,181,1.29,182,1.29,183,2.165,184,1.29,185,1.29,186,0.742,187,1.29,188,0.827,189,1.29,190,1.29,191,1.29,192,1.29,193,1.29,194,1.29,195,1.388,196,1.29,197,1.29,198,0.933,199,1.29,200,1.29,201,1.29,202,1.29,203,2.165,204,1.29,205,1.29,206,1.29,207,2.165,208,1.29,209,1.29,210,2.165,211,2.8,212,1.29,213,5.649,214,4.054,215,4.866,216,2.165,217,1.29,218,2.165,219,1.29,220,1.29,221,2.165,222,1.29,223,1.29,224,2.37,225,1.731,226,1.902,227,1.902,228,2.101,229,1.29,230,2.165,231,1.29,232,1.29,233,3.652,234,1.29,235,2.165,236,1.29,237,2.165,238,1.29,239,1.29,240,1.29,241,1.29,242,1.29,243,1.29,244,1.29,245,1.29,246,1.29,247,2.798,248,1.29,249,0.742,250,0.933,251,0.742,252,1.29,253,1.29,254,1.29,255,1.29,256,1.29,257,1.29,258,0.933,259,2.165,260,1.29,261,2.798,262,1.29,263,1.29,264,1.29,265,1.29,266,1.29,267,1.29,268,0.827,269,1.075,270,1.29,271,2.798,272,1.29,273,1.29,274,1.29,275,1.29,276,1.29,277,1.29,278,1.29,279,2.165,280,1.29,281,1.29,282,1.29,283,1.29,284,1.29,285,1.29,286,1.29]],["title/classes/AllExceptionsFilter.html",[0,0.157,287,2.035]],["body/classes/AllExceptionsFilter.html",[0,0.17,2,1.49,3,0.396,4,0.396,5,0.3,9,0.396,10,1.399,19,0.592,20,0.033,24,1.568,36,1.007,48,0.396,50,0.023,51,0.023,57,2.372,65,1.365,66,0.89,67,1.365,68,1.365,74,0.89,75,1.49,76,1.631,110,2.211,115,2.211,154,2.679,159,2.205,186,1.979,225,2.575,287,2.919,288,4.526,289,2.866,290,4.553,291,5.104,292,5.104,293,4.934,294,4.553,295,4.553,296,4.252,297,4.252,298,5.433,299,3.44,300,2.937,301,3.44,302,3.44,303,3.44,304,3.44,305,2.487,306,3.44,307,2.205,308,3.44,309,3.44,310,3.44,311,2.487,312,5.651,313,3.44]],["title/classes/ApiResponse.html",[0,0.157,314,2.035]],["body/classes/ApiResponse.html",[0,0.044,2,0.382,3,0.101,4,0.101,5,0.077,9,0.101,10,0.479,18,1.371,19,0.449,20,0.034,21,1.106,24,1.243,36,0.413,48,0.513,50,0.008,51,0.008,58,1.385,65,1.148,66,0.655,67,0.832,68,1.952,69,0.739,74,0.228,75,0.382,86,2.275,110,1.679,115,0.908,149,1.092,150,1.319,152,2.484,154,2.165,159,2.594,163,1.516,165,3.498,186,0.507,214,0.734,225,1.2,226,2.018,227,0.459,258,3.441,268,2.484,269,0.734,293,3.228,296,0.734,300,1.457,305,2.092,307,2.484,311,2.312,314,2.484,315,0.459,316,0.734,317,1.831,318,1.559,319,3.611,320,3.438,321,3.456,322,3.381,323,1.299,324,1.559,325,0.882,326,3.197,327,0.882,328,0.734,329,0.882,330,0.734,331,0.882,332,2.802,333,0.734,334,0.882,335,0.734,336,0.882,337,0.882,338,0.882,339,0.882,340,0.882,341,0.638,342,0.734,343,1.559,344,0.897,345,1.831,346,0.882,347,0.882,348,2.499,349,2.41,350,3.371,351,0.882,352,1.299,353,0.734,354,0.734,355,0.734,356,0.734,357,0.734,358,0.734,359,0.734,360,0.734,361,0.734,362,0.734,363,0.734,364,0.734,365,0.734,366,0.734,367,0.734,368,0.734,369,0.734,370,0.734,371,0.734,372,0.734,373,0.734,374,0.734,375,0.734,376,0.734,377,0.734,378,0.734,379,1.344,380,1.299,381,0.734,382,0.734,383,0.734,384,0.734,385,0.734,386,0.734,387,0.734,388,0.734,389,0.734,390,0.734,391,0.734,392,0.734,393,0.734,394,0.734,395,0.734,396,0.734,397,1.746,398,0.734,399,0.734,400,0.734,401,0.734,402,0.734,403,0.734,404,0.734,405,0.734,406,0.734,407,0.734,408,2.41,409,0.734,410,0.734,411,0.734,412,0.734,413,0.734,414,0.734,415,0.734,416,0.734,417,0.734,418,0.734,419,0.734,420,0.734,421,0.734,422,0.734,423,0.734,424,0.734,425,0.734,426,0.734,427,0.734,428,0.734,429,0.734,430,0.734,431,0.734,432,0.734,433,0.734,434,0.734,435,0.734,436,0.734,437,0.734,438,0.734,439,0.734,440,0.734,441,0.734,442,0.734,443,0.734,444,0.734,445,0.734,446,0.734,447,0.734,448,0.734,449,0.734,450,0.734,451,0.734,452,2.41,453,0.734,454,0.734,455,0.734,456,0.734,457,0.734,458,0.734,459,0.734,460,0.734,461,0.734,462,0.734,463,3.713,464,0.734,465,0.882,466,1.559,467,4.567,468,1.559,469,4.335,470,4.335,471,4.335,472,4.199,473,4.199,474,0.882,475,3.456,476,3.197,477,3.441,478,0.882,479,0.882,480,2.096,481,0.882,482,1.559,483,0.882,484,0.882,485,0.882,486,0.882,487,0.882,488,0.882,489,0.882,490,0.882,491,0.882,492,0.882,493,0.882,494,0.882,495,0.882,496,0.882,497,0.882,498,0.882,499,0.882,500,0.882,501,0.882,502,0.882,503,0.882,504,0.882,505,0.882,506,0.882,507,0.882,508,0.882,509,1.746,510,1.746,511,2.096,512,1.559,513,1.746,514,0.734,515,0.734,516,0.882,517,0.734,518,0.734,519,2.532,520,2.532,521,1.559,522,1.559,523,1.559,524,0.734,525,0.734,526,0.734,527,1.299,528,1.831,529,0.882,530,0.734,531,0.734,532,2.096,533,2.096,534,0.882,535,1.746,536,0.882,537,1.559,538,0.882,539,2.893,540,1.559,541,2.532,542,1.559,543,2.532,544,0.882,545,0.882,546,0.882,547,0.882,548,0.882,549,0.882,550,1.559,551,1.559,552,0.882,553,1.559,554,1.559,555,0.882,556,0.882,557,0.882,558,0.882,559,1.831,560,0.734,561,0.734,562,1.746,563,3.228,564,0.882,565,0.882,566,0.882,567,0.882,568,0.882,569,1.559,570,0.734,571,0.734,572,2.41,573,2.893,574,0.882,575,0.882,576,0.882,577,0.882,578,0.734,579,0.882,580,0.882,581,0.882,582,0.882,583,0.638,584,0.734,585,0.734,586,0.882,587,0.734,588,0.734,589,0.882,590,0.882,591,0.882,592,0.734,593,0.734,594,0.638,595,0.882,596,1.559,597,0.882,598,0.882]],["title/modules/AppModule.html",[90,0.975,599,2.035]],["body/modules/AppModule.html",[0,0.154,3,0.358,4,0.358,5,0.272,20,0.034,36,1.226,48,0.358,50,0.022,51,0.022,54,1.621,74,0.805,90,1.49,91,3.245,92,1.348,93,1.844,96,2.217,97,1.621,98,1.621,100,1.791,102,1.791,103,1.041,105,2.45,287,2.729,297,2.593,528,3.508,599,3.934,600,2.593,601,2.593,602,3.245,603,3.245,604,3.245,605,3.113,606,3.113,607,4.257,608,2.593,609,3.113,610,3.113,611,3.113,612,2.593,613,3.113,614,2.593,615,3.113,616,2.251,617,2.593,618,3.113,619,2.593,620,3.113,621,3.113,622,3.113,623,3.113,624,3.113,625,3.113,626,3.113,627,3.113,628,3.113,629,3.113,630,3.113,631,3.113,632,3.113,633,3.113,634,3.113,635,5.216,636,3.113,637,3.113,638,3.113,639,3.113,640,3.113,641,3.113,642,3.113,643,3.113,644,3.113,645,3.113]],["title/classes/Company.html",[0,0.157,43,1.505]],["body/classes/Company.html",[0,0.217,2,1.899,3,0.505,4,0.505,5,0.383,7,3.404,8,3.662,9,0.505,10,1.631,19,0.57,20,0.032,21,1.258,22,2.523,23,3.662,24,1.347,36,0.865,37,2.523,41,2.283,42,2.523,43,2.708,47,2.81,48,0.505,50,0.027,51,0.027,66,1.478,646,3.652,647,4.384]],["title/modules/CompanyModule.html",[90,0.975,602,1.827]],["body/modules/CompanyModule.html",[0,0.207,3,0.481,4,0.481,5,0.365,20,0.033,36,1.152,43,1.981,48,0.481,50,0.027,51,0.027,54,2.177,74,1.081,90,1.584,92,1.81,93,2.234,96,2.686,97,2.177,98,2.177,100,2.968,102,2.405,103,1.398,105,2.405,138,3.183,602,3.516,648,3.481,649,3.481,650,4.179,651,4.179,652,3.481,653,4.179]],["title/injectables/CompanyService.html",[107,1.156,138,1.654]],["body/injectables/CompanyService.html",[0,0.13,3,0.302,4,0.302,5,0.229,9,0.302,13,2.951,19,0.575,20,0.034,21,1.048,24,1.487,27,1.756,36,1.011,43,2.719,48,0.302,50,0.019,51,0.019,57,1.968,58,2.485,59,2.987,65,1.921,66,1.423,67,1.921,68,1.756,69,2.532,74,0.679,75,1.137,76,1.245,86,2.119,88,2.305,103,0.878,107,1.376,108,1.511,110,1.137,115,1.636,125,2.785,135,1.511,138,1.968,147,2.187,149,1.367,150,2.305,152,1.683,154,2.295,211,2.951,225,2.098,226,2.305,227,2.305,228,2.546,249,2.174,250,1.899,251,2.546,268,2.422,652,2.187,654,2.187,655,3.147,656,3.778,657,3.778,658,2.626,659,2.626,660,3.778,661,3.778,662,2.626,663,3.778,664,2.626,665,4.425,666,2.732,667,3.778,668,2.626,669,2.626,670,2.626,671,2.837,672,2.626,673,3.778,674,1.683,675,2.422,676,3.687,677,2.187,678,2.187,679,2.626]],["title/classes/HttpResponse.html",[0,0.157,344,1.827]],["body/classes/HttpResponse.html",[0,0.14,2,1.221,3,0.324,4,0.324,5,0.246,9,0.324,10,1.221,18,2.277,19,0.745,20,0.034,21,1.295,24,1.868,27,2.17,34,4.163,48,0.324,50,0.02,51,0.02,58,2.485,65,1.983,66,1.293,67,1.983,68,1.983,86,1.983,110,2.614,115,1.994,320,3.505,322,3.505,323,3.31,328,2.348,330,2.348,332,3.614,333,2.348,335,2.348,344,2.287,509,3.834,510,3.834,513,4.163,514,2.348,515,2.348,578,4.555,680,2.348,681,5.467,682,3.974,683,2.819,684,2.819,685,2.819,686,2.819,687,2.819,688,2.819,689,2.819,690,2.819,691,2.819,692,2.819,693,2.819,694,2.819,695,2.819,696,2.819,697,2.819,698,4.602,699,4.602,700,2.819,701,2.819]],["title/interfaces/IAccount.html",[120,1.827,702,0.975]],["body/interfaces/IAccount.html",[3,0.415,4,0.415,5,0.315,9,0.415,10,1.443,11,3.678,12,3.678,13,2.075,14,3.936,15,2.075,16,3.678,17,3.678,18,2.277,19,0.789,20,0.033,21,1.532,27,2.377,48,0.541,50,0.024,51,0.024,120,2.703,144,2.075,195,3.547,198,4.001,702,1.443,703,1.878,704,2.608]],["title/interfaces/IAccountData.html",[144,1.827,702,0.975]],["body/interfaces/IAccountData.html",[3,0.415,4,0.415,5,0.315,9,0.415,10,1.443,11,3.678,12,3.678,13,3.184,14,3.936,15,3.184,16,3.678,17,3.678,18,2.277,19,0.789,20,0.033,21,1.508,27,2.505,48,0.541,50,0.024,51,0.024,120,2.075,144,2.703,195,2.312,198,2.608,702,1.443,703,1.878,704,2.608]],["title/interfaces/ICompany.html",[125,1.827,702,0.975]],["body/interfaces/ICompany.html",[3,0.536,4,0.536,5,0.406,9,0.536,10,1.691,19,0.605,20,0.032,21,1.389,48,0.536,50,0.028,51,0.028,66,1.567,125,3.168,702,1.431,703,2.426,705,3.88]],["title/interfaces/IPerson.html",[129,1.827,702,0.975]],["body/interfaces/IPerson.html",[3,0.536,4,0.536,5,0.406,9,0.536,10,1.691,19,0.605,20,0.032,21,1.389,48,0.536,50,0.028,51,0.028,129,3.168,195,3.883,702,1.431,703,2.426,706,3.88]],["title/interfaces/ITransaction.html",[702,0.975,707,2.035]],["body/interfaces/ITransaction.html",[0,0.133,3,0.309,4,0.309,5,0.235,9,0.309,10,1.18,19,0.814,20,0.034,21,1.275,27,1.942,36,0.965,48,0.309,50,0.02,51,0.02,58,1.665,59,2.001,66,1.573,69,1.822,74,0.695,75,1.165,76,1.275,86,1.78,88,2.001,103,0.899,107,1.399,110,1.165,115,1.165,135,1.547,140,1.275,142,2.32,149,1.4,150,2.001,154,2.32,169,1.944,172,1.723,175,1.944,178,1.944,188,1.723,211,2.58,224,1.944,225,1.822,226,2.001,227,2.001,228,2.211,249,1.547,251,1.547,671,1.723,674,1.723,675,1.723,702,0.826,703,1.4,707,2.874,708,1.944,709,4.396,710,1.944,711,2.24,712,2.24,713,2.24,714,3.201,715,2.24,716,4.485,717,2.24,718,2.24,719,3.736,720,2.24,721,2.24,722,2.24,723,1.944,724,3.736,725,2.24,726,2.24,727,1.944,728,2.24,729,2.24,730,2.24,731,2.24,732,3.201,733,2.24,734,2.24,735,2.24,736,2.24,737,2.24]],["title/classes/Person.html",[0,0.157,45,1.505]],["body/classes/Person.html",[0,0.217,2,1.899,3,0.505,4,0.505,5,0.383,7,3.404,8,3.662,9,0.505,10,1.631,19,0.57,20,0.032,21,1.258,22,2.523,23,3.662,24,1.347,36,0.865,37,2.523,41,2.283,42,2.523,45,2.708,47,2.81,48,0.505,50,0.027,51,0.027,66,1.478,738,3.652,739,4.384]],["title/modules/PersonModule.html",[90,0.975,603,1.827]],["body/modules/PersonModule.html",[0,0.207,3,0.481,4,0.481,5,0.365,20,0.033,36,1.152,45,1.981,48,0.481,50,0.027,51,0.027,54,2.177,74,1.081,90,1.584,92,1.81,93,2.234,96,2.686,97,2.177,98,2.177,100,2.968,102,2.405,103,1.398,105,2.405,136,3.183,603,3.516,740,3.481,741,3.481,742,4.179,743,4.179,744,3.481,745,4.179]],["title/injectables/PersonService.html",[107,1.156,136,1.654]],["body/injectables/PersonService.html",[0,0.13,3,0.302,4,0.302,5,0.229,9,0.302,15,2.949,19,0.574,20,0.034,21,1.047,24,1.485,27,1.754,36,1.011,45,2.718,48,0.302,50,0.019,51,0.019,57,1.965,58,2.483,59,2.986,65,1.919,66,1.423,67,1.919,68,1.754,69,2.53,74,0.678,75,1.135,76,1.242,86,2.118,88,2.302,103,0.876,107,1.374,108,1.508,110,1.135,115,1.634,129,2.783,135,1.508,136,1.965,146,2.183,149,1.365,150,2.302,152,1.68,154,2.292,211,2.949,225,2.096,226,2.302,227,2.302,228,2.544,249,2.171,250,1.895,251,2.544,268,2.418,655,3.143,666,2.728,671,2.833,674,1.68,675,2.418,676,3.682,677,2.183,678,2.183,744,2.183,746,2.183,747,3.772,748,3.772,749,2.62,750,2.62,751,3.772,752,3.772,753,2.62,754,3.772,755,2.62,756,3.772,757,2.62,758,4.42,759,2.62,760,2.62,761,2.62,762,3.772,763,2.62]],["title/classes/Transaction.html",[0,0.157,142,1.505]],["body/classes/Transaction.html",[0,0.197,2,1.719,3,0.457,4,0.457,5,0.346,7,3.201,8,3.503,9,0.457,10,1.534,19,0.784,20,0.033,21,1.358,22,3.144,23,3.867,24,1.678,27,1.982,36,0.783,37,2.284,41,2.067,42,2.284,47,2.544,48,0.457,50,0.026,51,0.026,66,1.413,142,2.591,528,3.611,709,3.951,764,3.306,765,3.969,766,3.969,767,3.969,768,3.969,769,4.994,770,3.969]],["title/modules/TransactionModule.html",[90,0.975,604,1.827]],["body/modules/TransactionModule.html",[0,0.207,3,0.481,4,0.481,5,0.365,20,0.033,36,1.152,48,0.481,50,0.027,51,0.027,54,2.177,74,1.081,90,1.584,92,1.81,93,2.234,96,2.686,97,2.177,98,2.177,100,2.968,102,2.405,103,1.398,105,2.405,140,2.897,142,1.981,604,3.516,710,3.022,771,3.481,772,3.481,773,4.179,774,4.179,775,4.179]],["title/injectables/TransactionService.html",[107,1.156,140,1.505]],["body/injectables/TransactionService.html",[0,0.128,3,0.298,4,0.298,5,0.226,9,0.298,19,0.79,20,0.034,21,0.885,24,1.347,27,1.907,36,0.948,48,0.298,50,0.019,51,0.019,57,1.946,58,2.301,59,2.767,65,1.482,66,1.55,67,1.482,68,1.482,69,2.278,74,0.669,75,1.12,76,1.226,86,1.741,88,1.946,103,0.864,107,1.36,108,1.488,110,1.12,115,1.618,135,1.488,140,1.771,142,2.278,149,1.346,150,1.946,154,2.278,169,1.869,172,1.657,175,1.869,178,1.869,188,1.657,211,2.524,224,1.869,225,1.771,226,1.946,227,1.946,228,2.15,249,1.488,251,1.488,671,1.657,674,1.657,675,1.657,702,0.794,707,2.395,708,1.869,709,4.249,710,1.869,711,2.154,712,3.112,713,4.003,714,3.112,715,2.154,716,4.425,717,2.154,718,2.154,719,3.654,720,2.154,721,2.154,722,2.154,723,1.869,724,3.654,725,2.154,726,2.154,727,1.869,728,2.154,729,2.154,730,2.154,731,2.154,732,3.112,733,2.154,734,2.154,735,3.112,736,2.154,737,3.112,776,3.736,777,2.585,778,2.585,779,2.585,780,2.585]],["title/coverage.html",[781,3.595]],["body/coverage.html",[0,0.282,1,1.536,5,0.257,6,2.456,19,0.383,20,0.033,37,1.697,43,1.398,45,1.398,50,0.021,51,0.021,52,1.89,53,1.89,55,2.456,77,1.536,90,0.906,107,1.856,109,2.456,120,1.697,125,1.697,129,1.697,136,1.536,138,1.536,140,1.398,142,1.398,144,1.697,159,1.89,163,4.588,186,3.339,287,1.89,288,2.456,289,2.456,300,1.697,314,1.89,315,3.14,341,2.132,344,1.697,379,1.89,463,5.023,477,2.132,559,2.132,583,2.132,594,2.132,646,2.456,654,2.456,680,2.456,702,1.646,704,2.966,705,2.456,706,2.456,707,1.89,708,2.966,738,2.456,746,2.456,764,2.456,781,2.456,782,2.949,783,2.949,784,2.949,785,4.715,786,5.357,787,2.966,788,2.456,789,5.357,790,4.101,791,2.949,792,4.101,793,5.097,794,2.456,795,2.456,796,2.949,797,2.949,798,5.802,799,2.456,800,2.456,801,2.456,802,2.949,803,2.949]],["title/dependencies.html",[93,1.652,804,2.66]],["body/dependencies.html",[0,0.22,20,0.034,41,2.309,42,1.901,50,0.023,51,0.023,74,0.855,80,2.753,81,2.753,93,1.431,103,1.105,348,2.389,608,2.753,612,2.753,614,2.753,616,3.617,617,3.693,619,2.753,805,3.304,806,3.304,807,3.304,808,3.304,809,3.304,810,3.304,811,3.304,812,3.304,813,5.003,814,3.304,815,3.304,816,4.433,817,3.304,818,3.304,819,3.304,820,3.304,821,3.304,822,3.304,823,3.304,824,3.304,825,3.304,826,3.304,827,3.304,828,4.433,829,3.304,830,3.304,831,3.304,832,3.304,833,3.304,834,3.304,835,3.304,836,3.304,837,3.304,838,3.304,839,3.304,840,3.304,841,3.304,842,3.304,843,3.304,844,3.304,845,3.304,846,4.433,847,3.304,848,3.304,849,3.304,850,3.304,851,3.304,852,3.304,853,3.304,854,3.304,855,3.304,856,3.304,857,4.433,858,3.304,859,3.304,860,3.304,861,3.304,862,3.304,863,3.304,864,3.304,865,3.304,866,3.304,867,3.304,868,3.304,869,3.304,870,3.304,871,3.304,872,3.304,873,3.304,874,3.304,875,3.304,876,3.304,877,3.304]],["title/miscellaneous/enumerations.html",[878,1.152,879,3.177]],["body/miscellaneous/enumerations.html",[9,0.32,18,2.592,20,0.034,50,0.02,51,0.02,186,1.602,300,1.602,307,1.784,315,1.45,317,2.013,322,2.93,348,2.013,349,2.319,352,2.319,353,2.319,354,2.319,355,2.319,356,2.319,357,2.319,358,2.319,359,2.319,360,2.319,361,2.319,362,2.319,363,2.319,364,2.319,365,2.319,366,2.319,367,2.319,368,2.319,369,2.319,370,2.319,371,2.319,372,2.319,373,2.319,374,2.319,375,2.319,376,2.319,377,2.319,378,2.319,379,1.784,380,2.319,381,2.319,382,2.319,383,2.319,384,2.319,385,2.319,386,2.319,387,2.319,388,2.319,389,2.319,390,2.319,391,2.319,392,2.319,393,2.319,394,2.319,395,2.319,396,2.319,397,2.319,398,2.319,399,2.319,400,2.319,401,2.319,402,2.319,403,2.319,404,2.319,405,2.319,406,2.319,407,2.319,408,2.319,409,2.319,410,2.319,411,2.319,412,2.319,413,2.319,414,2.319,415,2.319,416,2.319,417,2.319,418,2.319,419,2.319,420,2.319,421,2.319,422,2.319,423,2.319,424,2.319,425,2.319,426,2.319,427,2.319,428,2.319,429,2.319,430,2.319,431,2.319,432,2.319,433,2.319,434,2.319,435,2.319,436,2.319,437,2.319,438,2.319,439,2.319,440,2.319,441,2.319,442,2.319,443,2.319,444,2.319,445,2.319,446,2.319,447,2.319,448,2.319,449,2.319,450,2.319,451,2.319,452,2.319,453,2.319,454,2.319,455,2.319,456,2.319,457,2.319,458,2.319,459,2.319,460,2.319,461,2.319,462,2.319,878,1.206,879,2.319,880,1.784]],["title/miscellaneous/functions.html",[878,1.152,881,3.177]],["body/miscellaneous/functions.html",[9,0.313,19,0.723,20,0.033,21,1.406,50,0.02,51,0.02,65,2.296,66,1.496,67,2.296,68,2.296,86,2.356,258,3.908,300,2.598,305,2.803,307,2.485,311,3.265,314,3.154,315,1.417,316,3.761,319,4.736,320,3.465,322,2.485,332,3.908,345,1.968,350,4.736,379,2.894,464,2.267,477,3.76,517,2.267,518,2.267,524,2.267,525,2.267,526,2.267,527,2.267,530,2.267,531,2.267,535,2.267,559,3.76,560,2.267,561,2.267,562,3.229,563,3.761,570,2.267,571,2.267,572,3.229,583,2.803,584,2.267,585,2.267,587,2.267,588,2.267,592,2.267,593,2.267,594,3.265,666,2.803,787,1.968,788,3.761,794,2.267,795,3.229,799,3.229,800,3.229,801,3.229,878,1.179,880,3.708,881,2.267,882,2.267,883,2.721,884,2.721,885,3.876,886,3.876,887,3.876,888,2.721]],["title/index.html",[9,0.306,889,2.66,890,2.66]],["body/index.html",[5,0.344,18,1.566,20,0.03,41,2.055,50,0.026,51,0.026,70,3.287,320,2.529,616,2.853,891,3.946,892,3.946,893,3.946,894,3.946,895,3.946,896,3.946,897,5.449,898,3.946,899,3.946,900,3.946,901,3.946,902,3.946,903,4.975,904,3.946,905,3.946,906,4.975,907,4.975,908,3.946,909,4.975,910,3.946,911,3.946,912,4.975,913,3.946,914,3.946,915,3.946,916,3.946,917,3.946,918,3.946,919,3.946,920,3.946,921,3.946,922,3.946,923,3.946,924,4.975,925,3.946,926,3.946,927,3.946,928,3.946,929,3.946,930,3.946,931,3.946,932,3.946,933,3.946,934,3.946,935,3.946,936,3.946,937,3.946,938,3.946,939,3.946,940,3.946,941,3.946,942,3.946,943,4.975,944,3.946,945,3.946,946,3.946,947,3.946]],["title/modules.html",[92,1.869]],["body/modules.html",[20,0.028,50,0.028,51,0.028,91,2.653,92,1.997,599,2.955,602,2.653,603,2.653,604,2.653,948,6.165,949,6.165,950,6.165,951,6.165]],["title/overview.html",[952,3.595]],["body/overview.html",[2,1.699,20,0.032,50,0.026,51,0.026,52,2.514,77,2.831,91,3.389,92,1.699,93,2.147,94,3.268,95,3.268,96,2.582,97,2.043,98,2.043,108,2.257,136,2.831,138,2.831,140,2.577,172,2.514,188,2.514,599,4.027,600,3.268,601,3.268,602,3.389,603,3.389,604,3.389,648,3.268,649,3.268,703,2.043,723,3.585,727,2.836,740,3.268,741,3.268,771,3.268,772,3.268,952,3.268]],["title/miscellaneous/typealiases.html",[878,1.152,953,3.814]],["body/miscellaneous/typealiases.html",[9,0.563,19,0.636,20,0.029,50,0.029,51,0.029,315,2.55,344,3.262,345,3.54,878,2.121,880,3.138,954,4.896]],["title/miscellaneous/variables.html",[878,1.152,955,3.177]],["body/miscellaneous/variables.html",[9,0.547,18,1.888,19,0.618,20,0.031,50,0.029,51,0.029,90,1.712,315,2.478,317,3.44,341,4.031,342,3.963,787,3.44,878,2.061,880,3.049,882,3.963,955,3.963]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":163,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"coverage.html":{}}}],["0.0.2",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["0.4.23",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":188,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["1.0.2",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["100",{"_index":186,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["101",{"_index":374,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["102",{"_index":376,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["103",{"_index":378,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["17.1.1",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":185,"title":{},"body":{"injectables/AccountService.html":{}}}],["2",{"_index":717,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["2.0.0",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["2.10.0",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":380,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["201",{"_index":382,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["202",{"_index":384,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["203",{"_index":386,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["204",{"_index":388,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["205",{"_index":390,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["206",{"_index":392,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["3",{"_index":720,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["3.0.2",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":190,"title":{},"body":{"injectables/AccountService.html":{}}}],["300",{"_index":394,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["301",{"_index":396,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["302",{"_index":398,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["303",{"_index":400,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["304",{"_index":402,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["307",{"_index":404,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["308",{"_index":406,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":172,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["4.0.0",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":408,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["401",{"_index":410,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["402",{"_index":412,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["403",{"_index":414,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["404",{"_index":484,"title":{},"body":{"classes/ApiResponse.html":{}}}],["405",{"_index":416,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["406",{"_index":418,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["407",{"_index":420,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["408",{"_index":422,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["409",{"_index":488,"title":{},"body":{"classes/ApiResponse.html":{}}}],["410",{"_index":424,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["411",{"_index":426,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["412",{"_index":428,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["413",{"_index":430,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["414",{"_index":432,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["415",{"_index":434,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["416",{"_index":436,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["417",{"_index":438,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["418",{"_index":440,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["42",{"_index":192,"title":{},"body":{"injectables/AccountService.html":{}}}],["421",{"_index":442,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["422",{"_index":444,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["424",{"_index":446,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["428",{"_index":448,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["429",{"_index":450,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["48",{"_index":194,"title":{},"body":{"injectables/AccountService.html":{}}}],["5",{"_index":723,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["5.0.1",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":452,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["501",{"_index":454,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["502",{"_index":456,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["503",{"_index":458,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["504",{"_index":460,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["505",{"_index":462,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["5432",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":175,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["6.0.13",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["6.16.1",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["6.7.1",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["62",{"_index":197,"title":{},"body":{"injectables/AccountService.html":{}}}],["7",{"_index":727,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["7.4.0",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":178,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["8.0.0",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["81",{"_index":200,"title":{},"body":{"injectables/AccountService.html":{}}}],["9",{"_index":169,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["9.0.1",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["a.indexof(v",{"_index":257,"title":{},"body":{"injectables/AccountService.html":{}}}],["accepted",{"_index":383,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["accessors",{"_index":323,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"coverage.html":{}}}],["account.company_name",{"_index":207,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.controller",{"_index":101,"title":{},"body":{"modules/AccountModule.html":{}}}],["account.model",{"_index":104,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{}}}],["account.person_name",{"_index":203,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.push(accountresult",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.service",{"_index":78,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{}}}],["accountcontroller",{"_index":53,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"coverage.html":{}}}],["accountdatalist",{"_index":122,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdatalist.length",{"_index":218,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdatalist.push(account",{"_index":209,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdate",{"_index":180,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdatestr",{"_index":167,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem",{"_index":164,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.ben_code",{"_index":243,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.card",{"_index":239,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.date",{"_index":241,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(0",{"_index":187,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(1",{"_index":168,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(19",{"_index":189,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(30",{"_index":191,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(42",{"_index":193,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(48",{"_index":196,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(62",{"_index":199,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.time",{"_index":244,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.value",{"_index":246,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountlist",{"_index":157,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountlist.length",{"_index":162,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountmodel",{"_index":118,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountmodule",{"_index":91,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accountresult",{"_index":247,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountresult.total",{"_index":284,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountresult.transaction.push",{"_index":274,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountservice",{"_index":77,"title":{"injectables/AccountService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"coverage.html":{},"overview.html":{}}}],["accounttotal",{"_index":279,"title":{},"body":{"injectables/AccountService.html":{}}}],["accounttoupdate",{"_index":238,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountvalue",{"_index":183,"title":{},"body":{"injectables/AccountService.html":{}}}],["aliases",{"_index":954,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":287,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["already",{"_index":501,"title":{},"body":{"classes/ApiResponse.html":{}}}],["aluguel",{"_index":730,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["ambiguous",{"_index":393,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["ao",{"_index":895,"title":{},"body":{"index.html":{}}}],["apenas",{"_index":922,"title":{},"body":{"index.html":{}}}],["api",{"_index":319,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase",{"_index":75,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.apiresponse",{"_index":296,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{}}}],["apibase.error('missing",{"_index":151,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.error(`fail",{"_index":249,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.error(`filter",{"_index":678,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["apibase.error(data",{"_index":524,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.error(result.$data",{"_index":215,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.exception(error",{"_index":530,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.exception(ex",{"_index":228,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.getapienv",{"_index":593,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.handlehttpresponse",{"_index":87,"title":{},"body":{"controllers/AccountController.html":{}}}],["apibase.log(msg",{"_index":560,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.logexception(`exception",{"_index":569,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.logexception(msg",{"_index":584,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.objectserialize(data",{"_index":527,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.objectserialize(msg",{"_index":566,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.registererror(apiexception.message",{"_index":554,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.registererror(msg",{"_index":570,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.registererror(new",{"_index":564,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.status.error_null_parameter",{"_index":153,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.status.failed",{"_index":251,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.status.internal_server_error",{"_index":313,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["apibase.status.success",{"_index":214,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{}}}],["apibase.success(account",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.success(result",{"_index":671,"title":{},"body":{"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.success(result.$data",{"_index":223,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.success(true",{"_index":224,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["apibase.sucess(body",{"_index":517,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apierror",{"_index":533,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apierror.$data",{"_index":550,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apierror.$haserror",{"_index":553,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apierror.$status",{"_index":551,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception",{"_index":532,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception.message",{"_index":539,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception.name",{"_index":537,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception.stack",{"_index":541,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apihttpresponse",{"_index":345,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apiresponse",{"_index":314,"title":{"classes/ApiResponse.html":{}},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiresponse.$data",{"_index":473,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresponse.$status",{"_index":466,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult",{"_index":520,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult.$data",{"_index":521,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult.$haserror",{"_index":523,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult.$status",{"_index":522,"title":{},"body":{"classes/ApiResponse.html":{}}}],["app_filter",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":599,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":298,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arquivo",{"_index":924,"title":{},"body":{"index.html":{}}}],["async",{"_index":59,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["atenção",{"_index":504,"title":{},"body":{"classes/ApiResponse.html":{}}}],["autoloadmodels",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":88,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["axios",{"_index":534,"title":{},"body":{"classes/ApiResponse.html":{}}}],["bad",{"_index":480,"title":{},"body":{"classes/ApiResponse.html":{}}}],["bad_gateway",{"_index":455,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["bad_request",{"_index":407,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["bcrypt",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["belongsto",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["ben_code",{"_index":11,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["body",{"_index":71,"title":{},"body":{"controllers/AccountController.html":{}}}],["boleto",{"_index":718,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["boolean",{"_index":326,"title":{},"body":{"classes/ApiResponse.html":{}}}],["bootstrap",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":165,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{}}}],["browse",{"_index":951,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":948,"title":{},"body":{"modules.html":{}}}],["card",{"_index":12,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["case",{"_index":467,"title":{},"body":{"classes/ApiResponse.html":{}}}],["catch",{"_index":225,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["catch(exception",{"_index":295,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"classes/HttpResponse.html":{},"classes/Person.html":{},"classes/Transaction.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"classes/HttpResponse.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"overview.html":{}}}],["clone",{"_index":898,"title":{},"body":{"index.html":{}}}],["cluster_accountmodule",{"_index":94,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":95,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":648,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":649,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_personmodule",{"_index":740,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["cluster_personmodule_providers",{"_index":741,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":771,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_providers",{"_index":772,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cnab.txt",{"_index":925,"title":{},"body":{"index.html":{}}}],["code",{"_index":349,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["column",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["column({type",{"_index":33,"title":{},"body":{"classes/Account.html":{}}}],["column({unique",{"_index":767,"title":{},"body":{"classes/Transaction.html":{}}}],["comandos",{"_index":905,"title":{},"body":{"index.html":{}}}],["company",{"_index":43,"title":{"classes/Company.html":{}},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["company.model",{"_index":652,"title":{},"body":{"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["company.name",{"_index":673,"title":{},"body":{"injectables/CompanyService.html":{}}}],["company.service",{"_index":651,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company/company.model",{"_index":44,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{}}}],["company/company.service",{"_index":139,"title":{},"body":{"injectables/AccountService.html":{}}}],["company_name",{"_index":198,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["companydata",{"_index":235,"title":{},"body":{"injectables/AccountService.html":{}}}],["companydata.id",{"_index":240,"title":{},"body":{"injectables/AccountService.html":{}}}],["companydata.name",{"_index":266,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyid",{"_index":13,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["companyidlist",{"_index":259,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyidlist.length",{"_index":260,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyitem",{"_index":254,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist",{"_index":127,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist.find(item",{"_index":205,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist.length",{"_index":216,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist.push",{"_index":208,"title":{},"body":{"injectables/AccountService.html":{}}}],["companymodel",{"_index":660,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companymodule",{"_index":602,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules.html":{},"overview.html":{}}}],["companyname",{"_index":665,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companyservice",{"_index":138,"title":{"injectables/CompanyService.html":{}},"body":{"injectables/AccountService.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"coverage.html":{},"overview.html":{}}}],["companyservice(company",{"_index":230,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyservice.findcompany(accountitem.company_name",{"_index":234,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyservice.findcompany(null",{"_index":265,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyservice.findorcreatecompany(companyitem",{"_index":255,"title":{},"body":{"injectables/AccountService.html":{}}}],["compodoc",{"_index":942,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":910,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["conflict",{"_index":487,"title":{},"body":{"classes/ApiResponse.html":{}}}],["const",{"_index":154,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["constructor(accountmodel",{"_index":116,"title":{},"body":{"injectables/AccountService.html":{}}}],["constructor(companymodel",{"_index":658,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(personmodel",{"_index":749,"title":{},"body":{"injectables/PersonService.html":{}}}],["constructor(private",{"_index":83,"title":{},"body":{"controllers/AccountController.html":{}}}],["constructor(transactionmodel",{"_index":777,"title":{},"body":{"injectables/TransactionService.html":{}}}],["continue",{"_index":372,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":52,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"coverage.html":{},"overview.html":{}}}],["controller(\"account",{"_index":82,"title":{},"body":{"controllers/AccountController.html":{}}}],["controllers",{"_index":54,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["cookie",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":781,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":250,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["created",{"_index":381,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["createperson",{"_index":655,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["createperson(company",{"_index":661,"title":{},"body":{"injectables/CompanyService.html":{}}}],["createperson(person",{"_index":752,"title":{},"body":{"injectables/PersonService.html":{}}}],["crédito",{"_index":722,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["ctx",{"_index":303,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":306,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":308,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["data",{"_index":320,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["data(value",{"_index":515,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["database",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["dataerror",{"_index":535,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["dataerror.hasownproperty(\"message",{"_index":556,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror.hasownproperty('response",{"_index":536,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['message",{"_index":540,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['name",{"_index":557,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data",{"_index":543,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['error",{"_index":547,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['error'].join",{"_index":549,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['error'].length",{"_index":548,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['errors",{"_index":544,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['errors'].join",{"_index":546,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['errors'].length",{"_index":545,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['status",{"_index":552,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['statustext",{"_index":538,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['stack",{"_index":542,"title":{},"body":{"classes/ApiResponse.html":{}}}],["datatype",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["datatype.decimal",{"_index":49,"title":{},"body":{"classes/Account.html":{}}}],["date",{"_index":14,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["date(`${transformdate[0]}/${transformdate[1]}/${transformdate[2",{"_index":181,"title":{},"body":{"injectables/AccountService.html":{}}}],["day",{"_index":179,"title":{},"body":{"injectables/AccountService.html":{}}}],["debug",{"_index":568,"title":{},"body":{"classes/ApiResponse.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["default",{"_index":317,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":674,"title":{},"body":{"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["dependencies",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":591,"title":{},"body":{"classes/ApiResponse.html":{}}}],["desafio",{"_index":891,"title":{},"body":{"index.html":{}}}],["description",{"_index":316,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":892,"title":{},"body":{"index.html":{}}}],["deve",{"_index":900,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["disponível",{"_index":926,"title":{},"body":{"index.html":{}}}],["disponóvel",{"_index":946,"title":{},"body":{"index.html":{}}}],["doc",{"_index":729,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["docker",{"_index":909,"title":{},"body":{"index.html":{}}}],["docs",{"_index":947,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":943,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":343,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dotenv.config",{"_index":595,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dotenv/config",{"_index":301,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["due",{"_index":491,"title":{},"body":{"classes/ApiResponse.html":{}}}],["débito",{"_index":715,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["earlyhints",{"_index":377,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["em",{"_index":927,"title":{},"body":{"index.html":{}}}],["empréstimo",{"_index":725,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["encontra",{"_index":944,"title":{},"body":{"index.html":{}}}],["entrada",{"_index":716,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["enum",{"_index":351,"title":{},"body":{"classes/ApiResponse.html":{}}}],["enumerations",{"_index":879,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":596,"title":{},"body":{"classes/ApiResponse.html":{}}}],["envio",{"_index":923,"title":{},"body":{"index.html":{}}}],["environment",{"_index":592,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":477,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["error('msg",{"_index":565,"title":{},"body":{"classes/ApiResponse.html":{}}}],["error(apibase.objectserialize(msg)).stack",{"_index":575,"title":{},"body":{"classes/ApiResponse.html":{}}}],["error(data",{"_index":526,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["error_already_registered",{"_index":371,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_conflict",{"_index":362,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_duplicated_data",{"_index":357,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_invalid_parameter",{"_index":355,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_invalid_request",{"_index":368,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_job_execution_failed",{"_index":369,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_max_attempts",{"_index":361,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_not_found",{"_index":356,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_null_parameter",{"_index":353,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_null_value",{"_index":354,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_promisify_failed",{"_index":364,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_repository_begin",{"_index":359,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_repository_end",{"_index":360,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_truncated_data",{"_index":358,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_unkown_event",{"_index":363,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["errordata",{"_index":572,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["errordata.message",{"_index":579,"title":{},"body":{"classes/ApiResponse.html":{}}}],["errordata.name",{"_index":577,"title":{},"body":{"classes/ApiResponse.html":{}}}],["errordata.stack",{"_index":581,"title":{},"body":{"classes/ApiResponse.html":{}}}],["errorresponse",{"_index":309,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ex",{"_index":226,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["example",{"_index":350,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["exception",{"_index":300,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["exception(dataerror",{"_index":531,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["exception.$status",{"_index":312,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.filter",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["exception.filter.ts",{"_index":289,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":299,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.filter.ts:7",{"_index":294,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":291,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["executado",{"_index":902,"title":{},"body":{"index.html":{}}}],["existing",{"_index":492,"title":{},"body":{"classes/ApiResponse.html":{}}}],["expectation_failed",{"_index":437,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["express",{"_index":81,"title":{},"body":{"controllers/AccountController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":62,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["failed",{"_index":352,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["failed_dependency",{"_index":445,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":512,"title":{},"body":{"classes/ApiResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"index.html":{}}}],["file.buffer.tostring",{"_index":156,"title":{},"body":{"injectables/AccountService.html":{}}}],["fileinterceptor",{"_index":79,"title":{},"body":{"controllers/AccountController.html":{}}}],["filestring",{"_index":155,"title":{},"body":{"injectables/AccountService.html":{}}}],["filestring.split(\"\\n",{"_index":158,"title":{},"body":{"injectables/AccountService.html":{}}}],["filter",{"_index":676,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["financiamento",{"_index":721,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["find",{"_index":675,"title":{},"body":{"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["findcompany",{"_index":656,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findcompany(companyname",{"_index":663,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findorcreatecompany",{"_index":657,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findorcreatecompany(company",{"_index":667,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findorcreateperson",{"_index":747,"title":{},"body":{"injectables/PersonService.html":{}}}],["findorcreateperson(person",{"_index":754,"title":{},"body":{"injectables/PersonService.html":{}}}],["findperson",{"_index":748,"title":{},"body":{"injectables/PersonService.html":{}}}],["findperson(personname",{"_index":756,"title":{},"body":{"injectables/PersonService.html":{}}}],["findtransaction",{"_index":776,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findtransaction(transactiontype",{"_index":735,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["foram",{"_index":932,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":413,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["foreignkey",{"_index":39,"title":{},"body":{"classes/Account.html":{}}}],["form",{"_index":938,"title":{},"body":{"index.html":{}}}],["found",{"_index":397,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["function",{"_index":463,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{}}}],["functions",{"_index":881,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway_timeout",{"_index":459,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["general",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["get$data",{"_index":333,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["get$haserror",{"_index":337,"title":{},"body":{"classes/ApiResponse.html":{}}}],["get$message",{"_index":686,"title":{},"body":{"classes/HttpResponse.html":{}}}],["get$reason",{"_index":692,"title":{},"body":{"classes/HttpResponse.html":{}}}],["get$status",{"_index":328,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["getapienv",{"_index":594,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":889,"title":{"index.html":{}},"body":{}}],["gone",{"_index":423,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["handled",{"_index":507,"title":{},"body":{"classes/ApiResponse.html":{}}}],["handlehttpresponse",{"_index":799,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlehttpresponse(apiresponse",{"_index":464,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["hapi/joi",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["haserror",{"_index":321,"title":{},"body":{"classes/ApiResponse.html":{}}}],["haserror(value",{"_index":516,"title":{},"body":{"classes/ApiResponse.html":{}}}],["helmet",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":297,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["host.switchtohttp",{"_index":304,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http",{"_index":348,"title":{},"body":{"classes/ApiResponse.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["http://localhost:3050/api/v1/account/cnab",{"_index":917,"title":{},"body":{"index.html":{}}}],["http_version_not_supported",{"_index":461,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["httpresponse",{"_index":344,"title":{"classes/HttpResponse.html":{}},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["https://github.com/bycoderstec/desafio",{"_index":928,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":525,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["i_am_a_teapot",{"_index":439,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["iaccount",{"_index":120,"title":{"interfaces/IAccount.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"coverage.html":{}}}],["iaccountdata",{"_index":144,"title":{"interfaces/IAccountData.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"coverage.html":{}}}],["icompany",{"_index":125,"title":{"interfaces/ICompany.html":{}},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ICompany.html":{},"coverage.html":{}}}],["id",{"_index":677,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["identifier",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":290,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["imports",{"_index":105,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":508,"title":{},"body":{"classes/ApiResponse.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["injectmodel",{"_index":135,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["injectmodel(account",{"_index":148,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectmodel(company",{"_index":669,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectmodel(person",{"_index":759,"title":{},"body":{"injectables/PersonService.html":{}}}],["injectmodel(transaction",{"_index":711,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["install",{"_index":913,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":519,"title":{},"body":{"classes/ApiResponse.html":{}}}],["interface",{"_index":702,"title":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{}},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["interface/iaccount",{"_index":145,"title":{},"body":{"injectables/AccountService.html":{}}}],["interface/icompany",{"_index":147,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{}}}],["interface/iperson",{"_index":146,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PersonService.html":{}}}],["interfaces",{"_index":703,"title":{},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"overview.html":{}}}],["internal",{"_index":475,"title":{},"body":{"classes/ApiResponse.html":{}}}],["internal_server_error",{"_index":451,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":494,"title":{},"body":{"classes/ApiResponse.html":{}}}],["inválida",{"_index":506,"title":{},"body":{"classes/ApiResponse.html":{}}}],["iperson",{"_index":129,"title":{"interfaces/IPerson.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/IPerson.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["isglobal",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["item",{"_index":281,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.companyid",{"_index":263,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.companyid).filter((v",{"_index":256,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.name",{"_index":206,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.person_name",{"_index":202,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.value",{"_index":283,"title":{},"body":{"injectables/AccountService.html":{}}}],["itransaction",{"_index":707,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["jwt",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":939,"title":{},"body":{"index.html":{}}}],["length_required",{"_index":425,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["limit",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["line",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["localhost",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":559,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["log(msg",{"_index":561,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["logdata",{"_index":576,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logexception",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logexception(msg",{"_index":585,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["logger",{"_index":293,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{}}}],["logger.error(`${data",{"_index":529,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logger.error(logdata",{"_index":582,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logger.error(msg",{"_index":586,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logger.log(data",{"_index":567,"title":{},"body":{"classes/ApiResponse.html":{}}}],["loggermodule",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":578,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["message(value",{"_index":700,"title":{},"body":{"classes/HttpResponse.html":{}}}],["metadata",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["method_not_allowed",{"_index":415,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["methods",{"_index":57,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["miscellaneous",{"_index":878,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misdirected",{"_index":441,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["model",{"_index":8,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["module",{"_index":90,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module/account/account.module",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["module/company/company.module",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["module/person/person.module",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["module/transaction/transaction.module",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":92,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["moment",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["mongoose",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["month",{"_index":176,"title":{},"body":{"injectables/AccountService.html":{}}}],["moved_permanently",{"_index":395,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["msg",{"_index":563,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["msg.stack",{"_index":574,"title":{},"body":{"classes/ApiResponse.html":{}}}],["msgdata",{"_index":573,"title":{},"body":{"classes/ApiResponse.html":{}}}],["multer",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["mysql2",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["na",{"_index":906,"title":{},"body":{"index.html":{}}}],["name",{"_index":66,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ICompany.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":347,"title":{},"body":{"classes/ApiResponse.html":{}}}],["nature",{"_index":709,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["necessário",{"_index":921,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":74,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":80,"title":{},"body":{"controllers/AccountController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":619,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":103,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":159,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"coverage.html":{}}}],["newrelic",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["next",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextfunction",{"_index":887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["no_content",{"_index":387,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["nodemailer",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["non_authoritative_information",{"_index":385,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["not_acceptable",{"_index":417,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["not_implemented",{"_index":453,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["not_modified",{"_index":401,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["npm",{"_index":912,"title":{},"body":{"index.html":{}}}],["null",{"_index":268,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["number",{"_index":27,"title":{},"body":{"classes/Account.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["o",{"_index":897,"title":{},"body":{"index.html":{}}}],["object",{"_index":258,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["object.assign({},exception",{"_index":310,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["objectserialize",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectserialize(data",{"_index":588,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["operation",{"_index":269,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{}}}],["operation.ben_code",{"_index":277,"title":{},"body":{"injectables/AccountService.html":{}}}],["operation.card",{"_index":278,"title":{},"body":{"injectables/AccountService.html":{}}}],["operation.date",{"_index":276,"title":{},"body":{"injectables/AccountService.html":{}}}],["operation.value",{"_index":271,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationbycompany",{"_index":261,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationbycompany.length",{"_index":264,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationbycompany.reduce((sum",{"_index":280,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationvalue",{"_index":270,"title":{},"body":{"injectables/AccountService.html":{}}}],["optional",{"_index":67,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["optionsinterceptor",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optionsinterceptor(req",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opção",{"_index":937,"title":{},"body":{"index.html":{}}}],["os",{"_index":903,"title":{},"body":{"index.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["overview",{"_index":952,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":804,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":152,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["parsefloat(accountitem.substring(9",{"_index":184,"title":{},"body":{"injectables/AccountService.html":{}}}],["parsefloat(operationvalue",{"_index":272,"title":{},"body":{"injectables/AccountService.html":{}}}],["parser",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["partial_content",{"_index":391,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["passos",{"_index":894,"title":{},"body":{"index.html":{}}}],["passport",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["pasta",{"_index":907,"title":{},"body":{"index.html":{}}}],["payload_too_large",{"_index":429,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["payment_required",{"_index":411,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["permanent_redirect",{"_index":405,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["person",{"_index":45,"title":{"classes/Person.html":{}},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["person.model",{"_index":744,"title":{},"body":{"modules/PersonModule.html":{},"injectables/PersonService.html":{}}}],["person.person_name",{"_index":762,"title":{},"body":{"injectables/PersonService.html":{}}}],["person.service",{"_index":743,"title":{},"body":{"modules/PersonModule.html":{}}}],["person/person.model",{"_index":46,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{}}}],["person/person.service",{"_index":137,"title":{},"body":{"injectables/AccountService.html":{}}}],["person_name",{"_index":195,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/IPerson.html":{}}}],["persondata",{"_index":232,"title":{},"body":{"injectables/AccountService.html":{}}}],["persondata.id",{"_index":242,"title":{},"body":{"injectables/AccountService.html":{}}}],["personid",{"_index":15,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"injectables/PersonService.html":{}}}],["personitem",{"_index":252,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist",{"_index":131,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist.find(item",{"_index":201,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist.length",{"_index":210,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist.push",{"_index":204,"title":{},"body":{"injectables/AccountService.html":{}}}],["personmodel",{"_index":751,"title":{},"body":{"injectables/PersonService.html":{}}}],["personmodule",{"_index":603,"title":{"modules/PersonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PersonModule.html":{},"modules.html":{},"overview.html":{}}}],["personname",{"_index":758,"title":{},"body":{"injectables/PersonService.html":{}}}],["personservice",{"_index":136,"title":{"injectables/PersonService.html":{}},"body":{"injectables/AccountService.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{},"overview.html":{}}}],["personservice(person",{"_index":229,"title":{},"body":{"injectables/AccountService.html":{}}}],["personservice.findorcreateperson(personitem",{"_index":253,"title":{},"body":{"injectables/AccountService.html":{}}}],["personservice.findperson(accountitem.person_name",{"_index":231,"title":{},"body":{"injectables/AccountService.html":{}}}],["pg",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["pino",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["port",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":70,"title":{},"body":{"controllers/AccountController.html":{},"index.html":{}}}],["post(\"cnab",{"_index":84,"title":{},"body":{"controllers/AccountController.html":{}}}],["post('cnab')@useinterceptors(undefined",{"_index":63,"title":{},"body":{"controllers/AccountController.html":{}}}],["postgres",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":941,"title":{},"body":{"index.html":{}}}],["postman",{"_index":936,"title":{},"body":{"index.html":{}}}],["pra",{"_index":918,"title":{},"body":{"index.html":{}}}],["precondition_failed",{"_index":427,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["precondition_required",{"_index":447,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":56,"title":{},"body":{"controllers/AccountController.html":{}}}],["prepare",{"_index":182,"title":{},"body":{"injectables/AccountService.html":{}}}],["primarykey",{"_index":769,"title":{},"body":{"classes/Transaction.html":{}}}],["primeiros",{"_index":893,"title":{},"body":{"index.html":{}}}],["private",{"_index":110,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["process",{"_index":490,"title":{},"body":{"classes/ApiResponse.html":{}}}],["process.env.node_env",{"_index":597,"title":{},"body":{"classes/ApiResponse.html":{}}}],["process.env.node_env.tolowercase",{"_index":598,"title":{},"body":{"classes/ApiResponse.html":{}}}],["processing",{"_index":375,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["programa",{"_index":935,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":899,"title":{},"body":{"index.html":{}}}],["promise",{"_index":69,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["promise_timeout",{"_index":370,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["provide",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":100,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["proxy_authentication_required",{"_index":419,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["public",{"_index":58,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["rails/blob/master/cnab.txt",{"_index":930,"title":{},"body":{"index.html":{}}}],["raiz",{"_index":908,"title":{},"body":{"index.html":{}}}],["reached",{"_index":499,"title":{},"body":{"classes/ApiResponse.html":{}}}],["reader",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":292,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["realizados",{"_index":933,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":896,"title":{},"body":{"index.html":{}}}],["realização",{"_index":919,"title":{},"body":{"index.html":{}}}],["reason",{"_index":681,"title":{},"body":{"classes/HttpResponse.html":{}}}],["reason(value",{"_index":701,"title":{},"body":{"classes/HttpResponse.html":{}}}],["recebimento",{"_index":724,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["reflect",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["registeraccount",{"_index":111,"title":{},"body":{"injectables/AccountService.html":{}}}],["registeraccount(accountdatalist",{"_index":119,"title":{},"body":{"injectables/AccountService.html":{}}}],["registercnab",{"_index":60,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["registercnab(file",{"_index":61,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["registercompany",{"_index":112,"title":{},"body":{"injectables/AccountService.html":{}}}],["registercompany(companylist",{"_index":124,"title":{},"body":{"injectables/AccountService.html":{}}}],["registered",{"_index":502,"title":{},"body":{"classes/ApiResponse.html":{}}}],["registererror",{"_index":583,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registererror(msg",{"_index":571,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["registerperson",{"_index":113,"title":{},"body":{"injectables/AccountService.html":{}}}],["registerperson(personlist",{"_index":128,"title":{},"body":{"injectables/AccountService.html":{}}}],["registertransaction",{"_index":713,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["req",{"_index":888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["request",{"_index":305,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["request_canceled_by_client",{"_index":365,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["request_timeout",{"_index":421,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["requested_range_not_satisfiable",{"_index":435,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["require('util",{"_index":342,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/variables.html":{}}}],["requisição",{"_index":505,"title":{},"body":{"classes/ApiResponse.html":{}}}],["res",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["reset_content",{"_index":389,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["resource",{"_index":485,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response",{"_index":307,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["response.$data",{"_index":472,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.$message",{"_index":469,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.$reason",{"_index":471,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.$status",{"_index":470,"title":{},"body":{"classes/ApiResponse.html":{}}}],["rest/httpresponse",{"_index":346,"title":{},"body":{"classes/ApiResponse.html":{}}}],["result",{"_index":211,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["result.$data",{"_index":233,"title":{},"body":{"injectables/AccountService.html":{}}}],["result.$status",{"_index":213,"title":{},"body":{"injectables/AccountService.html":{}}}],["resultaccount",{"_index":134,"title":{},"body":{"injectables/AccountService.html":{}}}],["resultaccount.filter(item",{"_index":262,"title":{},"body":{"injectables/AccountService.html":{}}}],["resultaccount.length",{"_index":221,"title":{},"body":{"injectables/AccountService.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":86,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":68,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["rotas",{"_index":916,"title":{},"body":{"index.html":{}}}],["ruby",{"_index":929,"title":{},"body":{"index.html":{}}}],["run",{"_index":914,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["saída",{"_index":719,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["schedulemodule",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["scope",{"_index":318,"title":{},"body":{"classes/ApiResponse.html":{}}}],["se",{"_index":945,"title":{},"body":{"index.html":{}}}],["see_other",{"_index":399,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["seguintes",{"_index":904,"title":{},"body":{"index.html":{}}}],["sequelize",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"dependencies.html":{},"index.html":{}}}],["sequelizemodule",{"_index":102,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["sequelizemodule.forfeature([account",{"_index":106,"title":{},"body":{"modules/AccountModule.html":{}}}],["sequelizemodule.forfeature([company",{"_index":653,"title":{},"body":{"modules/CompanyModule.html":{}}}],["sequelizemodule.forfeature([person",{"_index":745,"title":{},"body":{"modules/PersonModule.html":{}}}],["sequelizemodule.forfeature([transaction",{"_index":775,"title":{},"body":{"modules/TransactionModule.html":{}}}],["sequelizemodule.forroot",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["ser",{"_index":901,"title":{},"body":{"index.html":{}}}],["serialize",{"_index":587,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":476,"title":{},"body":{"classes/ApiResponse.html":{}}}],["server_operation_canceled",{"_index":367,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["server_operation_timeout",{"_index":366,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["service_unavailable",{"_index":457,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["set",{"_index":513,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["set$data(value",{"_index":335,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["set$haserror(value",{"_index":339,"title":{},"body":{"classes/ApiResponse.html":{}}}],["set$message(value",{"_index":688,"title":{},"body":{"classes/HttpResponse.html":{}}}],["set$reason(value",{"_index":694,"title":{},"body":{"classes/HttpResponse.html":{}}}],["set$status(value",{"_index":330,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["shared/all",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["showhidden",{"_index":590,"title":{},"body":{"classes/ApiResponse.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["src/.../apibase.ts",{"_index":880,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../options.middleware.ts",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["src/interface/iaccount.ts",{"_index":704,"title":{},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"coverage.html":{}}}],["src/interface/icompany.ts",{"_index":705,"title":{},"body":{"interfaces/ICompany.html":{},"coverage.html":{}}}],["src/interface/iperson.ts",{"_index":706,"title":{},"body":{"interfaces/IPerson.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/module/account/account.controller.ts",{"_index":55,"title":{},"body":{"controllers/AccountController.html":{},"coverage.html":{}}}],["src/module/account/account.controller.ts:18",{"_index":64,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/module/account/account.model.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/module/account/account.model.ts:11",{"_index":29,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:14",{"_index":35,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:17",{"_index":26,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:20",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:23",{"_index":25,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:26",{"_index":30,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:29",{"_index":28,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:8",{"_index":32,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.module.ts",{"_index":99,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/module/account/account.service.ts",{"_index":109,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/module/account/account.service.ts:105",{"_index":121,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:148",{"_index":130,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:165",{"_index":126,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:18",{"_index":117,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:182",{"_index":133,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:24",{"_index":123,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/company/company.model.ts",{"_index":646,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/module/company/company.model.ts:6",{"_index":647,"title":{},"body":{"classes/Company.html":{}}}],["src/module/company/company.module.ts",{"_index":650,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/module/company/company.service.ts",{"_index":654,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/module/company/company.service.ts:16",{"_index":662,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/company/company.service.ts:26",{"_index":668,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/company/company.service.ts:43",{"_index":664,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/company/company.service.ts:9",{"_index":659,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/person/person.model.ts",{"_index":738,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["src/module/person/person.model.ts:6",{"_index":739,"title":{},"body":{"classes/Person.html":{}}}],["src/module/person/person.module.ts",{"_index":742,"title":{},"body":{"modules/PersonModule.html":{}}}],["src/module/person/person.service.ts",{"_index":746,"title":{},"body":{"injectables/PersonService.html":{},"coverage.html":{}}}],["src/module/person/person.service.ts:15",{"_index":753,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/person/person.service.ts:25",{"_index":755,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/person/person.service.ts:42",{"_index":757,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/person/person.service.ts:9",{"_index":750,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/transaction/transaction.model.ts",{"_index":764,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/module/transaction/transaction.model.ts:12",{"_index":765,"title":{},"body":{"classes/Transaction.html":{}}}],["src/module/transaction/transaction.model.ts:15",{"_index":766,"title":{},"body":{"classes/Transaction.html":{}}}],["src/module/transaction/transaction.model.ts:9",{"_index":768,"title":{},"body":{"classes/Transaction.html":{}}}],["src/module/transaction/transaction.module.ts",{"_index":773,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/module/transaction/transaction.service.ts",{"_index":708,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/module/transaction/transaction.service.ts:14",{"_index":778,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/module/transaction/transaction.service.ts:20",{"_index":780,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/module/transaction/transaction.service.ts:52",{"_index":779,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/shared/all",{"_index":288,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/shared/middleware/options.middleware.ts",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/apibase.ts",{"_index":315,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/utils/apibase.ts:187",{"_index":327,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:188",{"_index":325,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:189",{"_index":324,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:197",{"_index":329,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:201",{"_index":331,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:205",{"_index":334,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:209",{"_index":336,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:213",{"_index":338,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:217",{"_index":340,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/rest/httpresponse.ts",{"_index":680,"title":{},"body":{"classes/HttpResponse.html":{},"coverage.html":{}}}],["src/utils/rest/httpresponse.ts:14",{"_index":687,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:18",{"_index":689,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:2",{"_index":683,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:22",{"_index":690,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:26",{"_index":691,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:3",{"_index":685,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:30",{"_index":693,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:34",{"_index":695,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:38",{"_index":696,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:4",{"_index":684,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:42",{"_index":697,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:5",{"_index":682,"title":{},"body":{"classes/HttpResponse.html":{}}}],["stack",{"_index":580,"title":{},"body":{"classes/ApiResponse.html":{}}}],["start:dev",{"_index":915,"title":{},"body":{"index.html":{}}}],["started",{"_index":890,"title":{"index.html":{}},"body":{}}],["statements",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":322,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["status(value",{"_index":514,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["status.error_conflict",{"_index":486,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_duplicated_data",{"_index":500,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_invalid_parameter",{"_index":493,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_invalid_request",{"_index":503,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_not_found",{"_index":482,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_null_parameter",{"_index":479,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_null_value",{"_index":481,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.exception",{"_index":478,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.failed",{"_index":474,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.internal_server_error",{"_index":558,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.no_content",{"_index":483,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.promise_timeout",{"_index":497,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.request_timeout",{"_index":496,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.server_operation_timeout",{"_index":495,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.success",{"_index":468,"title":{},"body":{"classes/ApiResponse.html":{}}}],["statuscode",{"_index":311,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["success",{"_index":379,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["success(data",{"_index":518,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":282,"title":{},"body":{"injectables/AccountService.html":{}}}],["support",{"_index":949,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":950,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":465,"title":{},"body":{"classes/ApiResponse.html":{}}}],["switching_protocols",{"_index":373,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["synchronize",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"coverage.html":{}}}],["table({tablename",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["tecnologias",{"_index":940,"title":{},"body":{"index.html":{}}}],["ted",{"_index":728,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["temporary_redirect",{"_index":403,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["teste",{"_index":920,"title":{},"body":{"index.html":{}}}],["testes",{"_index":931,"title":{},"body":{"index.html":{}}}],["this.accountmodel.create(accounttoupdate",{"_index":248,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountmodel.findall",{"_index":220,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountservice.registercnab(file",{"_index":89,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.companymodel.create(company",{"_index":670,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.findone",{"_index":679,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.findorcreate",{"_index":672,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.data",{"_index":510,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["this.haserror",{"_index":511,"title":{},"body":{"classes/ApiResponse.html":{}}}],["this.logger",{"_index":302,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.message",{"_index":698,"title":{},"body":{"classes/HttpResponse.html":{}}}],["this.personmodel.create(person",{"_index":760,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personmodel.findone",{"_index":763,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personmodel.findorcreate",{"_index":761,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.reason",{"_index":699,"title":{},"body":{"classes/HttpResponse.html":{}}}],["this.registeraccount(accountdatalist",{"_index":219,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.registercompany(companylist",{"_index":217,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.registerperson(personlist",{"_index":212,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.status",{"_index":509,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["this.totalize(resultaccount",{"_index":222,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.transactionmodel.findone",{"_index":736,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["this.transactionmodel.findorcreate",{"_index":731,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["throttlermodule",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":227,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["time",{"_index":16,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["timeout",{"_index":498,"title":{},"body":{"classes/ApiResponse.html":{}}}],["title",{"_index":562,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["too_many_requests",{"_index":449,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["total",{"_index":267,"title":{},"body":{"injectables/AccountService.html":{}}}],["totalize",{"_index":114,"title":{},"body":{"injectables/AccountService.html":{}}}],["totalize(resultaccount",{"_index":132,"title":{},"body":{"injectables/AccountService.html":{}}}],["transaction",{"_index":142,"title":{"classes/Transaction.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transaction.model",{"_index":710,"title":{},"body":{"interfaces/ITransaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["transaction.name",{"_index":733,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transaction.nature",{"_index":734,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transaction.service",{"_index":774,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.type",{"_index":732,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transaction/transaction.model",{"_index":143,"title":{},"body":{"injectables/AccountService.html":{}}}],["transaction/transaction.service",{"_index":141,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiondata",{"_index":237,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiondata.name",{"_index":275,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiondata.type",{"_index":245,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionid",{"_index":17,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["transactionlist",{"_index":714,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transactionmodel",{"_index":712,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transactionmodule",{"_index":604,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionservice",{"_index":140,"title":{"injectables/TransactionService.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transactionservice(transaction",{"_index":160,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionservice.findtransaction(operation.transactionid",{"_index":273,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionservice.findtransaction(parseint(accountitem.transactionid",{"_index":236,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionservice.registertransaction",{"_index":161,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiontype",{"_index":737,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transform",{"_index":166,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate",{"_index":170,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate.push(accountdatestr.substring(0",{"_index":171,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate.push(accountdatestr.substring(4",{"_index":174,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate.push(accountdatestr.substring(6",{"_index":177,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformer",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":528,"title":{},"body":{"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Transaction.html":{}}}],["try",{"_index":150,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["ts",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":953,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror",{"_index":555,"title":{},"body":{"classes/ApiResponse.html":{}}}],["typeof",{"_index":149,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["typescript",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"dependencies.html":{}}}],["unable",{"_index":489,"title":{},"body":{"classes/ApiResponse.html":{}}}],["unauthorized",{"_index":409,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/HttpResponse.html":{}}}],["unique",{"_index":770,"title":{},"body":{"classes/Transaction.html":{}}}],["unprocessable_entity",{"_index":443,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["unsupported_media_type",{"_index":433,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["up",{"_index":911,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":73,"title":{},"body":{"controllers/AccountController.html":{}}}],["uri_too_long",{"_index":431,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["useclass",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":72,"title":{},"body":{"controllers/AccountController.html":{}}}],["useinterceptors(fileinterceptor(\"file",{"_index":85,"title":{},"body":{"controllers/AccountController.html":{}}}],["username",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":341,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.inspect(data",{"_index":589,"title":{},"body":{"classes/ApiResponse.html":{}}}],["utilizando",{"_index":934,"title":{},"body":{"index.html":{}}}],["utils/apibase",{"_index":76,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["validator",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":18,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":955,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendas",{"_index":726,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["void",{"_index":332,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"miscellaneous/functions.html":{}}}],["wsdl",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["xml2js",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["year",{"_index":173,"title":{},"body":{"injectables/AccountService.html":{}}}],["yes",{"_index":666,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/account/account.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ben_code\n                            \n                            \n                                card\n                            \n                            \n                                companyId\n                            \n                            \n                                date\n                            \n                            \n                                personId\n                            \n                            \n                                time\n                            \n                            \n                                transactionId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ben_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table, DataType , ForeignKey, BelongsTo} from \"sequelize-typescript\";\nimport { Company } from \"../company/company.model\";\nimport { Person } from \"../person/person.model\";\n\n@Table({tableName: 'account'})\nexport class Account extends Model {\n    @Column\n    transactionId: number;\n\n    @Column\n    date: Date;\n\n    @Column({ type: DataType.DECIMAL })\n    value: number;\n\n    @Column\n    card: string;\n\n    @Column\n    time: string;\n\n    @Column\n    ben_code: string;\n\n    @Column\n    personId: number;\n\n    @Column\n    companyId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountController.html":{"url":"controllers/AccountController.html","title":"controller - AccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/account/account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                account\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                registerCnab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        registerCnab\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCnab(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('cnab')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/module/account/account.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UseInterceptors,\n  UploadedFile,\n} from \"@nestjs/common\";\nimport { ApiBase } from \"../../utils/ApiBase\";\nimport { AccountService } from \"./account.service\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\n\n@Controller(\"account\")\nexport class AccountController {\n  constructor(private accountService: AccountService) { }\n\n  @Post(\"cnab\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  public async registerCnab( @UploadedFile() file: Express.Multer.File): Promise {\n    return ApiBase.handleHttpResponse( await this.accountService.registerCnab(file));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_providers\n\n\n\n\nAccountService\n\nAccountService\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/account/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountService } from './account.service';\nimport { AccountController } from './account.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Account } from './account.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Account])],\n  providers: [AccountService],\n  controllers: [AccountController],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/account/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerAccount\n                            \n                            \n                                    Public\n                                    Async\n                                registerCnab\n                            \n                            \n                                    Private\n                                    Async\n                                registerCompany\n                            \n                            \n                                    Private\n                                    Async\n                                registerPerson\n                            \n                            \n                                    Private\n                                    Async\n                                totalize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/account/account.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        registerAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAccount(accountDataList: IAccount[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountDataList\n                                    \n                                                IAccount[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        registerCnab\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCnab(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        registerCompany\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCompany(companyList: ICompany[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    companyList\n                                    \n                                                ICompany[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        registerPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPerson(personList: IPerson[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    personList\n                                    \n                                                IPerson[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        totalize\n                        \n                    \n                \n            \n            \n                \n                    \n                    totalize(resultAccount: Account[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resultAccount\n                                    \n                                                Account[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Account } from './account.model'\n//\nimport { PersonService } from '../person/person.service';\nimport { Person } from '../person/person.model';\nimport { CompanyService } from \"../company/company.service\";\nimport { Company } from \"../company/company.model\";\nimport { TransactionService } from \"../transaction/transaction.service\";\nimport { Transaction } from \"../transaction/transaction.model\";\nimport { IAccount, IAccountData } from \"../../interface/IAccount\";\nimport { IPerson } from \"../../interface/IPerson\";\nimport { ICompany } from \"../../interface/ICompany\";\n\n@Injectable()\nexport class AccountService {\n\tconstructor(\n\t\t@InjectModel(Account)\n\t\tprivate accountModel: typeof Account\n\t) { }\n\n\tpublic async registerCnab(file: Express.Multer.File): Promise {\n\t\ttry {\n\t\t\tif (!file) return ApiBase.error('Missing file param', ApiBase.Status.ERROR_NULL_PARAMETER);\n\n\t\t\tconst fileString = file.buffer.toString();\n\t\t\tconst accountList = fileString.split(\"\\n\");\n\n\t\t\tconst accountDataList: IAccount[] = [];\n\t\t\tconst personList: IPerson[] = [];\n\t\t\tconst companyList: ICompany[] = [];\n\n\t\t\tconst transactionService = new TransactionService(Transaction);\n\t\t\tawait transactionService.registerTransaction();\n\n\t\t\tif (accountList && accountList.length > 0) {\n\t\t\t\tfor (const accountItem of accountList) {\n\t\t\t\t\tif (!accountItem) break;\n\n\t\t\t\t\t// Transform Date\n\t\t\t\t\tconst accountDateStr = accountItem.substring(1, 9);\n\t\t\t\t\tconst transformDate = [];\n\t\t\t\t\ttransformDate.push(accountDateStr.substring(0, 4)) // Year\n\t\t\t\t\ttransformDate.push(accountDateStr.substring(4, 6)) // Month\n\t\t\t\t\ttransformDate.push(accountDateStr.substring(6, 8)) // Day\n\t\t\t\t\tconst accountDate = new Date(`${transformDate[0]}/${transformDate[1]}/${transformDate[2]}`)\n\n\t\t\t\t\t// Prepare account\n\t\t\t\t\tconst accountValue = parseFloat(accountItem.substring(9, 19)) / 100;\n\t\t\t\t\tconst account: IAccount = {\n\t\t\t\t\t\ttransactionId: accountItem.substring(0, 1),\n\t\t\t\t\t\tdate: accountDate,\n\t\t\t\t\t\tvalue: accountValue,\n\t\t\t\t\t\tben_code: accountItem.substring(19, 30),\n\t\t\t\t\t\tcard: accountItem.substring(30, 42),\n\t\t\t\t\t\ttime: accountItem.substring(42, 48),\n\t\t\t\t\t\tperson_name: accountItem.substring(48, 62),\n\t\t\t\t\t\tcompany_name: accountItem.substring(62, 81)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!personList.find(item => item.person_name === account.person_name)) {\n\t\t\t\t\t\tpersonList.push({\n\t\t\t\t\t\t\tperson_name: account.person_name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!companyList.find(item => item.name === account.company_name)) {\n\t\t\t\t\t\tcompanyList.push({ name: account.company_name });\n\t\t\t\t\t}\n\n\t\t\t\t\taccountDataList.push(account);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (personList && personList.length > 0) {\n\t\t\t\tconst result = await this.registerPerson(personList);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t}\n\n\t\t\tif (companyList && companyList.length > 0) {\n\t\t\t\tconst result = await this.registerCompany(companyList);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t}\n\n\t\t\tif (accountDataList && accountDataList.length > 0) {\n\t\t\t\tconst result = await this.registerAccount(accountDataList);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t}\n\n\t\t\tconst resultAccount = await this.accountModel.findAll({})\n\t\t\tif (resultAccount && resultAccount.length > 0) {\n\t\t\t\tconst result = await this.totalize(resultAccount);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\treturn ApiBase.success(result.$data);\n\t\t\t}\n\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async registerAccount(accountDataList: IAccount[]): Promise {\n\t\ttry {\n\t\t\tif (accountDataList.length  0) {\n\t\t\t\tconst personService = new PersonService(Person);\n\t\t\t\tconst companyService = new CompanyService(Company);\n\t\t\t\tconst transactionService = new TransactionService(Transaction);\n\n\t\t\t\tfor (const accountItem of accountDataList) {\n\t\t\t\t\tlet result = await personService.findPerson(accountItem.person_name);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\tconst personData = result.$data;\n\n\t\t\t\t\tresult = await companyService.findCompany(accountItem.company_name);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\tconst companyData = result.$data\n\n\t\t\t\t\tresult = await transactionService.findTransaction(parseInt(accountItem.transactionId));\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\tconst transactionData = result.$data\n\n\t\t\t\t\tconst accountToUpdate: IAccountData = {\n\t\t\t\t\t\tcard: accountItem.card,\n\t\t\t\t\t\tcompanyId: companyData.id,\n\t\t\t\t\t\tdate: accountItem.date,\n\t\t\t\t\t\tpersonId: personData.id,\n\t\t\t\t\t\tben_code: accountItem.ben_code,\n\t\t\t\t\t\ttime: accountItem.time,\n\t\t\t\t\t\ttransactionId: transactionData.type,\n\t\t\t\t\t\tvalue: accountItem.value\n\t\t\t\t\t}\n\n\t\t\t\t\tconst accountResult = await this.accountModel.create(accountToUpdate);\n\t\t\t\t\tif (!accountResult) return ApiBase.error(`Fail to create account`, ApiBase.Status.FAILED);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async registerPerson(personList: IPerson[]): Promise {\n\t\ttry {\n\t\t\tif (personList.length  0) {\n\t\t\t\tfor (const personItem of personList) {\n\t\t\t\t\tconst result = await personService.findOrCreatePerson(personItem);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async registerCompany(companyList: ICompany[]): Promise {\n\t\ttry {\n\t\t\tif (companyList.length  0) {\n\t\t\t\tfor (const companyItem of companyList) {\n\t\t\t\t\tconst result = await companyService.findOrCreateCompany(companyItem);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async totalize(resultAccount: Account[]): Promise {\n\t\ttry {\n\t\t\tif (resultAccount.length  item.companyId).filter((v, i, a) => a.indexOf(v) === i);\n\t\t\tconst account: object[] = []\n\n\t\t\tif (companyIdList && companyIdList.length > 0) {\n\t\t\t\tfor (const companyId of companyIdList) {\n\t\t\t\t\tconst operationByCompany = resultAccount.filter(item => item.companyId === companyId);\n\t\t\t\t\tif (operationByCompany && operationByCompany.length > 0) {\n\n\t\t\t\t\t\tconst companyService = new CompanyService(Company);\n\t\t\t\t\t\tlet result = await companyService.findCompany(null, companyId);\n\t\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\t\tconst companyData: ICompany = result.$data;\n\n\t\t\t\t\t\tconst accountResult = {\n\t\t\t\t\t\t\tcompany: companyData.name,\n\t\t\t\t\t\t\ttransaction: [],\n\t\t\t\t\t\t\ttotal: null\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const operation of operationByCompany) {\n\t\t\t\t\t\t\tconst operationValue: any = operation.value;\n\t\t\t\t\t\t\toperation.value = parseFloat(operationValue);\n\n\t\t\t\t\t\t\tconst transactionService = new TransactionService(Transaction);\n\t\t\t\t\t\t\tresult = await transactionService.findTransaction(operation.transactionId)\n\t\t\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\t\t\tconst transactionData = result.$data;\n\n\t\t\t\t\t\t\taccountResult.transaction.push({\n\t\t\t\t\t\t\t\ttype: transactionData.name,\n\t\t\t\t\t\t\t\tdate: operation.date,\n\t\t\t\t\t\t\t\tben_code: operation.ben_code,\n\t\t\t\t\t\t\t\tcard: operation.card,\n\t\t\t\t\t\t\t\tvalue: operation.value\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst accountTotal = operationByCompany.reduce((sum, item) => sum + item.value, 0);\n\t\t\t\t\t\taccountResult.total = accountTotal;\n\t\t\t\t\t\taccount.push(accountResult);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ApiBase.success(account);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/all-exception.filter.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/all-exception.filter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ApiBase.ApiResponse, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/all-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                ApiBase.ApiResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'dotenv/config';\nimport { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ApiBase } from '../utils/ApiBase';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private readonly logger : Logger \n  constructor(){\n    this.logger = new Logger \n  }\n  catch(exception: ApiBase.ApiResponse, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    const errorResponse = Object.assign({},exception );\n    const statusCode = (exception && exception.$status && exception.$status >= 100) ? exception.$status : ApiBase.Status.INTERNAL_SERVER_ERROR;\n    if (exception && exception.$status && exception.$status \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiResponse.html":{"url":"classes/ApiResponse.html","title":"class - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/ApiBase.ts\n        \n\n\n            \n                Description\n            \n            \n                Default response scope for API.\nreturn Promise\nReturn\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                hasError\n                            \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    $status\n                                \n                                \n                                    $data\n                                \n                                \n                                    $hasError\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/ApiBase.ts:189\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/ApiBase.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/ApiBase.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/ApiBase.ts:187\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        $status\n                    \n                \n\n                \n                    \n                        get$status()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:197\n                                \n                            \n\n                \n                    \n                        set$status(value: Status)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:201\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Status\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $data\n                    \n                \n\n                \n                    \n                        get$data()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:205\n                                \n                            \n\n                \n                    \n                        set$data(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:209\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $hasError\n                    \n                \n\n                \n                    \n                        get$hasError()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:213\n                                \n                            \n\n                \n                    \n                        set$hasError(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:217\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        const util = require('util');\nimport { Logger } from '@nestjs/common';\n\nimport * as dotenv from 'dotenv';\nimport { HttpResponse as ApiHttpResponse } from './rest/HttpResponse';\n//\n\nexport namespace ApiBase {\n\n    export type HttpResponse = ApiHttpResponse;\n\n    /**\n     * Default response http status code.\n     *\n     * @example\n     * `return ApiBase.Status.SUCCESS`\n     * \n     * Return\n     * @returns status HTTP.\n     */\n    export const enum Status {\n        FAILED = 0,\n        EXCEPTION,\n        ERROR_NULL_PARAMETER,\n        ERROR_NULL_VALUE,\n        ERROR_INVALID_PARAMETER,\n        ERROR_NOT_FOUND,\n        ERROR_DUPLICATED_DATA,\n        ERROR_TRUNCATED_DATA,\n        ERROR_REPOSITORY_BEGIN,\n        ERROR_REPOSITORY_END,\n        ERROR_MAX_ATTEMPTS,\n        ERROR_CONFLICT,\n        ERROR_UNKOWN_EVENT,\n        ERROR_PROMISIFY_FAILED,\n        REQUEST_CANCELED_BY_CLIENT,\n        SERVER_OPERATION_TIMEOUT,\n        SERVER_OPERATION_CANCELED,\n        ERROR_INVALID_REQUEST,\n        ERROR_JOB_EXECUTION_FAILED,\n        PROMISE_TIMEOUT,\n        ERROR_ALREADY_REGISTERED,\n        CONTINUE = 100,\n        SWITCHING_PROTOCOLS = 101,\n        PROCESSING = 102,\n        EARLYHINTS = 103,\n        SUCCESS = 200,\n        CREATED = 201,\n        ACCEPTED = 202,\n        NON_AUTHORITATIVE_INFORMATION = 203,\n        NO_CONTENT = 204,\n        RESET_CONTENT = 205,\n        PARTIAL_CONTENT = 206,\n        AMBIGUOUS = 300,\n        MOVED_PERMANENTLY = 301,\n        FOUND = 302,\n        SEE_OTHER = 303,\n        NOT_MODIFIED = 304,\n        TEMPORARY_REDIRECT = 307,\n        PERMANENT_REDIRECT = 308,\n        BAD_REQUEST = 400,\n        UNAUTHORIZED = 401,\n        PAYMENT_REQUIRED = 402,\n        FORBIDDEN = 403,\n        METHOD_NOT_ALLOWED = 405,\n        NOT_ACCEPTABLE = 406,\n        PROXY_AUTHENTICATION_REQUIRED = 407,\n        REQUEST_TIMEOUT = 408,\n        GONE = 410,\n        LENGTH_REQUIRED = 411,\n        PRECONDITION_FAILED = 412,\n        PAYLOAD_TOO_LARGE = 413,\n        URI_TOO_LONG = 414,\n        UNSUPPORTED_MEDIA_TYPE = 415,\n        REQUESTED_RANGE_NOT_SATISFIABLE = 416,\n        EXPECTATION_FAILED = 417,\n        I_AM_A_TEAPOT = 418,\n        MISDIRECTED = 421,\n        UNPROCESSABLE_ENTITY = 422,\n        FAILED_DEPENDENCY = 424,\n        PRECONDITION_REQUIRED = 428,\n        TOO_MANY_REQUESTS = 429,\n        INTERNAL_SERVER_ERROR = 500,\n        NOT_IMPLEMENTED = 501,\n        BAD_GATEWAY = 502,\n        SERVICE_UNAVAILABLE = 503,\n        GATEWAY_TIMEOUT = 504,\n        HTTP_VERSION_NOT_SUPPORTED = 505\n    }\n\n    export function handleHttpResponse(apiResponse: ApiBase.ApiResponse): ApiHttpResponse {\n        try {\n            const response = new ApiHttpResponse();\n            switch (apiResponse.$status) {\n                case Status.SUCCESS:\n                    response.$message = 'Success';\n                    response.$status = 200;\n                    response.$reason = null;\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.FAILED:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Failed';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.EXCEPTION:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Exception';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_NULL_PARAMETER:\n                    response.$message = 'Bad Request';\n                    response.$status = 400;\n                    response.$reason = 'Null parameters';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_NULL_VALUE:\n                    response.$message = 'Bad Request';\n                    response.$status = 400;\n                    response.$reason = 'Null value';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_NOT_FOUND:\n                case Status.NO_CONTENT:\n                    response.$message = 'Not Found';\n                    response.$status = 404;\n                    response.$reason = 'Resource not found';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_CONFLICT:\n                    response.$message = 'Conflict';\n                    response.$status = 409;\n                    response.$reason = 'Unable to process request due to existing data';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_INVALID_PARAMETER:\n                    response.$message = 'Bad Request';\n                    response.$status = 400;\n                    response.$reason = 'Invalid Parameters';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.SERVER_OPERATION_TIMEOUT:\n                case Status.REQUEST_TIMEOUT:\n                case Status.PROMISE_TIMEOUT:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Server operation timeout reached';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_DUPLICATED_DATA:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Data is already registered';\n                case Status.ERROR_INVALID_REQUEST:\n                    response.$message = 'Atenção';\n                    response.$status = 400;\n                    response.$reason = 'Requisição inválida';\n                    response.$data = apiResponse.$data;\n                    break;\n                default:\n                    response.$message = 'Internal Server Error';\n                    response.$status = apiResponse.$status;\n                    response.$reason = 'Internal error not handled';\n                    response.$data = apiResponse.$data;\n                    break;\n            }\n            return response;\n        } catch (ex) {\n            throw ex;\n        }\n    }\n\n    /**\n     * Default response scope for API.\n     *\n     * @example\n     * `return Promise`\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * @returns hasError indicator.\n     */\n    export class ApiResponse {\n        private status: Status;\n        private data: any;\n        private hasError: boolean;\n\n        constructor() {\n            this.status = null;\n            this.data = null;\n            this.hasError = false;\n        }\n\n        public get $status(): Status {\n            return this.status;\n        }\n\n        public set $status(value: Status) {\n            this.status = value;\n        }\n\n        public get $data(): any {\n            return this.data;\n        }\n\n        public set $data(value: any) {\n            this.data = value;\n        }\n\n        public get $hasError(): boolean {\n            return this.hasError;\n        }\n\n        public set $hasError(value: boolean) {\n            this.hasError = value;\n        }\n    }\n\n    /**\n     * API success.\n     *\n     * @example\n     * `return ApiBase.sucess(body)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * \n     */\n    export function success(data: any): ApiResponse {\n\n        if (data instanceof ApiResponse) return data;\n\n        const apiResult = new ApiResponse();\n        apiResult.$data = data;\n        apiResult.$status = Status.SUCCESS;\n        apiResult.$hasError = false;\n\n        return apiResult;\n    }\n\n    /**\n     * API error.\n     *\n     * @example\n     * `return ApiBase.error(data, statusCode)`\n     *\n     * @param data string or object.\n     * @param statusCode HttpStatus.\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * \n     */\n    export function error(data: any, statusCode: Status): ApiResponse {\n        const apiResult = new ApiResponse();\n        apiResult.$data = (typeof data == 'object') ? ApiBase.objectSerialize(data) : data;\n        apiResult.$status = statusCode;\n        apiResult.$hasError = true;\n\n        if (statusCode !== Status.ERROR_NOT_FOUND) {\n            const logger = new Logger\n            logger.error(`${data}`, `API ERROR - ${statusCode}`);\n        }\n\n        return apiResult;\n    }\n\n    /**\n     * API exception.\n     *\n     * @example\n     * `return ApiBase.exception(error)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * \n     */\n    export function exception(dataError: any): ApiResponse {\n        try {\n            const apiException = new Error();\n            const apiError = new ApiResponse();\n\n            // Error by Http request (ex: axios)\n            if (dataError && dataError.hasOwnProperty('response')) {\n                apiException.name = dataError['response']['statusText'];\n                apiException.message = dataError['message'];\n                apiException.stack = dataError['stack'];\n                if (dataError['response']['data'] && dataError['response']['data']['errors'] && dataError['response']['data']['errors'].length > 0) {\n                    apiException.message = dataError['response']['data']['errors'].join(\" - \")\n                } else if (dataError['response']['data'] && dataError['response']['data']['error'] && dataError['response']['data']['error'].length > 0){\n                    apiException.message = dataError['response']['data']['error'].join(\" - \")\n                } else if (dataError['response']['data']) {\n                    apiException.message = dataError['response']['data'];\n                }\n\n                apiError.$data = apiException;\n                apiError.$status = dataError['response']['status'];\n                apiError.$hasError = true;\n\n                ApiBase.registerError(apiException.message, apiException.stack);\n\n                return apiError;\n            }\n\n            // Internal Error\n            if (dataError instanceof TypeError || dataError.hasOwnProperty(\"message\") ) {\n                apiException.message = dataError['message'];\n                apiException.name = dataError['name'];\n                apiException.stack = dataError['stack'];\n\n                apiError.$data = apiException;\n                apiError.$status = Status.INTERNAL_SERVER_ERROR;\n                apiError.$hasError = true;\n\n                ApiBase.registerError(apiException.message, apiException.stack);\n\n                return apiError;\n            }\n\n            return dataError;\n        } catch (ex) {\n            return ex;\n        }\n    }\n\n    /**\n     * API log.\n     *\n     * @example\n     * `return ApiBase.log(msg)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns void.\n     */\n    export function log(msg: object | string, title?: string): void {\n        try {\n            if (!msg) {\n                ApiBase.registerError(new Error('msg is NULL'));\n                return;\n            }\n\n            const data = (typeof (msg) === 'object') ? ApiBase.objectSerialize(msg) : msg;\n\n            const logger = new Logger\n            logger.log(data, (title) ? title : 'Debug');\n\n        } catch (ex) {\n            ApiBase.logException(`Exception on function log(): ${ex}`);\n        }\n    }\n\n    /**\n     * API log error\n     *\n     * @example\n     * `return ApiBase.registerError(msg)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns void.\n     */\n\n    export function registerError(msg: object | string, errorData?: any): void {\n        try {\n            if (!msg) return;\n\n            const logger = new Logger\n            let msgData = null;\n            if (typeof (msg) === 'object') {\n                if (msg instanceof Error) {\n                    msgData = msg.stack;\n                } else {\n                    msgData = new Error(ApiBase.objectSerialize(msg)).stack;\n                }\n            } else {\n                msgData = msg;\n            }\n            const logData = {\n                msg: msgData,\n                errorData: (errorData && errorData instanceof Error) ? { name: errorData.name, message: errorData.message, stack: errorData.stack } : errorData\n            }\n\n            logger.error(logData, 'API ERROR');\n        } catch (ex) {\n            ApiBase.logException(`Exception on function registerError(): ${ex}`);\n        }\n    }\n\n    /**\n     * API log error\n     *\n     * @example\n     * `return ApiBase.logException(msg)`\n     *\n     * @param data string.\n     * \n     * Return\n     * @returns void.\n     */\n    export function logException(msg: string): void {\n        if (!msg) return;\n\n        const logger = new Logger\n        logger.error(msg, 'Exception');\n    }\n\n    /**\n     * API object serialize\n     *\n     * @example\n     * `return ApiBase.objectSerialize(data)`\n     *\n     * @param data string.\n     * @param data Function.\n     * \n     * Return\n     * @returns string.\n     */\n    export function objectSerialize(data: object | Function): string {\n        return util.inspect(data, { showHidden: true, depth: null });\n    }\n\n    /**\n     * API environment\n     *\n     * @example\n     * `return ApiBase.getApiEnv()`\n     *\n     * Return\n     * @returns string.\n     */\n    export function getApiEnv(): string {\n        dotenv.config();\n        const env = process.env.NODE_ENV ? process.env.NODE_ENV.toLowerCase() : null\n        return env;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccountModule\n\nAccountModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            PersonModule\n                        \n                        \n                            TransactionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // General import\nimport { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { AllExceptionsFilter } from './shared/all-exception.filter';\nimport { SequelizeModule } from '@nestjs/sequelize';\n// Module import\nimport { ConfigModule } from '@nestjs/config';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { LoggerModule } from 'nestjs-pino';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { AccountModule } from './module/account/account.module';\nimport { CompanyModule } from './module/company/company.module';\nimport { PersonModule } from './module/person/person.module';\nimport { TransactionModule } from './module/transaction/transaction.module';\n\n@Module({\n\timports: [\n\t\tAccountModule,\n\t\tCompanyModule,\n\t\tPersonModule,\n\t\tTransactionModule,\n\t\tLoggerModule.forRoot(),\n\t\tConfigModule.forRoot({\n\t\t\tisGlobal: true,\n\t\t}),\n\t\tThrottlerModule.forRoot({\n\t\t\tttl: 60,\n\t\t\tlimit: 10,\n\t\t}),\n\t\tScheduleModule.forRoot(),\n\t\tSequelizeModule.forRoot({\n\t\t\tdialect: 'postgres',\n\t\t\thost: 'localhost',\n\t\t\tport: 5432,\n\t\t\tusername: 'postgres',\n\t\t\tpassword: 'postgres',\n\t\t\tdatabase: 'postgres',\n\t\t\tautoLoadModels: true,\n\t\t\tsynchronize: true,\n\t\t  })],\n\tcontrollers: [],\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: AllExceptionsFilter,\n\t\t},\n\t],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/company/company.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/company/company.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table } from \"sequelize-typescript\";\n\n@Table({tableName: 'company'})\nexport class Company extends Model {\n    @Column\n    name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService\n\nCompanyService\n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/company/company.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Company } from './company.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Company])],\n  providers: [CompanyService],\n  controllers: [],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/company/company.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createPerson\n                            \n                            \n                                    Public\n                                    Async\n                                findCompany\n                            \n                            \n                                    Public\n                                    Async\n                                findOrCreateCompany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/company/company.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPerson(company: Company)\n                \n            \n\n\n            \n                \n                    Defined in src/module/company/company.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    company\n                                    \n                                                Company\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findCompany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCompany(companyName?: string, companyId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/module/company/company.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    companyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    companyId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOrCreateCompany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrCreateCompany(company: ICompany)\n                \n            \n\n\n            \n                \n                    Defined in src/module/company/company.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    company\n                                    \n                                                ICompany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Company } from './company.model'\nimport { ICompany } from \"../../interface/ICompany\";\n\n@Injectable()\nexport class CompanyService  {\n\tconstructor(\n        @InjectModel(Company)\n        private companyModel: typeof Company\n    ) {}\n\n\n\tpublic async createPerson(company: Company): Promise {\n\t\ttry {\n\t\t\tconst result = await this.companyModel.create(company);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findOrCreateCompany(company: ICompany): Promise {\n\t\ttry {\n\t\t\tconst result = await this.companyModel.findOrCreate({\n\t\t\t\twhere: { name: company.name },\n\t\t\t\tdefaults: {\n\t\t\t\t\tname: company.name\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find or create company >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findCompany(companyName?: string, companyId?: number): Promise {\n\t\ttry {\n\n\t\t\tconst filter = (companyName) ? { name: companyName } : (companyId) ? { id: companyId } : null;\n\t\t\tif (!filter) return ApiBase.error(`Filter param is null`, ApiBase.Status.FAILED);\n\n\t\t\tconst result = await this.companyModel.findOne({\n\t\t\t\twhere: filter\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find company >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpResponse.html":{"url":"classes/HttpResponse.html","title":"class - HttpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/rest/HttpResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                message\n                            \n                            \n                                    Private\n                                reason\n                            \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    $message\n                                \n                                \n                                    $status\n                                \n                                \n                                    $reason\n                                \n                                \n                                    $data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/rest/HttpResponse.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        $message\n                    \n                \n\n                \n                    \n                        get$message()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:14\n                                \n                            \n\n                \n                    \n                        set$message(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $status\n                    \n                \n\n                \n                    \n                        get$status()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:22\n                                \n                            \n\n                \n                    \n                        set$status(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $reason\n                    \n                \n\n                \n                    \n                        get$reason()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:30\n                                \n                            \n\n                \n                    \n                        set$reason(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $data\n                    \n                \n\n                \n                    \n                        get$data()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:38\n                                \n                            \n\n                \n                    \n                        set$data(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export class HttpResponse {\n    private message: string;\n    private status: number;\n    private reason: any;\n    private data: any;\n\n    constructor() {\n        this.message = undefined;\n        this.status = undefined;\n        this.reason = undefined;\n        this.data = undefined;\n    }\n\n    public get $message(): string {\n        return this.message;\n    }\n\n    public set $message(value: string) {\n        this.message = value;\n    }\n\n    public get $status(): number {\n        return this.status;\n    }\n\n    public set $status(value: number) {\n        this.status = value;\n    }\n\n    public get $reason(): any {\n        return this.reason;\n    }\n\n    public set $reason(value: any) {\n        this.reason = value;\n    }\n\n    public get $data(): any {\n        return this.data;\n    }\n\n    public set $data(value: any) {\n        this.data = value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccount.html":{"url":"interfaces/IAccount.html","title":"interface - IAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/IAccount.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ben_code\n                                        \n                                \n                                \n                                        \n                                            card\n                                        \n                                \n                                \n                                        \n                                            company_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            person_name\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            transactionId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ben_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ben_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        card:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        person_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        person_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAccount {\n\ttransactionId: string;\n\tdate: Date;\n\tcompany_name: string;\n\tben_code: string;\n\tperson_name: string;\n\tvalue: number;\n\tcard: string;\n\ttime: string;\n}\n\nexport interface IAccountData {\n\ttransactionId: number;\n\tdate: Date;\n\tvalue: number;\n\tcard: string;\n\tben_code: string;\n\ttime: string;\n\tpersonId: number;\n\tcompanyId: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccountData.html":{"url":"interfaces/IAccountData.html","title":"interface - IAccountData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccountData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/IAccount.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ben_code\n                                        \n                                \n                                \n                                        \n                                            card\n                                        \n                                \n                                \n                                        \n                                            companyId\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            personId\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            transactionId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ben_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ben_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        card:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        companyId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        personId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAccount {\n\ttransactionId: string;\n\tdate: Date;\n\tcompany_name: string;\n\tben_code: string;\n\tperson_name: string;\n\tvalue: number;\n\tcard: string;\n\ttime: string;\n}\n\nexport interface IAccountData {\n\ttransactionId: number;\n\tdate: Date;\n\tvalue: number;\n\tcard: string;\n\tben_code: string;\n\ttime: string;\n\tpersonId: number;\n\tcompanyId: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICompany.html":{"url":"interfaces/ICompany.html","title":"interface - ICompany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICompany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/ICompany.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICompany {\n\tname: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPerson.html":{"url":"interfaces/IPerson.html","title":"interface - IPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/IPerson.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            person_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        person_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        person_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPerson {\n\tperson_name: string\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/transaction/transaction.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nature\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Transaction } from './transaction.model'\n\ninterface ITransaction {\n\ttype: number;\n\tname: string;\n\tnature: string;\n}\n\n@Injectable()\nexport class TransactionService {\n\tconstructor(\n\t\t@InjectModel(Transaction)\n\t\tprivate transactionModel: typeof Transaction\n\t) { }\n\n\tpublic async registerTransaction(): Promise {\n\t\ttry {\n\t\t\tconst transactionList: ITransaction[] = [\n\t\t\t\t{ type: 1, name: 'Débito', nature: 'Entrada' },\n\t\t\t\t{ type: 2, name: 'Boleto', nature: 'Saída' },\n\t\t\t\t{ type: 3, name: 'Financiamento', nature: 'Saída' },\n\t\t\t\t{ type: 4, name: 'Crédito', nature: 'Entrada' },\n\t\t\t\t{ type: 5, name: 'Recebimento Empréstimo', nature: 'Entrada' },\n\t\t\t\t{ type: 6, name: 'Vendas', nature: 'Entrada' },\n\t\t\t\t{ type: 7, name: 'Recebimento TED', nature: 'Entrada' },\n\t\t\t\t{ type: 8, name: 'Recebimento DOC', nature: 'Entrada' },\n\t\t\t\t{ type: 9, name: 'Aluguel', nature: 'Saída' }\n\t\t\t]\n\n\t\t\tfor (const transaction of transactionList) {\n\t\t\t\tconst result = await this.transactionModel.findOrCreate({\n\t\t\t\t\twhere: { type: transaction.type },\n\t\t\t\t\tdefaults: {\n\t\t\t\t\t\ttype: transaction.type,\n\t\t\t\t\t\tname: transaction.name,\n\t\t\t\t\t\tnature: transaction.nature\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\n\tpublic async findTransaction(transactionType: number): Promise {\n\t\ttry {\n\t\t\tconst result = await this.transactionModel.findOne({\n\t\t\t\twhere: { type: transactionType }\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find transaction type >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/person/person.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/person/person.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table } from \"sequelize-typescript\";\n\n@Table({tableName: 'person'})\nexport class Person extends Model {\n    @Column\n    name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonModule.html":{"url":"modules/PersonModule.html","title":"module - PersonModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\n\nPersonService\n\nPersonService\n\n\n\nPersonModule\n\nPersonModule\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/person/person.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PersonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PersonService } from './person.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Person } from './person.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Person])],\n  providers: [PersonService],\n  controllers: [],\n})\nexport class PersonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonService.html":{"url":"injectables/PersonService.html","title":"injectable - PersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/person/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createPerson\n                            \n                            \n                                    Public\n                                    Async\n                                findOrCreatePerson\n                            \n                            \n                                    Public\n                                    Async\n                                findPerson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(personModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/person/person.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPerson(person: Person)\n                \n            \n\n\n            \n                \n                    Defined in src/module/person/person.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOrCreatePerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrCreatePerson(person: IPerson)\n                \n            \n\n\n            \n                \n                    Defined in src/module/person/person.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                IPerson\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPerson(personName?: string, personId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/module/person/person.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    personName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    personId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Person } from './person.model'\nimport { IPerson } from \"../../interface/IPerson\";\n\n@Injectable()\nexport class PersonService {\n\tconstructor(\n\t\t@InjectModel(Person)\n\t\tprivate personModel: typeof Person\n\t) { }\n\n\tpublic async createPerson(person: Person): Promise {\n\t\ttry {\n\t\t\tconst result = await this.personModel.create(person);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findOrCreatePerson(person: IPerson): Promise {\n\t\ttry {\n\t\t\tconst result = await this.personModel.findOrCreate({\n\t\t\t\twhere: { name: person.person_name },\n\t\t\t\tdefaults: {\n\t\t\t\t\tname: person.person_name\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find or create person >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findPerson(personName?: string, personId?: number): Promise {\n\t\ttry {\n\t\t\tconst filter = (personName) ? { name: personName } : (personId) ? { id: personId } : null;\n\t\t\tif (!filter) return ApiBase.error(`Filter param is null`, ApiBase.Status.FAILED);\n\n\t\t\tconst result = await this.personModel.findOne({\n\t\t\t\twhere: filter\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find person >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/transaction/transaction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                nature\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/transaction/transaction.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/transaction/transaction.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/transaction/transaction.model.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table, PrimaryKey } from \"sequelize-typescript\";\n\n @Table({tableName: 'transaction'})\nexport class Transaction extends Model {\n    @Column({ \n        unique: true,\n    })\n    //@PrimaryKey\n    type: number;\n\n    @Column\n    name: string;\n\n    @Column\n    nature: string;\n} \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nTransactionService\n\nTransactionService\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/transaction/transaction.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionService } from './transaction.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Transaction } from './transaction.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Transaction])],\n  providers: [TransactionService],\n  controllers: [],\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/transaction/transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findTransaction\n                            \n                            \n                                    Public\n                                    Async\n                                registerTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/transaction/transaction.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTransaction(transactionType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/module/transaction/transaction.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        registerTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/module/transaction/transaction.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Transaction } from './transaction.model'\n\ninterface ITransaction {\n\ttype: number;\n\tname: string;\n\tnature: string;\n}\n\n@Injectable()\nexport class TransactionService {\n\tconstructor(\n\t\t@InjectModel(Transaction)\n\t\tprivate transactionModel: typeof Transaction\n\t) { }\n\n\tpublic async registerTransaction(): Promise {\n\t\ttry {\n\t\t\tconst transactionList: ITransaction[] = [\n\t\t\t\t{ type: 1, name: 'Débito', nature: 'Entrada' },\n\t\t\t\t{ type: 2, name: 'Boleto', nature: 'Saída' },\n\t\t\t\t{ type: 3, name: 'Financiamento', nature: 'Saída' },\n\t\t\t\t{ type: 4, name: 'Crédito', nature: 'Entrada' },\n\t\t\t\t{ type: 5, name: 'Recebimento Empréstimo', nature: 'Entrada' },\n\t\t\t\t{ type: 6, name: 'Vendas', nature: 'Entrada' },\n\t\t\t\t{ type: 7, name: 'Recebimento TED', nature: 'Entrada' },\n\t\t\t\t{ type: 8, name: 'Recebimento DOC', nature: 'Entrada' },\n\t\t\t\t{ type: 9, name: 'Aluguel', nature: 'Saída' }\n\t\t\t]\n\n\t\t\tfor (const transaction of transactionList) {\n\t\t\t\tconst result = await this.transactionModel.findOrCreate({\n\t\t\t\t\twhere: { type: transaction.type },\n\t\t\t\t\tdefaults: {\n\t\t\t\t\t\ttype: transaction.type,\n\t\t\t\t\t\tname: transaction.name,\n\t\t\t\t\t\tnature: transaction.nature\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\n\tpublic async findTransaction(transactionType: number): Promise {\n\t\ttry {\n\t\t\tconst result = await this.transactionModel.findOne({\n\t\t\t\twhere: { type: transactionType }\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find transaction type >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/interface/IAccount.ts\n            \n            interface\n            IAccount\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interface/IAccount.ts\n            \n            interface\n            IAccountData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interface/ICompany.ts\n            \n            interface\n            ICompany\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interface/IPerson.ts\n            \n            interface\n            IPerson\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/account/account.controller.ts\n            \n            controller\n            AccountController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/account/account.model.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/module/account/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/module/company/company.model.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/person/person.model.ts\n            \n            class\n            Person\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/person/person.service.ts\n            \n            injectable\n            PersonService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/transaction/transaction.model.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/transaction/transaction.service.ts\n            \n            interface\n            ITransaction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/all-exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/middleware/options.middleware.ts\n            \n            function\n            OptionsInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            class\n            ApiResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            error\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            exception\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            getApiEnv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            handleHttpResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            logException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            objectSerialize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            registerError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            variable\n            util\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/rest/HttpResponse.ts\n            \n            class\n            HttpResponse\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-modules/mailer : ^1.6.0\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.2.3\n        \n            @nestjs/config : ^1.1.2\n        \n            @nestjs/core : ^8.2.3\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.1\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.3\n        \n            @nestjs/schedule : ^1.0.2\n        \n            @nestjs/sequelize : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/throttler : ^2.0.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            handlebars : ^4.7.7\n        \n            helmet : ^4.6.0\n        \n            line-reader : ^0.4.0\n        \n            moment : ^2.29.1\n        \n            mongodb : ^4.2.2\n        \n            mongoose : ^6.0.13\n        \n            multer : ^1.4.3\n        \n            multer-s3 : ^2.10.0\n        \n            mysql2 : ^2.3.3\n        \n            nestjs-newrelic : 0.0.2\n        \n            nestjs-pino : ^2.3.1\n        \n            nodemailer : ^6.7.1\n        \n            passport : ^0.5.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.7.3\n        \n            pino-http : ^6.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.4.0\n        \n            sequelize : ^6.16.1\n        \n            sequelize-typescript : ^2.1.3\n        \n            wsdl-to-ts : ^0.2.3\n        \n            xml2js : ^0.4.23\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Status   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/ApiBase.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            Default response http status code.\n\n                        \n                    \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                 EXCEPTION\n                            \n                        \n                        \n                            \n                                 ERROR_NULL_PARAMETER\n                            \n                        \n                        \n                            \n                                 ERROR_NULL_VALUE\n                            \n                        \n                        \n                            \n                                 ERROR_INVALID_PARAMETER\n                            \n                        \n                        \n                            \n                                 ERROR_NOT_FOUND\n                            \n                        \n                        \n                            \n                                 ERROR_DUPLICATED_DATA\n                            \n                        \n                        \n                            \n                                 ERROR_TRUNCATED_DATA\n                            \n                        \n                        \n                            \n                                 ERROR_REPOSITORY_BEGIN\n                            \n                        \n                        \n                            \n                                 ERROR_REPOSITORY_END\n                            \n                        \n                        \n                            \n                                 ERROR_MAX_ATTEMPTS\n                            \n                        \n                        \n                            \n                                 ERROR_CONFLICT\n                            \n                        \n                        \n                            \n                                 ERROR_UNKOWN_EVENT\n                            \n                        \n                        \n                            \n                                 ERROR_PROMISIFY_FAILED\n                            \n                        \n                        \n                            \n                                 REQUEST_CANCELED_BY_CLIENT\n                            \n                        \n                        \n                            \n                                 SERVER_OPERATION_TIMEOUT\n                            \n                        \n                        \n                            \n                                 SERVER_OPERATION_CANCELED\n                            \n                        \n                        \n                            \n                                 ERROR_INVALID_REQUEST\n                            \n                        \n                        \n                            \n                                 ERROR_JOB_EXECUTION_FAILED\n                            \n                        \n                        \n                            \n                                 PROMISE_TIMEOUT\n                            \n                        \n                        \n                            \n                                 ERROR_ALREADY_REGISTERED\n                            \n                        \n                        \n                            \n                                 CONTINUE\n                            \n                        \n                        \n                            \n                                Value : 100\n                            \n                        \n                        \n                            \n                                 SWITCHING_PROTOCOLS\n                            \n                        \n                        \n                            \n                                Value : 101\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 102\n                            \n                        \n                        \n                            \n                                 EARLYHINTS\n                            \n                        \n                        \n                            \n                                Value : 103\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : 201\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : 202\n                            \n                        \n                        \n                            \n                                 NON_AUTHORITATIVE_INFORMATION\n                            \n                        \n                        \n                            \n                                Value : 203\n                            \n                        \n                        \n                            \n                                 NO_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 204\n                            \n                        \n                        \n                            \n                                 RESET_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 205\n                            \n                        \n                        \n                            \n                                 PARTIAL_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 206\n                            \n                        \n                        \n                            \n                                 AMBIGUOUS\n                            \n                        \n                        \n                            \n                                Value : 300\n                            \n                        \n                        \n                            \n                                 MOVED_PERMANENTLY\n                            \n                        \n                        \n                            \n                                Value : 301\n                            \n                        \n                        \n                            \n                                 FOUND\n                            \n                        \n                        \n                            \n                                Value : 302\n                            \n                        \n                        \n                            \n                                 SEE_OTHER\n                            \n                        \n                        \n                            \n                                Value : 303\n                            \n                        \n                        \n                            \n                                 NOT_MODIFIED\n                            \n                        \n                        \n                            \n                                Value : 304\n                            \n                        \n                        \n                            \n                                 TEMPORARY_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : 307\n                            \n                        \n                        \n                            \n                                 PERMANENT_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : 308\n                            \n                        \n                        \n                            \n                                 BAD_REQUEST\n                            \n                        \n                        \n                            \n                                Value : 400\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : 401\n                            \n                        \n                        \n                            \n                                 PAYMENT_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 402\n                            \n                        \n                        \n                            \n                                 FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : 403\n                            \n                        \n                        \n                            \n                                 METHOD_NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                Value : 405\n                            \n                        \n                        \n                            \n                                 NOT_ACCEPTABLE\n                            \n                        \n                        \n                            \n                                Value : 406\n                            \n                        \n                        \n                            \n                                 PROXY_AUTHENTICATION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 407\n                            \n                        \n                        \n                            \n                                 REQUEST_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : 408\n                            \n                        \n                        \n                            \n                                 GONE\n                            \n                        \n                        \n                            \n                                Value : 410\n                            \n                        \n                        \n                            \n                                 LENGTH_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 411\n                            \n                        \n                        \n                            \n                                 PRECONDITION_FAILED\n                            \n                        \n                        \n                            \n                                Value : 412\n                            \n                        \n                        \n                            \n                                 PAYLOAD_TOO_LARGE\n                            \n                        \n                        \n                            \n                                Value : 413\n                            \n                        \n                        \n                            \n                                 URI_TOO_LONG\n                            \n                        \n                        \n                            \n                                Value : 414\n                            \n                        \n                        \n                            \n                                 UNSUPPORTED_MEDIA_TYPE\n                            \n                        \n                        \n                            \n                                Value : 415\n                            \n                        \n                        \n                            \n                                 REQUESTED_RANGE_NOT_SATISFIABLE\n                            \n                        \n                        \n                            \n                                Value : 416\n                            \n                        \n                        \n                            \n                                 EXPECTATION_FAILED\n                            \n                        \n                        \n                            \n                                Value : 417\n                            \n                        \n                        \n                            \n                                 I_AM_A_TEAPOT\n                            \n                        \n                        \n                            \n                                Value : 418\n                            \n                        \n                        \n                            \n                                 MISDIRECTED\n                            \n                        \n                        \n                            \n                                Value : 421\n                            \n                        \n                        \n                            \n                                 UNPROCESSABLE_ENTITY\n                            \n                        \n                        \n                            \n                                Value : 422\n                            \n                        \n                        \n                            \n                                 FAILED_DEPENDENCY\n                            \n                        \n                        \n                            \n                                Value : 424\n                            \n                        \n                        \n                            \n                                 PRECONDITION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 428\n                            \n                        \n                        \n                            \n                                 TOO_MANY_REQUESTS\n                            \n                        \n                        \n                            \n                                Value : 429\n                            \n                        \n                        \n                            \n                                 INTERNAL_SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n                        \n                            \n                                 NOT_IMPLEMENTED\n                            \n                        \n                        \n                            \n                                Value : 501\n                            \n                        \n                        \n                            \n                                 BAD_GATEWAY\n                            \n                        \n                        \n                            \n                                Value : 502\n                            \n                        \n                        \n                            \n                                 SERVICE_UNAVAILABLE\n                            \n                        \n                        \n                            \n                                Value : 503\n                            \n                        \n                        \n                            \n                                 GATEWAY_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : 504\n                            \n                        \n                        \n                            \n                                 HTTP_VERSION_NOT_SUPPORTED\n                            \n                        \n                        \n                            \n                                Value : 505\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            error   (src/.../ApiBase.ts)\n                        \n                        \n                            exception   (src/.../ApiBase.ts)\n                        \n                        \n                            getApiEnv   (src/.../ApiBase.ts)\n                        \n                        \n                            handleHttpResponse   (src/.../ApiBase.ts)\n                        \n                        \n                            log   (src/.../ApiBase.ts)\n                        \n                        \n                            logException   (src/.../ApiBase.ts)\n                        \n                        \n                            objectSerialize   (src/.../ApiBase.ts)\n                        \n                        \n                            OptionsInterceptor   (src/.../options.middleware.ts)\n                        \n                        \n                            registerError   (src/.../ApiBase.ts)\n                        \n                        \n                            success   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/ApiBase.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(data: any, statusCode: Status)\n                \n            \n\n\n\n\n            \n                \n                    API error.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string or object.\n\n                                    \n                                \n                                \n                                    statusCode\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HttpStatus.\nReturn\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.error(data, statusCode)\n                        \n                    \n                    \n                        Returns :         ApiResponse\n\n                    \n                    \n                        data object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exception\n                        \n                    \n                \n            \n            \n                \nexception(dataError: any)\n                \n            \n\n\n\n\n            \n                \n                    API exception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataError\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.exception(error)\n                        \n                    \n                    \n                        Returns :         ApiResponse\n\n                    \n                    \n                        data object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEnv\n                        \n                    \n                \n            \n            \n                \ngetApiEnv()\n                \n            \n\n\n\n\n            \n                \n                    API environment\n\n\n                    \n                        Example :\n                        \n                            return ApiBase.getApiEnv()\nReturn\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleHttpResponse\n                        \n                    \n                \n            \n            \n                \nhandleHttpResponse(apiResponse)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiResponse\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ApiHttpResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(msg, title?: string)\n                \n            \n\n\n\n\n            \n                \n                    API log.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.log(msg)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logException\n                        \n                    \n                \n            \n            \n                \nlogException(msg: string)\n                \n            \n\n\n\n\n            \n                \n                    API log error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.logException(msg)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectSerialize\n                        \n                    \n                \n            \n            \n                \nobjectSerialize(data)\n                \n            \n\n\n\n\n            \n                \n                    API object serialize\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.objectSerialize(data)\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerError\n                        \n                    \n                \n            \n            \n                \nregisterError(msg, errorData?: any)\n                \n            \n\n\n\n\n            \n                \n                    API log error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorData\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.registerError(msg)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(data: any)\n                \n            \n\n\n\n\n            \n                \n                    API success.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string or object.\nReturn\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.sucess(body)\n                        \n                    \n                    \n                        Returns :         ApiResponse\n\n                    \n                    \n                        data object.\n\n                    \n                \n            \n        \n    \n    src/shared/middleware/options.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OptionsInterceptor\n                        \n                    \n                \n            \n            \n                \nOptionsInterceptor(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ndesafio-dev\nPrimeiros passos\n\nAo realizar o clone do projeto deve ser executado  os seguintes comandos na pasta raiz:\n\n\n  docker-compose up\n  npm install\n  npm run start:dev\n\n\n\n\nRotas\n\nPOST: http://localhost:3050/api/v1/account/cnab\n\nPra realização do teste é necessário apenas o envio do arquivo cnab.txt (Disponível em: https://github.com/ByCodersTec/desafio-ruby-on-rails/blob/master/CNAB.txt)\nOs testes foram realizados utilizando o programa Postman, opção form-data >> KEY: file >> VALUE: arquivo\n\n\nTecnologias\n\n\n  NestJs\n  Sequelize\n  PostgreSql\n  Docker\n  Compodoc\n\n\n\nDocumentação\nA documentação encontra-se disponóvel na pasta docs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nAccountService\n\nAccountService\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nPersonService\n\nPersonService\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpResponse   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/ApiBase.ts\n    \n    \n        \n            \n                \n                    \n                    HttpResponse\n                \n            \n            \n                \n                            ApiHttpResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            util   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/utils/ApiBase.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        util\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('util')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
