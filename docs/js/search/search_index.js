var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.157,1,1.654]],["body/classes/Account.html",[0,0.161,1,2.585,2,1.409,3,0.374,4,0.374,5,0.284,6,2.709,7,2.811,8,3.181,9,0.374,10,1.347,11,3.181,12,3.181,13,2.856,14,3.555,15,2.856,16,3.181,17,3.181,18,1.969,19,0.782,20,0.033,21,1.237,22,3.417,23,4.045,24,1.824,25,3.252,26,3.252,27,2.357,28,3.252,29,3.252,30,3.252,31,3.252,32,3.252,33,3.252,34,2.709,35,3.252,36,0.979,37,1.871,38,3.252,39,3.252,40,3.252,41,1.694,42,1.871,43,1.542,44,2.709,45,1.542,46,2.709,47,2.085,48,0.374,49,3.252,50,0.023,51,0.023]],["title/controllers/AccountController.html",[52,2.035,53,2.035]],["body/controllers/AccountController.html",[0,0.19,1,2.001,3,0.442,4,0.442,5,0.47,9,0.442,19,0.499,20,0.033,22,2.211,24,1.18,36,1.118,48,0.442,50,0.025,51,0.025,52,2.463,53,3.136,54,2.001,55,3.201,56,3.842,57,2.548,58,2.332,59,2.804,60,4.484,61,3.201,62,4.484,63,3.842,64,3.842,65,1.525,66,0.994,67,1.525,68,1.525,69,2.32,70,3.201,71,3.842,72,3.842,73,4.893,74,0.994,75,1.664,76,1.822,77,2.804,78,3.201,79,3.842,80,3.201,81,3.201,82,3.842,83,3.842,84,3.842,85,3.842,86,1.525,87,3.842,88,2.001,89,3.842]],["title/modules/AccountModule.html",[90,0.975,91,1.827]],["body/modules/AccountModule.html",[0,0.203,1,2.134,3,0.472,4,0.472,5,0.358,20,0.033,36,1.177,48,0.472,50,0.026,51,0.026,53,3.554,54,2.654,74,1.06,77,3.167,78,3.414,90,1.565,91,3.499,92,1.775,93,2.207,94,3.414,95,3.414,96,2.654,97,2.134,98,2.134,99,4.098,100,2.932,101,4.098,102,2.358,103,1.37,104,3.414,105,2.358,106,4.098]],["title/injectables/AccountService.html",[77,1.654,107,1.156]],["body/injectables/AccountService.html",[0,0.063,1,2.379,3,0.147,4,0.147,5,0.317,9,0.147,11,1.782,12,1.782,13,1.875,14,2.089,15,0.736,16,1.378,17,1.378,18,1.103,19,0.511,20,0.034,21,0.602,24,1.209,36,1,43,1.019,44,1.065,45,0.606,46,1.065,48,0.147,50,0.011,51,0.011,57,1.119,58,1.204,59,2.73,60,1.79,61,1.79,62,2.316,65,1.562,66,1.082,67,1.562,68,1.442,69,2.238,74,0.331,75,0.554,76,0.606,77,1.119,86,2.182,88,2.688,103,0.428,104,1.065,107,0.783,108,0.736,109,1.065,110,2.196,111,2.149,112,2.149,113,2.149,114,2.149,115,0.931,116,1.279,117,1.279,118,2.149,119,2.149,120,2.264,121,1.279,122,3.258,123,3.935,124,1.279,125,0.82,126,2.149,127,2.264,128,1.279,129,3.258,130,2.149,131,2.091,132,1.279,133,3.258,134,2.149,135,1.279,136,2.78,137,0.736,138,1.119,139,1.279,140,1.448,141,1.279,142,1.545,143,1.279,144,1.019,145,1.279,146,1.237,147,1.279,148,1.065,149,1.065,150,1.279,151,0.666,152,1.892,153,1.279,154,0.82,155,1.279,156,2.891,157,1.279,158,1.279,159,2.78,160,1.279,161,2.682,162,2.78,163,1.279,164,1.279,165,3.508,166,2.78,167,1.065,168,1.279,169,1.279,170,1.279,171,0.925,172,1.279,173,1.279,174,0.82,175,1.279,176,1.279,177,0.925,178,1.279,179,1.279,180,0.925,181,1.279,182,2.149,183,1.279,184,1.279,185,2.149,186,1.279,187,1.279,188,0.736,189,1.279,190,0.82,191,1.279,192,1.279,193,1.279,194,1.279,195,1.279,196,1.279,197,1.378,198,1.279,199,1.279,200,0.925,201,1.279,202,1.279,203,1.279,204,1.279,205,2.149,206,1.279,207,1.279,208,1.279,209,2.149,210,1.279,211,1.279,212,2.149,213,2.792,214,1.279,215,5.639,216,4.042,217,4.851,218,2.149,219,1.279,220,2.149,221,1.279,222,1.279,223,2.149,224,1.279,225,1.279,226,2.356,227,1.722,228,1.892,229,1.892,230,2.091,231,1.279,232,2.149,233,1.279,234,1.279,235,3.633,236,1.279,237,2.149,238,1.279,239,2.149,240,1.279,241,1.279,242,1.279,243,1.279,244,1.279,245,1.279,246,1.279,247,1.279,248,1.279,249,2.78,250,1.279,251,0.736,252,0.925,253,0.736,254,1.279,255,1.279,256,1.279,257,1.279,258,1.279,259,1.279,260,0.925,261,2.149,262,1.279,263,2.78,264,1.279,265,1.279,266,1.279,267,1.279,268,1.279,269,1.279,270,0.82,271,1.065,272,1.279,273,2.78,274,1.279,275,1.279,276,1.279,277,1.279,278,1.279,279,1.279,280,1.279,281,2.149,282,1.279,283,1.065,284,1.279,285,1.279,286,1.279,287,1.279,288,1.279]],["title/classes/AllExceptionsFilter.html",[0,0.157,289,2.035]],["body/classes/AllExceptionsFilter.html",[0,0.171,2,1.495,3,0.397,4,0.397,5,0.301,9,0.397,10,1.402,19,0.593,20,0.033,24,1.57,36,1.008,48,0.397,50,0.023,51,0.023,57,2.377,65,1.369,66,0.893,67,1.369,68,1.369,74,0.893,75,1.495,76,1.636,110,2.215,115,2.215,156,2.682,161,2.212,188,1.986,227,2.579,289,2.925,290,4.532,291,2.875,292,4.563,293,5.112,294,5.112,295,4.938,296,4.563,297,4.563,298,4.259,299,4.259,300,5.439,301,3.451,302,2.942,303,3.451,304,3.451,305,3.451,306,3.451,307,2.496,308,3.451,309,2.212,310,3.451,311,3.451,312,3.451,313,2.496,314,5.657,315,3.451]],["title/classes/ApiResponse.html",[0,0.157,316,2.035]],["body/classes/ApiResponse.html",[0,0.044,2,0.385,3,0.102,4,0.102,5,0.078,9,0.102,10,0.482,18,1.378,19,0.451,20,0.034,21,1.013,24,1.248,36,0.416,48,0.515,50,0.008,51,0.008,58,1.391,65,1.154,66,0.659,67,0.837,68,1.957,69,0.744,74,0.23,75,0.385,86,2.278,110,1.685,115,0.914,151,1.099,152,1.326,154,2.494,156,2.172,161,2.604,165,1.525,167,3.51,188,0.511,216,0.74,227,1.207,228,2.026,229,0.463,260,3.45,270,2.494,271,0.74,295,3.241,298,0.74,302,1.465,307,2.103,309,2.494,313,2.323,316,2.494,317,0.463,318,0.74,319,1.841,320,1.57,321,3.145,322,3.445,323,3.472,324,3.388,325,1.308,326,1.57,327,0.889,328,3.212,329,0.889,330,0.74,331,0.889,332,0.74,333,0.889,334,2.813,335,0.74,336,0.889,337,0.74,338,0.889,339,0.889,340,0.889,341,0.889,342,0.889,343,0.643,344,0.74,345,1.57,346,0.904,347,1.841,348,0.889,349,0.889,350,2.51,351,2.423,352,3.384,353,0.889,354,1.308,355,0.74,356,0.74,357,0.74,358,0.74,359,0.74,360,0.74,361,0.74,362,0.74,363,0.74,364,0.74,365,0.74,366,0.74,367,0.74,368,0.74,369,0.74,370,0.74,371,0.74,372,0.74,373,0.74,374,0.74,375,0.74,376,0.74,377,0.74,378,0.74,379,0.74,380,0.74,381,1.352,382,1.308,383,0.74,384,0.74,385,0.74,386,0.74,387,0.74,388,0.74,389,0.74,390,0.74,391,0.74,392,0.74,393,0.74,394,0.74,395,0.74,396,0.74,397,0.74,398,0.74,399,1.757,400,0.74,401,0.74,402,0.74,403,0.74,404,0.74,405,0.74,406,0.74,407,0.74,408,0.74,409,0.74,410,2.423,411,0.74,412,0.74,413,0.74,414,0.74,415,0.74,416,0.74,417,0.74,418,0.74,419,0.74,420,0.74,421,0.74,422,0.74,423,0.74,424,0.74,425,0.74,426,0.74,427,0.74,428,0.74,429,0.74,430,0.74,431,0.74,432,0.74,433,0.74,434,0.74,435,0.74,436,0.74,437,0.74,438,0.74,439,0.74,440,0.74,441,0.74,442,0.74,443,0.74,444,0.74,445,0.74,446,0.74,447,0.74,448,0.74,449,0.74,450,0.74,451,0.74,452,0.74,453,0.74,454,2.423,455,0.74,456,0.74,457,0.74,458,0.74,459,0.74,460,0.74,461,0.74,462,0.74,463,0.74,464,0.74,465,3.725,466,0.74,467,0.889,468,1.57,469,4.581,470,1.57,471,4.349,472,4.349,473,4.349,474,4.214,475,4.214,476,0.889,477,3.472,478,3.212,479,3.45,480,0.889,481,0.889,482,2.109,483,0.889,484,1.57,485,0.889,486,0.889,487,0.889,488,0.889,489,0.889,490,0.889,491,0.889,492,0.889,493,0.889,494,0.889,495,0.889,496,0.889,497,0.889,498,0.889,499,0.889,500,0.889,501,0.889,502,0.889,503,0.889,504,0.889,505,0.889,506,0.889,507,0.889,508,0.889,509,0.889,510,0.889,511,1.757,512,1.757,513,2.109,514,1.57,515,1.757,516,0.74,517,0.74,518,0.889,519,0.74,520,0.74,521,2.546,522,2.546,523,1.57,524,1.57,525,1.57,526,0.74,527,0.74,528,0.74,529,1.308,530,1.841,531,0.889,532,0.74,533,0.74,534,2.109,535,2.109,536,0.889,537,1.757,538,0.889,539,1.57,540,0.889,541,2.908,542,1.57,543,2.546,544,1.57,545,2.546,546,0.889,547,0.889,548,0.889,549,0.889,550,0.889,551,0.889,552,1.57,553,1.57,554,0.889,555,1.57,556,1.57,557,0.889,558,0.889,559,0.889,560,0.889,561,1.841,562,0.74,563,0.74,564,1.757,565,3.241,566,0.889,567,0.889,568,0.889,569,0.889,570,0.889,571,1.57,572,0.74,573,0.74,574,2.423,575,2.908,576,0.889,577,0.889,578,0.889,579,0.889,580,0.74,581,0.889,582,0.889,583,0.889,584,0.889,585,0.643,586,0.74,587,0.74,588,0.889,589,0.74,590,0.74,591,0.889,592,0.889,593,0.889,594,0.74,595,0.74,596,0.643,597,0.889,598,1.57,599,0.889,600,0.889]],["title/modules/AppModule.html",[90,0.975,601,2.035]],["body/modules/AppModule.html",[0,0.155,3,0.36,4,0.36,5,0.273,20,0.034,36,1.227,48,0.36,50,0.022,51,0.022,54,1.627,74,0.808,90,1.493,91,3.249,92,1.354,93,1.849,96,2.223,97,1.627,98,1.627,100,1.798,102,1.798,103,1.045,105,2.456,289,2.736,299,2.603,530,3.515,601,3.937,602,2.603,603,2.603,604,3.249,605,3.249,606,3.249,607,3.125,608,3.125,609,4.268,610,2.603,611,3.125,612,3.125,613,3.125,614,2.603,615,3.125,616,2.603,617,3.125,618,2.26,619,2.603,620,3.125,621,2.603,622,3.125,623,3.125,624,3.125,625,3.125,626,3.125,627,3.125,628,3.125,629,3.125,630,3.125,631,3.125,632,3.125,633,3.125,634,3.125,635,3.125,636,3.125,637,5.224,638,3.125,639,3.125,640,3.125,641,3.125,642,3.125,643,3.125,644,3.125,645,3.125,646,3.125,647,3.125]],["title/classes/Company.html",[0,0.157,43,1.505]],["body/classes/Company.html",[0,0.217,2,1.902,3,0.505,4,0.505,5,0.383,7,3.407,8,3.664,9,0.505,10,1.633,19,0.571,20,0.032,21,1.15,22,2.526,23,3.664,24,1.349,36,0.866,37,2.526,41,2.287,42,2.526,43,2.71,47,2.814,48,0.505,50,0.027,51,0.027,66,1.479,648,3.657,649,4.39]],["title/modules/CompanyModule.html",[90,0.975,604,1.827]],["body/modules/CompanyModule.html",[0,0.207,3,0.482,4,0.482,5,0.365,20,0.033,36,1.153,43,1.985,48,0.482,50,0.027,51,0.027,54,2.181,74,1.083,90,1.586,92,1.814,93,2.237,96,2.689,97,2.181,98,2.181,100,2.971,102,2.409,103,1.4,105,2.409,140,3.184,604,3.518,650,3.488,651,3.488,652,4.187,653,4.187,654,3.488,655,4.187]],["title/injectables/CompanyService.html",[107,1.156,140,1.654]],["body/injectables/CompanyService.html",[0,0.131,3,0.304,4,0.304,5,0.23,9,0.304,13,2.956,19,0.577,20,0.034,21,0.96,24,1.49,27,1.761,36,1.013,43,2.722,48,0.304,50,0.02,51,0.02,57,1.974,58,2.487,59,2.991,65,1.925,66,1.425,67,1.925,68,1.761,69,2.536,74,0.682,75,1.143,76,1.251,86,2.123,88,2.311,103,0.882,107,1.38,108,1.518,110,1.143,115,1.642,125,2.43,127,2.791,137,1.518,140,1.974,149,2.198,151,1.374,152,2.311,154,1.691,156,2.3,213,2.956,227,2.104,228,2.311,229,2.311,230,2.553,251,2.181,252,1.908,253,2.553,270,2.43,654,2.198,656,2.198,657,3.158,658,3.791,659,3.791,660,2.638,661,2.638,662,3.791,663,3.791,664,2.638,665,3.791,666,2.638,667,4.437,668,3.791,669,2.638,670,2.638,671,2.638,672,2.844,673,2.638,674,3.791,675,1.691,676,2.43,677,3.696,678,2.198,679,2.198,680,2.638]],["title/classes/HttpResponse.html",[0,0.157,346,1.827]],["body/classes/HttpResponse.html",[0,0.14,2,1.226,3,0.326,4,0.326,5,0.247,9,0.326,10,1.224,18,2.279,19,0.746,20,0.034,21,1.185,24,1.87,27,2.173,34,4.171,48,0.326,50,0.021,51,0.021,58,2.488,65,1.987,66,1.295,67,1.987,68,1.987,86,1.987,110,2.616,115,1.998,322,3.509,324,3.509,325,3.321,330,2.358,332,2.358,334,3.621,335,2.358,337,2.358,346,2.294,511,3.843,512,3.843,515,4.171,516,2.358,517,2.358,580,4.561,681,2.358,682,5.475,683,3.986,684,2.831,685,2.831,686,2.831,687,2.831,688,2.831,689,2.831,690,2.831,691,2.831,692,2.831,693,2.831,694,2.831,695,2.831,696,2.831,697,2.831,698,2.831,699,4.613,700,4.613,701,2.831,702,2.831]],["title/interfaces/IAccount.html",[120,1.827,703,0.975]],["body/interfaces/IAccount.html",[3,0.416,4,0.416,5,0.316,9,0.416,10,1.445,11,3.681,12,3.681,13,2.081,14,3.939,15,2.081,16,3.681,17,3.681,18,2.279,19,0.79,20,0.033,21,1.4,27,2.379,48,0.542,50,0.024,51,0.024,120,2.708,146,2.081,197,3.551,200,4.006,703,1.445,704,1.884,705,2.615]],["title/interfaces/IAccountData.html",[146,1.827,703,0.975]],["body/interfaces/IAccountData.html",[3,0.416,4,0.416,5,0.316,9,0.416,10,1.445,11,3.681,12,3.681,13,3.188,14,3.939,15,3.188,16,3.681,17,3.681,18,2.279,19,0.79,20,0.033,21,1.378,27,2.506,48,0.542,50,0.024,51,0.024,120,2.081,146,2.708,197,2.318,200,2.615,703,1.445,704,1.884,705,2.615]],["title/interfaces/ICompany.html",[127,1.827,703,0.975]],["body/interfaces/ICompany.html",[3,0.537,4,0.537,5,0.407,9,0.537,10,1.692,19,0.606,20,0.032,21,1.269,48,0.537,50,0.028,51,0.028,66,1.567,127,3.17,703,1.432,704,2.428,706,3.884]],["title/interfaces/IPerson.html",[131,1.827,703,0.975]],["body/interfaces/IPerson.html",[3,0.537,4,0.537,5,0.407,9,0.537,10,1.692,19,0.606,20,0.032,21,1.269,48,0.537,50,0.028,51,0.028,131,3.17,197,3.884,703,1.432,704,2.428,707,3.884]],["title/interfaces/ITransaction.html",[703,0.975,708,2.035]],["body/interfaces/ITransaction.html",[0,0.134,3,0.311,4,0.311,5,0.236,9,0.311,10,1.184,19,0.814,20,0.034,21,1.167,27,1.946,36,0.967,48,0.311,50,0.02,51,0.02,58,1.67,59,2.008,66,1.574,69,1.828,74,0.699,75,1.17,76,1.281,86,1.784,88,2.008,103,0.903,107,1.404,110,1.17,115,1.17,137,1.554,142,1.281,144,2.324,151,1.407,152,2.008,156,2.324,171,1.953,174,1.731,177,1.953,180,1.953,190,1.731,213,2.587,226,1.953,227,1.828,228,2.008,229,2.008,230,2.219,251,1.554,253,1.554,672,1.731,675,1.731,676,1.731,703,0.83,704,1.407,708,2.882,709,1.953,710,4.4,711,1.953,712,2.25,713,2.25,714,2.25,715,3.212,716,2.25,717,4.492,718,2.25,719,2.25,720,3.745,721,2.25,722,2.25,723,2.25,724,1.953,725,3.745,726,2.25,727,2.25,728,1.953,729,2.25,730,2.25,731,2.25,732,2.25,733,3.212,734,2.25,735,2.25,736,2.25,737,2.25,738,2.25]],["title/classes/Person.html",[0,0.157,45,1.505]],["body/classes/Person.html",[0,0.217,2,1.902,3,0.505,4,0.505,5,0.383,7,3.407,8,3.664,9,0.505,10,1.633,19,0.571,20,0.032,21,1.15,22,2.526,23,3.664,24,1.349,36,0.866,37,2.526,41,2.287,42,2.526,45,2.71,47,2.814,48,0.505,50,0.027,51,0.027,66,1.479,739,3.657,740,4.39]],["title/modules/PersonModule.html",[90,0.975,605,1.827]],["body/modules/PersonModule.html",[0,0.207,3,0.482,4,0.482,5,0.365,20,0.033,36,1.153,45,1.985,48,0.482,50,0.027,51,0.027,54,2.181,74,1.083,90,1.586,92,1.814,93,2.237,96,2.689,97,2.181,98,2.181,100,2.971,102,2.409,103,1.4,105,2.409,138,3.184,605,3.518,741,3.488,742,3.488,743,4.187,744,4.187,745,3.488,746,4.187]],["title/injectables/PersonService.html",[107,1.156,138,1.654]],["body/injectables/PersonService.html",[0,0.13,3,0.303,4,0.303,5,0.23,9,0.303,15,2.954,19,0.576,20,0.034,21,0.959,24,1.489,27,1.759,36,1.012,45,2.721,48,0.303,50,0.019,51,0.019,57,1.972,58,2.486,59,2.989,65,1.923,66,1.425,67,1.923,68,1.759,69,2.534,74,0.681,75,1.141,76,1.248,86,2.121,88,2.308,103,0.88,107,1.378,108,1.515,110,1.141,115,1.64,125,2.426,131,2.789,137,1.515,138,1.972,148,2.193,151,1.371,152,2.308,154,1.688,156,2.297,213,2.954,227,2.101,228,2.308,229,2.308,230,2.55,251,2.178,252,1.904,253,2.55,270,2.426,657,3.154,672,2.841,675,1.688,676,2.426,677,3.692,678,2.193,679,2.193,745,2.193,747,2.193,748,3.785,749,3.785,750,2.633,751,2.633,752,3.785,753,3.785,754,2.633,755,3.785,756,2.633,757,3.785,758,2.633,759,4.432,760,2.633,761,2.633,762,2.633,763,3.785,764,2.633]],["title/classes/Transaction.html",[0,0.157,144,1.505]],["body/classes/Transaction.html",[0,0.198,2,1.733,3,0.461,4,0.461,5,0.349,7,3.218,8,3.516,9,0.461,10,1.542,19,0.786,20,0.033,21,1.245,22,3.156,23,3.875,24,1.685,27,1.992,36,0.789,37,2.302,41,2.084,42,2.302,47,2.565,48,0.461,50,0.026,51,0.026,66,1.419,144,2.6,530,3.63,710,3.966,765,3.333,766,4.001,767,4.001,768,4.001,769,4.001,770,4.001]],["title/modules/TransactionModule.html",[90,0.975,606,1.827]],["body/modules/TransactionModule.html",[0,0.207,3,0.482,4,0.482,5,0.365,20,0.033,36,1.153,48,0.482,50,0.027,51,0.027,54,2.181,74,1.083,90,1.586,92,1.814,93,2.237,96,2.689,97,2.181,98,2.181,100,2.971,102,2.409,103,1.4,105,2.409,142,2.898,144,1.985,606,3.518,711,3.028,771,3.488,772,3.488,773,4.187,774,4.187,775,4.187]],["title/injectables/TransactionService.html",[107,1.156,142,1.505]],["body/injectables/TransactionService.html",[0,0.129,3,0.299,4,0.299,5,0.227,9,0.299,19,0.791,20,0.034,21,0.811,24,1.351,27,1.911,36,0.95,48,0.299,50,0.019,51,0.019,57,1.953,58,2.305,59,2.771,65,1.488,66,1.552,67,1.488,68,1.488,69,2.283,74,0.672,75,1.125,76,1.231,86,1.746,88,1.953,103,0.869,107,1.365,108,1.495,110,1.125,115,1.624,137,1.495,142,1.777,144,2.283,151,1.353,152,1.953,156,2.283,171,1.878,174,1.665,177,1.878,180,1.878,190,1.665,213,2.531,226,1.878,227,1.777,228,1.953,229,1.953,230,2.157,251,1.495,253,1.495,672,1.665,675,1.665,676,1.665,703,0.798,708,2.403,709,1.878,710,4.253,711,1.878,712,2.164,713,3.123,714,4.012,715,3.123,716,2.164,717,4.433,718,2.164,719,2.164,720,3.664,721,2.164,722,2.164,723,2.164,724,1.878,725,3.664,726,2.164,727,2.164,728,1.878,729,2.164,730,2.164,731,2.164,732,2.164,733,3.123,734,2.164,735,2.164,736,3.123,737,2.164,738,3.123,776,3.749,777,2.598,778,2.598,779,2.598,780,2.598]],["title/coverage.html",[781,3.595]],["body/coverage.html",[0,0.282,1,1.542,5,0.258,6,2.467,19,0.385,20,0.033,37,1.704,43,1.404,45,1.404,50,0.021,51,0.021,52,1.898,53,1.898,55,2.467,77,1.542,90,0.909,107,1.859,109,2.467,120,1.704,127,1.704,131,1.704,138,1.542,140,1.542,142,1.404,144,1.404,146,1.704,161,1.898,165,4.59,188,3.342,289,1.898,290,2.467,291,2.467,302,1.704,316,1.898,317,3.143,343,2.141,346,1.704,381,1.898,465,5.027,479,2.141,561,2.141,585,2.141,596,2.141,648,2.467,656,2.467,681,2.467,703,1.648,705,2.974,706,2.467,707,2.467,708,1.898,709,2.974,739,2.467,747,2.467,765,2.467,781,2.467,782,2.961,783,2.961,784,2.961,785,4.726,786,5.366,787,2.974,788,2.467,789,5.366,790,4.113,791,2.961,792,4.113,793,5.106,794,2.467,795,2.467,796,2.961,797,2.961,798,5.808,799,2.467,800,2.467,801,2.467,802,2.961,803,2.961]],["title/dependencies.html",[93,1.652,804,2.66]],["body/dependencies.html",[0,0.223,20,0.034,41,2.349,42,1.951,50,0.023,51,0.023,74,0.877,80,2.825,81,2.825,93,1.469,103,1.134,350,2.452,610,2.825,614,2.825,616,2.825,618,3.665,619,3.757,621,2.825,805,3.391,806,3.391,807,3.391,808,3.391,809,3.391,810,3.391,811,3.391,812,3.391,813,5.068,814,3.391,815,3.391,816,4.51,817,3.391,818,3.391,819,3.391,820,3.391,821,3.391,822,3.391,823,3.391,824,3.391,825,3.391,826,4.51,827,3.391,828,3.391,829,3.391,830,3.391,831,3.391,832,3.391,833,3.391,834,3.391,835,3.391,836,3.391,837,3.391,838,3.391,839,3.391,840,4.51,841,3.391,842,3.391,843,3.391,844,3.391,845,3.391,846,3.391,847,3.391,848,3.391,849,3.391,850,3.391,851,4.51,852,3.391,853,3.391,854,3.391,855,3.391,856,3.391,857,3.391,858,3.391,859,3.391,860,3.391,861,3.391,862,3.391,863,3.391,864,3.391,865,3.391,866,3.391,867,3.391,868,3.391,869,3.391,870,3.391,871,3.391]],["title/miscellaneous/enumerations.html",[872,1.152,873,3.177]],["body/miscellaneous/enumerations.html",[9,0.322,18,2.592,20,0.034,50,0.02,51,0.02,188,1.609,302,1.609,309,1.792,317,1.456,319,2.022,324,2.937,350,2.022,351,2.329,354,2.329,355,2.329,356,2.329,357,2.329,358,2.329,359,2.329,360,2.329,361,2.329,362,2.329,363,2.329,364,2.329,365,2.329,366,2.329,367,2.329,368,2.329,369,2.329,370,2.329,371,2.329,372,2.329,373,2.329,374,2.329,375,2.329,376,2.329,377,2.329,378,2.329,379,2.329,380,2.329,381,1.792,382,2.329,383,2.329,384,2.329,385,2.329,386,2.329,387,2.329,388,2.329,389,2.329,390,2.329,391,2.329,392,2.329,393,2.329,394,2.329,395,2.329,396,2.329,397,2.329,398,2.329,399,2.329,400,2.329,401,2.329,402,2.329,403,2.329,404,2.329,405,2.329,406,2.329,407,2.329,408,2.329,409,2.329,410,2.329,411,2.329,412,2.329,413,2.329,414,2.329,415,2.329,416,2.329,417,2.329,418,2.329,419,2.329,420,2.329,421,2.329,422,2.329,423,2.329,424,2.329,425,2.329,426,2.329,427,2.329,428,2.329,429,2.329,430,2.329,431,2.329,432,2.329,433,2.329,434,2.329,435,2.329,436,2.329,437,2.329,438,2.329,439,2.329,440,2.329,441,2.329,442,2.329,443,2.329,444,2.329,445,2.329,446,2.329,447,2.329,448,2.329,449,2.329,450,2.329,451,2.329,452,2.329,453,2.329,454,2.329,455,2.329,456,2.329,457,2.329,458,2.329,459,2.329,460,2.329,461,2.329,462,2.329,463,2.329,464,2.329,872,1.211,873,2.329,874,1.792]],["title/miscellaneous/functions.html",[872,1.152,875,3.177]],["body/miscellaneous/functions.html",[9,0.315,19,0.724,20,0.033,21,1.286,50,0.02,51,0.02,65,2.298,66,1.498,67,2.298,68,2.298,86,2.358,125,2.493,260,3.914,302,2.604,307,2.812,309,2.493,313,3.273,316,3.16,317,1.424,318,3.77,321,4.116,322,3.47,324,2.493,334,3.914,347,1.977,352,4.742,381,2.901,466,2.277,479,3.767,519,2.277,520,2.277,526,2.277,527,2.277,528,2.277,529,2.277,532,2.277,533,2.277,537,2.277,561,3.767,562,2.277,563,2.277,564,3.24,565,3.77,572,2.277,573,2.277,574,3.24,585,2.812,586,2.277,587,2.277,589,2.277,590,2.277,594,2.277,595,2.277,596,3.273,787,1.977,788,3.77,794,2.277,795,3.24,799,3.24,800,3.24,801,3.24,872,1.184,874,3.712,875,2.277,876,2.277,877,2.734,878,2.734,879,3.889,880,3.889,881,3.889,882,2.734]],["title/index.html",[9,0.306,883,2.66,884,2.66]],["body/index.html",[5,0.303,18,1.377,20,0.031,41,1.807,50,0.024,51,0.024,70,2.89,283,2.89,321,2.508,322,2.223,618,2.508,885,3.469,886,3.469,887,3.469,888,3.469,889,3.469,890,4.578,891,6.024,892,3.469,893,3.469,894,3.469,895,3.469,896,3.469,897,4.578,898,3.469,899,3.469,900,4.578,901,4.578,902,3.469,903,4.578,904,3.469,905,3.469,906,5.125,907,3.469,908,4.578,909,3.469,910,3.469,911,3.469,912,3.469,913,3.469,914,5.125,915,3.469,916,3.469,917,3.469,918,4.578,919,3.469,920,3.469,921,3.469,922,3.469,923,3.469,924,3.469,925,4.578,926,3.469,927,3.469,928,3.469,929,3.469,930,3.469,931,3.469,932,3.469,933,3.469,934,3.469,935,3.469,936,3.469,937,4.578,938,3.469,939,5.125,940,3.469,941,3.469,942,3.469,943,3.469,944,4.578,945,4.578,946,3.469,947,3.469,948,3.469,949,3.469,950,3.469,951,3.469,952,3.469,953,4.578,954,3.469,955,3.469,956,3.469,957,3.469,958,3.469,959,3.469,960,3.469,961,3.469,962,3.469,963,3.469,964,4.578,965,3.469,966,3.469,967,3.469,968,3.469]],["title/modules.html",[92,1.869]],["body/modules.html",[20,0.028,50,0.028,51,0.028,91,2.655,92,1.999,601,2.958,604,2.655,605,2.655,606,2.655,969,6.167,970,6.167,971,6.167,972,6.167]],["title/overview.html",[973,3.595]],["body/overview.html",[2,1.703,20,0.032,50,0.026,51,0.026,52,2.52,77,2.834,91,3.391,92,1.703,93,2.15,94,3.275,95,3.275,96,2.586,97,2.048,98,2.048,108,2.262,138,2.834,140,2.834,142,2.579,174,2.52,190,2.52,601,4.029,602,3.275,603,3.275,604,3.391,605,3.391,606,3.391,650,3.275,651,3.275,704,2.048,724,3.59,728,2.843,741,3.275,742,3.275,771,3.275,772,3.275,973,3.275]],["title/miscellaneous/typealiases.html",[872,1.152,974,3.814]],["body/miscellaneous/typealiases.html",[9,0.564,19,0.637,20,0.029,50,0.029,51,0.029,317,2.551,346,3.263,347,3.542,872,2.122,874,3.14,975,4.898]],["title/miscellaneous/variables.html",[872,1.152,976,3.177]],["body/miscellaneous/variables.html",[9,0.548,18,1.889,19,0.619,20,0.031,50,0.029,51,0.029,90,1.713,317,2.479,319,3.442,343,4.033,344,3.966,787,3.442,872,2.062,874,3.051,876,3.966,976,3.966]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":165,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"coverage.html":{}}}],["0.0.2",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["0.4.23",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":190,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["1.0.2",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["100",{"_index":188,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["101",{"_index":376,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["102",{"_index":378,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["103",{"_index":380,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["17.1.1",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":187,"title":{},"body":{"injectables/AccountService.html":{}}}],["2",{"_index":718,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["2.0.0",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["2.10.0",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":382,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["201",{"_index":384,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["202",{"_index":386,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["203",{"_index":388,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["204",{"_index":390,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["205",{"_index":392,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["206",{"_index":394,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["3",{"_index":721,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["3.0.2",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":192,"title":{},"body":{"injectables/AccountService.html":{}}}],["300",{"_index":396,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["301",{"_index":398,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["302",{"_index":400,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["303",{"_index":402,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["304",{"_index":404,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["307",{"_index":406,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["308",{"_index":408,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":174,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["4.0.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":410,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["401",{"_index":412,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["402",{"_index":414,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["403",{"_index":416,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["404",{"_index":486,"title":{},"body":{"classes/ApiResponse.html":{}}}],["405",{"_index":418,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["406",{"_index":420,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["407",{"_index":422,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["408",{"_index":424,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["409",{"_index":490,"title":{},"body":{"classes/ApiResponse.html":{}}}],["410",{"_index":426,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["411",{"_index":428,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["412",{"_index":430,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["413",{"_index":432,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["414",{"_index":434,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["415",{"_index":436,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["416",{"_index":438,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["417",{"_index":440,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["418",{"_index":442,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["42",{"_index":194,"title":{},"body":{"injectables/AccountService.html":{}}}],["421",{"_index":444,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["422",{"_index":446,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["424",{"_index":448,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["428",{"_index":450,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["429",{"_index":452,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["48",{"_index":196,"title":{},"body":{"injectables/AccountService.html":{}}}],["5",{"_index":724,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["5.0.1",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":454,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["501",{"_index":456,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["502",{"_index":458,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["503",{"_index":460,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["504",{"_index":462,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["505",{"_index":464,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["5432",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":177,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["6.16.1",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["6.7.1",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["62",{"_index":199,"title":{},"body":{"injectables/AccountService.html":{}}}],["7",{"_index":728,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["7.4.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":180,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["8.0.0",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["81",{"_index":202,"title":{},"body":{"injectables/AccountService.html":{}}}],["9",{"_index":171,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["a.indexof(v",{"_index":259,"title":{},"body":{"injectables/AccountService.html":{}}}],["accepted",{"_index":385,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["accessors",{"_index":325,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"coverage.html":{}}}],["account.company_name",{"_index":209,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.controller",{"_index":101,"title":{},"body":{"modules/AccountModule.html":{}}}],["account.model",{"_index":104,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{}}}],["account.person_name",{"_index":205,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.push(accountresult",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.service",{"_index":78,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{}}}],["accountcontroller",{"_index":53,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"coverage.html":{}}}],["accountdatalist",{"_index":122,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdatalist.length",{"_index":220,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdatalist.push(account",{"_index":211,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdate",{"_index":182,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountdatestr",{"_index":169,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem",{"_index":166,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.ben_code",{"_index":245,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.card",{"_index":241,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.date",{"_index":243,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(0",{"_index":189,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(1",{"_index":170,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(19",{"_index":191,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(30",{"_index":193,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(42",{"_index":195,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(48",{"_index":198,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.substring(62",{"_index":201,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.time",{"_index":246,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountitem.value",{"_index":248,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountlist",{"_index":159,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountlist.length",{"_index":164,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountmodel",{"_index":118,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountmodule",{"_index":91,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accountresult",{"_index":249,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountresult.total",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountresult.transaction.push",{"_index":276,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountservice",{"_index":77,"title":{"injectables/AccountService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"coverage.html":{},"overview.html":{}}}],["accounttotal",{"_index":281,"title":{},"body":{"injectables/AccountService.html":{}}}],["accounttoupdate",{"_index":240,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountvalue",{"_index":185,"title":{},"body":{"injectables/AccountService.html":{}}}],["aliases",{"_index":975,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":289,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["already",{"_index":503,"title":{},"body":{"classes/ApiResponse.html":{}}}],["aluguel",{"_index":731,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["ambiguous",{"_index":395,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["antes",{"_index":949,"title":{},"body":{"index.html":{}}}],["ao",{"_index":889,"title":{},"body":{"index.html":{}}}],["apenas",{"_index":916,"title":{},"body":{"index.html":{}}}],["api",{"_index":321,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["apibase",{"_index":75,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.apiresponse",{"_index":298,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{}}}],["apibase.error('missing",{"_index":153,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.error(`fail",{"_index":251,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.error(`filter",{"_index":679,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["apibase.error(data",{"_index":526,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.error(result.$data",{"_index":217,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.exception(error",{"_index":532,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.exception(ex",{"_index":230,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.getapienv",{"_index":595,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.handlehttpresponse",{"_index":87,"title":{},"body":{"controllers/AccountController.html":{}}}],["apibase.log(msg",{"_index":562,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.logexception(`exception",{"_index":571,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.logexception(msg",{"_index":586,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.objectserialize(data",{"_index":529,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.objectserialize(msg",{"_index":568,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.registererror(apiexception.message",{"_index":556,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.registererror(msg",{"_index":572,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apibase.registererror(new",{"_index":566,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apibase.status.error_null_parameter",{"_index":155,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.status.failed",{"_index":253,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.status.internal_server_error",{"_index":315,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["apibase.status.success",{"_index":216,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{}}}],["apibase.success(account",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.success(result",{"_index":672,"title":{},"body":{"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["apibase.success(result.$data",{"_index":225,"title":{},"body":{"injectables/AccountService.html":{}}}],["apibase.success(true",{"_index":226,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["apibase.sucess(body",{"_index":519,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["apierror",{"_index":535,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apierror.$data",{"_index":552,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apierror.$haserror",{"_index":555,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apierror.$status",{"_index":553,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception",{"_index":534,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception.message",{"_index":541,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception.name",{"_index":539,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiexception.stack",{"_index":543,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apihttpresponse",{"_index":347,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apiresponse",{"_index":316,"title":{"classes/ApiResponse.html":{}},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiresponse.$data",{"_index":475,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresponse.$status",{"_index":468,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult",{"_index":522,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult.$data",{"_index":523,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult.$haserror",{"_index":525,"title":{},"body":{"classes/ApiResponse.html":{}}}],["apiresult.$status",{"_index":524,"title":{},"body":{"classes/ApiResponse.html":{}}}],["app_filter",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":601,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":300,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arquivo",{"_index":918,"title":{},"body":{"index.html":{}}}],["async",{"_index":59,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["atenção",{"_index":506,"title":{},"body":{"classes/ApiResponse.html":{}}}],["autoloadmodels",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":88,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["axios",{"_index":536,"title":{},"body":{"classes/ApiResponse.html":{}}}],["bad",{"_index":482,"title":{},"body":{"classes/ApiResponse.html":{}}}],["bad_gateway",{"_index":457,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["bad_request",{"_index":409,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["bcrypt",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["belongsto",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["ben_code",{"_index":11,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["body",{"_index":71,"title":{},"body":{"controllers/AccountController.html":{}}}],["boleto",{"_index":719,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["boolean",{"_index":328,"title":{},"body":{"classes/ApiResponse.html":{}}}],["bootstrap",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":167,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{}}}],["browse",{"_index":972,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":969,"title":{},"body":{"modules.html":{}}}],["card",{"_index":12,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["case",{"_index":469,"title":{},"body":{"classes/ApiResponse.html":{}}}],["catch",{"_index":227,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["catch(exception",{"_index":297,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"classes/HttpResponse.html":{},"classes/Person.html":{},"classes/Transaction.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"classes/HttpResponse.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"overview.html":{}}}],["clone",{"_index":892,"title":{},"body":{"index.html":{}}}],["cluster_accountmodule",{"_index":94,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":95,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":602,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":603,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":650,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":651,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_personmodule",{"_index":741,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["cluster_personmodule_providers",{"_index":742,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":771,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_providers",{"_index":772,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cnab.txt",{"_index":919,"title":{},"body":{"index.html":{}}}],["code",{"_index":351,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["column",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["column({type",{"_index":33,"title":{},"body":{"classes/Account.html":{}}}],["column({unique",{"_index":768,"title":{},"body":{"classes/Transaction.html":{}}}],["comando",{"_index":944,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":899,"title":{},"body":{"index.html":{}}}],["company",{"_index":43,"title":{"classes/Company.html":{}},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["company.model",{"_index":654,"title":{},"body":{"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["company.name",{"_index":674,"title":{},"body":{"injectables/CompanyService.html":{}}}],["company.service",{"_index":653,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company/company.model",{"_index":44,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{}}}],["company/company.service",{"_index":141,"title":{},"body":{"injectables/AccountService.html":{}}}],["company_name",{"_index":200,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["companydata",{"_index":237,"title":{},"body":{"injectables/AccountService.html":{}}}],["companydata.id",{"_index":242,"title":{},"body":{"injectables/AccountService.html":{}}}],["companydata.name",{"_index":268,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyid",{"_index":13,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["companyidlist",{"_index":261,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyidlist.length",{"_index":262,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyitem",{"_index":256,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist",{"_index":129,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist.find(item",{"_index":207,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist.length",{"_index":218,"title":{},"body":{"injectables/AccountService.html":{}}}],["companylist.push",{"_index":210,"title":{},"body":{"injectables/AccountService.html":{}}}],["companymodel",{"_index":662,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companymodule",{"_index":604,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules.html":{},"overview.html":{}}}],["companyname",{"_index":667,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companyservice",{"_index":140,"title":{"injectables/CompanyService.html":{}},"body":{"injectables/AccountService.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"coverage.html":{},"overview.html":{}}}],["companyservice(company",{"_index":232,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyservice.findcompany(accountitem.company_name",{"_index":236,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyservice.findcompany(null",{"_index":267,"title":{},"body":{"injectables/AccountService.html":{}}}],["companyservice.findorcreatecompany(companyitem",{"_index":257,"title":{},"body":{"injectables/AccountService.html":{}}}],["compodoc",{"_index":963,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":904,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["conflict",{"_index":489,"title":{},"body":{"classes/ApiResponse.html":{}}}],["const",{"_index":156,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["constructor(accountmodel",{"_index":116,"title":{},"body":{"injectables/AccountService.html":{}}}],["constructor(companymodel",{"_index":660,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(personmodel",{"_index":750,"title":{},"body":{"injectables/PersonService.html":{}}}],["constructor(private",{"_index":83,"title":{},"body":{"controllers/AccountController.html":{}}}],["constructor(transactionmodel",{"_index":777,"title":{},"body":{"injectables/TransactionService.html":{}}}],["continue",{"_index":374,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":52,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"coverage.html":{},"overview.html":{}}}],["controller(\"account",{"_index":82,"title":{},"body":{"controllers/AccountController.html":{}}}],["controllers",{"_index":54,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["cookie",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":781,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":252,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["created",{"_index":383,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["createperson",{"_index":657,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["createperson(company",{"_index":663,"title":{},"body":{"injectables/CompanyService.html":{}}}],["createperson(person",{"_index":753,"title":{},"body":{"injectables/PersonService.html":{}}}],["criadas",{"_index":960,"title":{},"body":{"index.html":{}}}],["crédito",{"_index":723,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["ctx",{"_index":305,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":308,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":310,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["data",{"_index":322,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["data(value",{"_index":517,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["database",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["dataerror",{"_index":537,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["dataerror.hasownproperty(\"message",{"_index":558,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror.hasownproperty('response",{"_index":538,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['message",{"_index":542,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['name",{"_index":559,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data",{"_index":545,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['error",{"_index":549,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['error'].join",{"_index":551,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['error'].length",{"_index":550,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['errors",{"_index":546,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['errors'].join",{"_index":548,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['data']['errors'].length",{"_index":547,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['status",{"_index":554,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['response']['statustext",{"_index":540,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dataerror['stack",{"_index":544,"title":{},"body":{"classes/ApiResponse.html":{}}}],["datatype",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["datatype.decimal",{"_index":49,"title":{},"body":{"classes/Account.html":{}}}],["date",{"_index":14,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["date(`${transformdate[0]}/${transformdate[1]}/${transformdate[2",{"_index":183,"title":{},"body":{"injectables/AccountService.html":{}}}],["day",{"_index":181,"title":{},"body":{"injectables/AccountService.html":{}}}],["de",{"_index":950,"title":{},"body":{"index.html":{}}}],["debug",{"_index":570,"title":{},"body":{"classes/ApiResponse.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["default",{"_index":319,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":675,"title":{},"body":{"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["dependencies",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":593,"title":{},"body":{"classes/ApiResponse.html":{}}}],["desafio",{"_index":885,"title":{},"body":{"index.html":{}}}],["description",{"_index":318,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":886,"title":{},"body":{"index.html":{}}}],["deve",{"_index":894,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["disponível",{"_index":920,"title":{},"body":{"index.html":{}}}],["disponóvel",{"_index":967,"title":{},"body":{"index.html":{}}}],["doc",{"_index":730,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["docker",{"_index":903,"title":{},"body":{"index.html":{}}}],["docs",{"_index":968,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":964,"title":{},"body":{"index.html":{}}}],["dos",{"_index":941,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":345,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dotenv.config",{"_index":597,"title":{},"body":{"classes/ApiResponse.html":{}}}],["dotenv/config",{"_index":303,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["due",{"_index":493,"title":{},"body":{"classes/ApiResponse.html":{}}}],["débito",{"_index":716,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["earlyhints",{"_index":379,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["em",{"_index":921,"title":{},"body":{"index.html":{}}}],["empréstimo",{"_index":726,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["encontra",{"_index":965,"title":{},"body":{"index.html":{}}}],["entrada",{"_index":717,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["enum",{"_index":353,"title":{},"body":{"classes/ApiResponse.html":{}}}],["enumerations",{"_index":873,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":598,"title":{},"body":{"classes/ApiResponse.html":{}}}],["envio",{"_index":917,"title":{},"body":{"index.html":{}}}],["environment",{"_index":594,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":479,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["error('msg",{"_index":567,"title":{},"body":{"classes/ApiResponse.html":{}}}],["error(apibase.objectserialize(msg)).stack",{"_index":577,"title":{},"body":{"classes/ApiResponse.html":{}}}],["error(data",{"_index":528,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["error_already_registered",{"_index":373,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_conflict",{"_index":364,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_duplicated_data",{"_index":359,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_invalid_parameter",{"_index":357,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_invalid_request",{"_index":370,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_job_execution_failed",{"_index":371,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_max_attempts",{"_index":363,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_not_found",{"_index":358,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_null_parameter",{"_index":355,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_null_value",{"_index":356,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_promisify_failed",{"_index":366,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_repository_begin",{"_index":361,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_repository_end",{"_index":362,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_truncated_data",{"_index":360,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error_unkown_event",{"_index":365,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["errordata",{"_index":574,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["errordata.message",{"_index":581,"title":{},"body":{"classes/ApiResponse.html":{}}}],["errordata.name",{"_index":579,"title":{},"body":{"classes/ApiResponse.html":{}}}],["errordata.stack",{"_index":583,"title":{},"body":{"classes/ApiResponse.html":{}}}],["errorresponse",{"_index":311,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ex",{"_index":228,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["example",{"_index":352,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["exception",{"_index":302,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["exception(dataerror",{"_index":533,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["exception.$status",{"_index":314,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.filter",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["exception.filter.ts",{"_index":291,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":301,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.filter.ts:7",{"_index":296,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":293,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["executado",{"_index":896,"title":{},"body":{"index.html":{}}}],["existing",{"_index":494,"title":{},"body":{"classes/ApiResponse.html":{}}}],["expectation_failed",{"_index":439,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["express",{"_index":81,"title":{},"body":{"controllers/AccountController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":62,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["failed",{"_index":354,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["failed_dependency",{"_index":447,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":514,"title":{},"body":{"classes/ApiResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"index.html":{}}}],["file.buffer.tostring",{"_index":158,"title":{},"body":{"injectables/AccountService.html":{}}}],["fileinterceptor",{"_index":79,"title":{},"body":{"controllers/AccountController.html":{}}}],["filestring",{"_index":157,"title":{},"body":{"injectables/AccountService.html":{}}}],["filestring.split(\"\\n",{"_index":160,"title":{},"body":{"injectables/AccountService.html":{}}}],["filter",{"_index":677,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["financiamento",{"_index":722,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["find",{"_index":676,"title":{},"body":{"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["findcompany",{"_index":658,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findcompany(companyname",{"_index":665,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findorcreatecompany",{"_index":659,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findorcreatecompany(company",{"_index":668,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findorcreateperson",{"_index":748,"title":{},"body":{"injectables/PersonService.html":{}}}],["findorcreateperson(person",{"_index":755,"title":{},"body":{"injectables/PersonService.html":{}}}],["findperson",{"_index":749,"title":{},"body":{"injectables/PersonService.html":{}}}],["findperson(personname",{"_index":757,"title":{},"body":{"injectables/PersonService.html":{}}}],["findtransaction",{"_index":776,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findtransaction(transactiontype",{"_index":736,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["foi",{"_index":935,"title":{},"body":{"index.html":{}}}],["foram",{"_index":926,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":415,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["foreignkey",{"_index":39,"title":{},"body":{"classes/Account.html":{}}}],["form",{"_index":932,"title":{},"body":{"index.html":{}}}],["found",{"_index":399,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["framework",{"_index":938,"title":{},"body":{"index.html":{}}}],["function",{"_index":465,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{}}}],["functions",{"_index":875,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway_timeout",{"_index":461,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["general",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["get$data",{"_index":335,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["get$haserror",{"_index":339,"title":{},"body":{"classes/ApiResponse.html":{}}}],["get$message",{"_index":687,"title":{},"body":{"classes/HttpResponse.html":{}}}],["get$reason",{"_index":693,"title":{},"body":{"classes/HttpResponse.html":{}}}],["get$status",{"_index":330,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["getapienv",{"_index":596,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":883,"title":{"index.html":{}},"body":{}}],["gone",{"_index":425,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["handled",{"_index":509,"title":{},"body":{"classes/ApiResponse.html":{}}}],["handlehttpresponse",{"_index":799,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlehttpresponse(apiresponse",{"_index":466,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["hapi/joi",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["haserror",{"_index":323,"title":{},"body":{"classes/ApiResponse.html":{}}}],["haserror(value",{"_index":518,"title":{},"body":{"classes/ApiResponse.html":{}}}],["helmet",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":299,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["host.switchtohttp",{"_index":306,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http",{"_index":350,"title":{},"body":{"classes/ApiResponse.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["http://localhost:3050/api/v1/account/cnab",{"_index":911,"title":{},"body":{"index.html":{}}}],["http_version_not_supported",{"_index":463,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["httpresponse",{"_index":346,"title":{"classes/HttpResponse.html":{}},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["https://github.com/bycoderstec/desafio",{"_index":922,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":527,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["i_am_a_teapot",{"_index":441,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["iaccount",{"_index":120,"title":{"interfaces/IAccount.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"coverage.html":{}}}],["iaccountdata",{"_index":146,"title":{"interfaces/IAccountData.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"coverage.html":{}}}],["icompany",{"_index":127,"title":{"interfaces/ICompany.html":{}},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ICompany.html":{},"coverage.html":{}}}],["id",{"_index":678,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["identifier",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":292,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["importante",{"_index":952,"title":{},"body":{"index.html":{}}}],["imports",{"_index":105,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":510,"title":{},"body":{"classes/ApiResponse.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["iniciada",{"_index":956,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["injectmodel",{"_index":137,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["injectmodel(account",{"_index":150,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectmodel(company",{"_index":670,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectmodel(person",{"_index":760,"title":{},"body":{"injectables/PersonService.html":{}}}],["injectmodel(transaction",{"_index":712,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["install",{"_index":907,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":521,"title":{},"body":{"classes/ApiResponse.html":{}}}],["interface",{"_index":703,"title":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{}},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["interface/iaccount",{"_index":147,"title":{},"body":{"injectables/AccountService.html":{}}}],["interface/icompany",{"_index":149,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{}}}],["interface/iperson",{"_index":148,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PersonService.html":{}}}],["interfaces",{"_index":704,"title":{},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"overview.html":{}}}],["internal",{"_index":477,"title":{},"body":{"classes/ApiResponse.html":{}}}],["internal_server_error",{"_index":453,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":496,"title":{},"body":{"classes/ApiResponse.html":{}}}],["inválida",{"_index":508,"title":{},"body":{"classes/ApiResponse.html":{}}}],["iperson",{"_index":131,"title":{"interfaces/IPerson.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/IPerson.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["isglobal",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["item",{"_index":283,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{}}}],["item.companyid",{"_index":265,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.companyid).filter((v",{"_index":258,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.name",{"_index":208,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.person_name",{"_index":204,"title":{},"body":{"injectables/AccountService.html":{}}}],["item.value",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{}}}],["itransaction",{"_index":708,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["jest",{"_index":937,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":933,"title":{},"body":{"index.html":{}}}],["length_required",{"_index":427,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["limit",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["line",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["localhost",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":561,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["log(msg",{"_index":563,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["logdata",{"_index":578,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logexception",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logexception(msg",{"_index":587,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["logger",{"_index":295,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{}}}],["logger.error(`${data",{"_index":531,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logger.error(logdata",{"_index":584,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logger.error(msg",{"_index":588,"title":{},"body":{"classes/ApiResponse.html":{}}}],["logger.log(data",{"_index":569,"title":{},"body":{"classes/ApiResponse.html":{}}}],["loggermodule",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":580,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["message(value",{"_index":701,"title":{},"body":{"classes/HttpResponse.html":{}}}],["metadata",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["method_not_allowed",{"_index":417,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["methods",{"_index":57,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["miscellaneous",{"_index":872,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misdirected",{"_index":443,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["model",{"_index":8,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["module",{"_index":90,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module/account/account.module",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["module/company/company.module",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["module/person/person.module",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["module/transaction/transaction.module",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":92,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["moment",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["month",{"_index":178,"title":{},"body":{"injectables/AccountService.html":{}}}],["moved_permanently",{"_index":397,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["msg",{"_index":565,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["msg.stack",{"_index":576,"title":{},"body":{"classes/ApiResponse.html":{}}}],["msgdata",{"_index":575,"title":{},"body":{"classes/ApiResponse.html":{}}}],["multer",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["mysql2",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["na",{"_index":900,"title":{},"body":{"index.html":{}}}],["name",{"_index":66,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ICompany.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":349,"title":{},"body":{"classes/ApiResponse.html":{}}}],["nature",{"_index":710,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["necessario",{"_index":942,"title":{},"body":{"index.html":{}}}],["necessário",{"_index":915,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":618,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":74,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":80,"title":{},"body":{"controllers/AccountController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":103,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":161,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"coverage.html":{}}}],["newrelic",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["next",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextfunction",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["no_content",{"_index":389,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["nodemailer",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["non_authoritative_information",{"_index":387,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["not_acceptable",{"_index":419,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["not_implemented",{"_index":455,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["not_modified",{"_index":403,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["npm",{"_index":906,"title":{},"body":{"index.html":{}}}],["null",{"_index":270,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["number",{"_index":27,"title":{},"body":{"classes/Account.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["o",{"_index":891,"title":{},"body":{"index.html":{}}}],["object",{"_index":260,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["object.assign({},exception",{"_index":312,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["objectserialize",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectserialize(data",{"_index":590,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["operation",{"_index":271,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{}}}],["operation.ben_code",{"_index":279,"title":{},"body":{"injectables/AccountService.html":{}}}],["operation.card",{"_index":280,"title":{},"body":{"injectables/AccountService.html":{}}}],["operation.date",{"_index":278,"title":{},"body":{"injectables/AccountService.html":{}}}],["operation.value",{"_index":273,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationbycompany",{"_index":263,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationbycompany.length",{"_index":266,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationbycompany.reduce((sum",{"_index":282,"title":{},"body":{"injectables/AccountService.html":{}}}],["operationvalue",{"_index":272,"title":{},"body":{"injectables/AccountService.html":{}}}],["optional",{"_index":67,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["optionsinterceptor",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optionsinterceptor(req",{"_index":878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opção",{"_index":931,"title":{},"body":{"index.html":{}}}],["originalfile",{"_index":123,"title":{},"body":{"injectables/AccountService.html":{}}}],["os",{"_index":897,"title":{},"body":{"index.html":{}}}],["ou",{"_index":946,"title":{},"body":{"index.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["overview",{"_index":973,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":804,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":948,"title":{},"body":{"index.html":{}}}],["para",{"_index":939,"title":{},"body":{"index.html":{}}}],["param",{"_index":154,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["parsefloat(accountitem.substring(9",{"_index":186,"title":{},"body":{"injectables/AccountService.html":{}}}],["parsefloat(operationvalue",{"_index":274,"title":{},"body":{"injectables/AccountService.html":{}}}],["parser",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["partial_content",{"_index":393,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["passos",{"_index":888,"title":{},"body":{"index.html":{}}}],["passport",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["pasta",{"_index":901,"title":{},"body":{"index.html":{}}}],["payload_too_large",{"_index":431,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["payment_required",{"_index":413,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["permanent_redirect",{"_index":407,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["person",{"_index":45,"title":{"classes/Person.html":{}},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["person.model",{"_index":745,"title":{},"body":{"modules/PersonModule.html":{},"injectables/PersonService.html":{}}}],["person.person_name",{"_index":763,"title":{},"body":{"injectables/PersonService.html":{}}}],["person.service",{"_index":744,"title":{},"body":{"modules/PersonModule.html":{}}}],["person/person.model",{"_index":46,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{}}}],["person/person.service",{"_index":139,"title":{},"body":{"injectables/AccountService.html":{}}}],["person_name",{"_index":197,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/IPerson.html":{}}}],["persondata",{"_index":234,"title":{},"body":{"injectables/AccountService.html":{}}}],["persondata.id",{"_index":244,"title":{},"body":{"injectables/AccountService.html":{}}}],["personid",{"_index":15,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"injectables/PersonService.html":{}}}],["personitem",{"_index":254,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist",{"_index":133,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist.find(item",{"_index":203,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist.length",{"_index":212,"title":{},"body":{"injectables/AccountService.html":{}}}],["personlist.push",{"_index":206,"title":{},"body":{"injectables/AccountService.html":{}}}],["personmodel",{"_index":752,"title":{},"body":{"injectables/PersonService.html":{}}}],["personmodule",{"_index":605,"title":{"modules/PersonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PersonModule.html":{},"modules.html":{},"overview.html":{}}}],["personname",{"_index":759,"title":{},"body":{"injectables/PersonService.html":{}}}],["personservice",{"_index":138,"title":{"injectables/PersonService.html":{}},"body":{"injectables/AccountService.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{},"overview.html":{}}}],["personservice(person",{"_index":231,"title":{},"body":{"injectables/AccountService.html":{}}}],["personservice.findorcreateperson(personitem",{"_index":255,"title":{},"body":{"injectables/AccountService.html":{}}}],["personservice.findperson(accountitem.person_name",{"_index":233,"title":{},"body":{"injectables/AccountService.html":{}}}],["pg",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["pino",{"_index":619,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["port",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":70,"title":{},"body":{"controllers/AccountController.html":{},"index.html":{}}}],["post(\"cnab",{"_index":84,"title":{},"body":{"controllers/AccountController.html":{}}}],["post('cnab')@useinterceptors(undefined",{"_index":63,"title":{},"body":{"controllers/AccountController.html":{}}}],["postgres",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":962,"title":{},"body":{"index.html":{}}}],["postman",{"_index":930,"title":{},"body":{"index.html":{}}}],["pra",{"_index":912,"title":{},"body":{"index.html":{}}}],["precondition_failed",{"_index":429,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["precondition_required",{"_index":449,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":56,"title":{},"body":{"controllers/AccountController.html":{}}}],["prepare",{"_index":184,"title":{},"body":{"injectables/AccountService.html":{}}}],["primeiramente",{"_index":957,"title":{},"body":{"index.html":{}}}],["primeiros",{"_index":887,"title":{},"body":{"index.html":{}}}],["private",{"_index":110,"title":{},"body":{"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["process",{"_index":492,"title":{},"body":{"classes/ApiResponse.html":{}}}],["process.env.node_env",{"_index":599,"title":{},"body":{"classes/ApiResponse.html":{}}}],["process.env.node_env.tolowercase",{"_index":600,"title":{},"body":{"classes/ApiResponse.html":{}}}],["processing",{"_index":377,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["programa",{"_index":929,"title":{},"body":{"index.html":{}}}],["programação",{"_index":940,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":893,"title":{},"body":{"index.html":{}}}],["promise",{"_index":69,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["promise_timeout",{"_index":372,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["provide",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":100,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["proxy_authentication_required",{"_index":421,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["public",{"_index":58,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["que",{"_index":953,"title":{},"body":{"index.html":{}}}],["rails/blob/master/cnab.txt",{"_index":924,"title":{},"body":{"index.html":{}}}],["raiz",{"_index":902,"title":{},"body":{"index.html":{}}}],["reached",{"_index":501,"title":{},"body":{"classes/ApiResponse.html":{}}}],["reader",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":294,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["realizados",{"_index":927,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":890,"title":{},"body":{"index.html":{}}}],["realização",{"_index":913,"title":{},"body":{"index.html":{}}}],["reason",{"_index":682,"title":{},"body":{"classes/HttpResponse.html":{}}}],["reason(value",{"_index":702,"title":{},"body":{"classes/HttpResponse.html":{}}}],["recebimento",{"_index":725,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["reflect",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["registeraccount",{"_index":111,"title":{},"body":{"injectables/AccountService.html":{}}}],["registeraccount(accountdatalist",{"_index":119,"title":{},"body":{"injectables/AccountService.html":{}}}],["registercnab",{"_index":60,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["registercnab(file",{"_index":61,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["registercompany",{"_index":112,"title":{},"body":{"injectables/AccountService.html":{}}}],["registercompany(companylist",{"_index":126,"title":{},"body":{"injectables/AccountService.html":{}}}],["registered",{"_index":504,"title":{},"body":{"classes/ApiResponse.html":{}}}],["registererror",{"_index":585,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registererror(msg",{"_index":573,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["registerperson",{"_index":113,"title":{},"body":{"injectables/AccountService.html":{}}}],["registerperson(personlist",{"_index":130,"title":{},"body":{"injectables/AccountService.html":{}}}],["registertransaction",{"_index":714,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["req",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["request",{"_index":307,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["request_canceled_by_client",{"_index":367,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["request_timeout",{"_index":423,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["requested_range_not_satisfiable",{"_index":437,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["require('util",{"_index":344,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/variables.html":{}}}],["requisição",{"_index":507,"title":{},"body":{"classes/ApiResponse.html":{}}}],["res",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["reset_content",{"_index":391,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["resource",{"_index":487,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response",{"_index":309,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["response.$data",{"_index":474,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.$message",{"_index":471,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.$reason",{"_index":473,"title":{},"body":{"classes/ApiResponse.html":{}}}],["response.$status",{"_index":472,"title":{},"body":{"classes/ApiResponse.html":{}}}],["rest/httpresponse",{"_index":348,"title":{},"body":{"classes/ApiResponse.html":{}}}],["result",{"_index":213,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["result.$data",{"_index":235,"title":{},"body":{"injectables/AccountService.html":{}}}],["result.$status",{"_index":215,"title":{},"body":{"injectables/AccountService.html":{}}}],["resultaccount",{"_index":136,"title":{},"body":{"injectables/AccountService.html":{}}}],["resultaccount.filter(item",{"_index":264,"title":{},"body":{"injectables/AccountService.html":{}}}],["resultaccount.length",{"_index":223,"title":{},"body":{"injectables/AccountService.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":86,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":68,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["rodar",{"_index":951,"title":{},"body":{"index.html":{}}}],["rota",{"_index":910,"title":{},"body":{"index.html":{}}}],["ruby",{"_index":923,"title":{},"body":{"index.html":{}}}],["run",{"_index":908,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["saída",{"_index":720,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["schedulemodule",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["scope",{"_index":320,"title":{},"body":{"classes/ApiResponse.html":{}}}],["se",{"_index":966,"title":{},"body":{"index.html":{}}}],["see_other",{"_index":401,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["seguinte",{"_index":943,"title":{},"body":{"index.html":{}}}],["seguintes",{"_index":898,"title":{},"body":{"index.html":{}}}],["sejam",{"_index":959,"title":{},"body":{"index.html":{}}}],["selecionar",{"_index":947,"title":{},"body":{"index.html":{}}}],["sequelize",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"dependencies.html":{},"index.html":{}}}],["sequelizemodule",{"_index":102,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{}}}],["sequelizemodule.forfeature([account",{"_index":106,"title":{},"body":{"modules/AccountModule.html":{}}}],["sequelizemodule.forfeature([company",{"_index":655,"title":{},"body":{"modules/CompanyModule.html":{}}}],["sequelizemodule.forfeature([person",{"_index":746,"title":{},"body":{"modules/PersonModule.html":{}}}],["sequelizemodule.forfeature([transaction",{"_index":775,"title":{},"body":{"modules/TransactionModule.html":{}}}],["sequelizemodule.forroot",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["ser",{"_index":895,"title":{},"body":{"index.html":{}}}],["serialize",{"_index":589,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":478,"title":{},"body":{"classes/ApiResponse.html":{}}}],["server_operation_canceled",{"_index":369,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["server_operation_timeout",{"_index":368,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["service_unavailable",{"_index":459,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["set",{"_index":515,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["set$data(value",{"_index":337,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["set$haserror(value",{"_index":341,"title":{},"body":{"classes/ApiResponse.html":{}}}],["set$message(value",{"_index":689,"title":{},"body":{"classes/HttpResponse.html":{}}}],["set$reason(value",{"_index":695,"title":{},"body":{"classes/HttpResponse.html":{}}}],["set$status(value",{"_index":332,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["shared/all",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["showhidden",{"_index":592,"title":{},"body":{"classes/ApiResponse.html":{}}}],["sido",{"_index":955,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["src/.../apibase.ts",{"_index":874,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":876,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../options.middleware.ts",{"_index":877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["src/interface/iaccount.ts",{"_index":705,"title":{},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"coverage.html":{}}}],["src/interface/icompany.ts",{"_index":706,"title":{},"body":{"interfaces/ICompany.html":{},"coverage.html":{}}}],["src/interface/iperson.ts",{"_index":707,"title":{},"body":{"interfaces/IPerson.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/module/account/account.controller.ts",{"_index":55,"title":{},"body":{"controllers/AccountController.html":{},"coverage.html":{}}}],["src/module/account/account.controller.ts:18",{"_index":64,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/module/account/account.model.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/module/account/account.model.ts:11",{"_index":29,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:14",{"_index":35,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:17",{"_index":26,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:20",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:23",{"_index":25,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:26",{"_index":30,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:29",{"_index":28,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.model.ts:8",{"_index":32,"title":{},"body":{"classes/Account.html":{}}}],["src/module/account/account.module.ts",{"_index":99,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/module/account/account.service.ts",{"_index":109,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/module/account/account.service.ts:108",{"_index":121,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:151",{"_index":132,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:168",{"_index":128,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:18",{"_index":117,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:185",{"_index":135,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/account/account.service.ts:24",{"_index":124,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/module/company/company.model.ts",{"_index":648,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/module/company/company.model.ts:6",{"_index":649,"title":{},"body":{"classes/Company.html":{}}}],["src/module/company/company.module.ts",{"_index":652,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/module/company/company.service.ts",{"_index":656,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/module/company/company.service.ts:16",{"_index":664,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/company/company.service.ts:26",{"_index":669,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/company/company.service.ts:43",{"_index":666,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/company/company.service.ts:9",{"_index":661,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/module/person/person.model.ts",{"_index":739,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["src/module/person/person.model.ts:6",{"_index":740,"title":{},"body":{"classes/Person.html":{}}}],["src/module/person/person.module.ts",{"_index":743,"title":{},"body":{"modules/PersonModule.html":{}}}],["src/module/person/person.service.ts",{"_index":747,"title":{},"body":{"injectables/PersonService.html":{},"coverage.html":{}}}],["src/module/person/person.service.ts:15",{"_index":754,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/person/person.service.ts:25",{"_index":756,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/person/person.service.ts:42",{"_index":758,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/person/person.service.ts:9",{"_index":751,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/module/transaction/transaction.model.ts",{"_index":765,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/module/transaction/transaction.model.ts:11",{"_index":766,"title":{},"body":{"classes/Transaction.html":{}}}],["src/module/transaction/transaction.model.ts:14",{"_index":767,"title":{},"body":{"classes/Transaction.html":{}}}],["src/module/transaction/transaction.model.ts:8",{"_index":769,"title":{},"body":{"classes/Transaction.html":{}}}],["src/module/transaction/transaction.module.ts",{"_index":773,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/module/transaction/transaction.service.ts",{"_index":709,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/module/transaction/transaction.service.ts:14",{"_index":778,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/module/transaction/transaction.service.ts:20",{"_index":780,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/module/transaction/transaction.service.ts:52",{"_index":779,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/shared/all",{"_index":290,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/shared/middleware/options.middleware.ts",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/apibase.ts",{"_index":317,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/utils/apibase.ts:187",{"_index":329,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:188",{"_index":327,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:189",{"_index":326,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:197",{"_index":331,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:201",{"_index":333,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:205",{"_index":336,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:209",{"_index":338,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:213",{"_index":340,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/apibase.ts:217",{"_index":342,"title":{},"body":{"classes/ApiResponse.html":{}}}],["src/utils/rest/httpresponse.ts",{"_index":681,"title":{},"body":{"classes/HttpResponse.html":{},"coverage.html":{}}}],["src/utils/rest/httpresponse.ts:14",{"_index":688,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:18",{"_index":690,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:2",{"_index":684,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:22",{"_index":691,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:26",{"_index":692,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:3",{"_index":686,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:30",{"_index":694,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:34",{"_index":696,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:38",{"_index":697,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:4",{"_index":685,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:42",{"_index":698,"title":{},"body":{"classes/HttpResponse.html":{}}}],["src/utils/rest/httpresponse.ts:5",{"_index":683,"title":{},"body":{"classes/HttpResponse.html":{}}}],["stack",{"_index":582,"title":{},"body":{"classes/ApiResponse.html":{}}}],["start:dev",{"_index":909,"title":{},"body":{"index.html":{}}}],["started",{"_index":884,"title":{"index.html":{}},"body":{}}],["statements",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":324,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["status(value",{"_index":516,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["status.error_conflict",{"_index":488,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_duplicated_data",{"_index":502,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_invalid_parameter",{"_index":495,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_invalid_request",{"_index":505,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_not_found",{"_index":484,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_null_parameter",{"_index":481,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.error_null_value",{"_index":483,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.exception",{"_index":480,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.failed",{"_index":476,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.internal_server_error",{"_index":560,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.no_content",{"_index":485,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.promise_timeout",{"_index":499,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.request_timeout",{"_index":498,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.server_operation_timeout",{"_index":497,"title":{},"body":{"classes/ApiResponse.html":{}}}],["status.success",{"_index":470,"title":{},"body":{"classes/ApiResponse.html":{}}}],["statuscode",{"_index":313,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["success",{"_index":381,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["success(data",{"_index":520,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":284,"title":{},"body":{"injectables/AccountService.html":{}}}],["support",{"_index":970,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":971,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":467,"title":{},"body":{"classes/ApiResponse.html":{}}}],["switching_protocols",{"_index":375,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["synchronize",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["tabelas",{"_index":958,"title":{},"body":{"index.html":{}}}],["table",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"coverage.html":{}}}],["table({tablename",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["tecnologias",{"_index":961,"title":{},"body":{"index.html":{}}}],["ted",{"_index":729,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["temporary_redirect",{"_index":405,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["tenha",{"_index":954,"title":{},"body":{"index.html":{}}}],["test",{"_index":945,"title":{},"body":{"index.html":{}}}],["teste",{"_index":914,"title":{},"body":{"index.html":{}}}],["testes",{"_index":925,"title":{},"body":{"index.html":{}}}],["this.accountmodel.create(accounttoupdate",{"_index":250,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountmodel.findall",{"_index":222,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.accountservice.registercnab(file",{"_index":89,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.companymodel.create(company",{"_index":671,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.findone",{"_index":680,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.findorcreate",{"_index":673,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.data",{"_index":512,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["this.haserror",{"_index":513,"title":{},"body":{"classes/ApiResponse.html":{}}}],["this.logger",{"_index":304,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.message",{"_index":699,"title":{},"body":{"classes/HttpResponse.html":{}}}],["this.personmodel.create(person",{"_index":761,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personmodel.findone",{"_index":764,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personmodel.findorcreate",{"_index":762,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.reason",{"_index":700,"title":{},"body":{"classes/HttpResponse.html":{}}}],["this.registeraccount(accountdatalist",{"_index":221,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.registercompany(companylist",{"_index":219,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.registerperson(personlist",{"_index":214,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.status",{"_index":511,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{}}}],["this.totalizer(resultaccount",{"_index":224,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.transactionmodel.findone",{"_index":737,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["this.transactionmodel.findorcreate",{"_index":732,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["throttlermodule",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":229,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["time",{"_index":16,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["timeout",{"_index":500,"title":{},"body":{"classes/ApiResponse.html":{}}}],["title",{"_index":564,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/functions.html":{}}}],["too_many_requests",{"_index":451,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["total",{"_index":269,"title":{},"body":{"injectables/AccountService.html":{}}}],["totalizer",{"_index":114,"title":{},"body":{"injectables/AccountService.html":{}}}],["totalizer(resultaccount",{"_index":134,"title":{},"body":{"injectables/AccountService.html":{}}}],["transaction",{"_index":144,"title":{"classes/Transaction.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transaction.model",{"_index":711,"title":{},"body":{"interfaces/ITransaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["transaction.name",{"_index":734,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transaction.nature",{"_index":735,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transaction.service",{"_index":774,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.type",{"_index":733,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transaction/transaction.model",{"_index":145,"title":{},"body":{"injectables/AccountService.html":{}}}],["transaction/transaction.service",{"_index":143,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiondata",{"_index":239,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiondata.name",{"_index":277,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiondata.type",{"_index":247,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionid",{"_index":17,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{}}}],["transactionlist",{"_index":715,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transactionmodel",{"_index":713,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transactionmodule",{"_index":606,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionservice",{"_index":142,"title":{"injectables/TransactionService.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/ITransaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transactionservice(transaction",{"_index":162,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionservice.findtransaction(operation.transactionid",{"_index":275,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionservice.findtransaction(parseint(accountitem.transactionid",{"_index":238,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactionservice.registertransaction",{"_index":163,"title":{},"body":{"injectables/AccountService.html":{}}}],["transactiontype",{"_index":738,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["transform",{"_index":168,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate",{"_index":172,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate.push(accountdatestr.substring(0",{"_index":173,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate.push(accountdatestr.substring(4",{"_index":176,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformdate.push(accountdatestr.substring(6",{"_index":179,"title":{},"body":{"injectables/AccountService.html":{}}}],["transformer",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":530,"title":{},"body":{"classes/ApiResponse.html":{},"modules/AppModule.html":{},"classes/Transaction.html":{}}}],["try",{"_index":152,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["ts",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiResponse.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"interfaces/ICompany.html":{},"interfaces/IPerson.html":{},"interfaces/ITransaction.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":974,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror",{"_index":557,"title":{},"body":{"classes/ApiResponse.html":{}}}],["typeof",{"_index":151,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["typescript",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/Company.html":{},"classes/Person.html":{},"classes/Transaction.html":{},"dependencies.html":{}}}],["unable",{"_index":491,"title":{},"body":{"classes/ApiResponse.html":{}}}],["unauthorized",{"_index":411,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/HttpResponse.html":{}}}],["unique",{"_index":770,"title":{},"body":{"classes/Transaction.html":{}}}],["unitário",{"_index":934,"title":{},"body":{"index.html":{}}}],["unprocessable_entity",{"_index":445,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["unsupported_media_type",{"_index":435,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["up",{"_index":905,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":73,"title":{},"body":{"controllers/AccountController.html":{}}}],["uri_too_long",{"_index":433,"title":{},"body":{"classes/ApiResponse.html":{},"miscellaneous/enumerations.html":{}}}],["useclass",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":72,"title":{},"body":{"controllers/AccountController.html":{}}}],["useinterceptors(fileinterceptor(\"file",{"_index":85,"title":{},"body":{"controllers/AccountController.html":{}}}],["username",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":343,"title":{},"body":{"classes/ApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.inspect(data",{"_index":591,"title":{},"body":{"classes/ApiResponse.html":{}}}],["utilizado",{"_index":936,"title":{},"body":{"index.html":{}}}],["utilizando",{"_index":928,"title":{},"body":{"index.html":{}}}],["utils/apibase",{"_index":76,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/CompanyService.html":{},"interfaces/ITransaction.html":{},"injectables/PersonService.html":{},"injectables/TransactionService.html":{}}}],["validator",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":18,"title":{},"body":{"classes/Account.html":{},"injectables/AccountService.html":{},"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountData.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":976,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendas",{"_index":727,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/TransactionService.html":{}}}],["void",{"_index":334,"title":{},"body":{"classes/ApiResponse.html":{},"classes/HttpResponse.html":{},"miscellaneous/functions.html":{}}}],["wsdl",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["xml2js",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["year",{"_index":175,"title":{},"body":{"injectables/AccountService.html":{}}}],["yes",{"_index":125,"title":{},"body":{"injectables/AccountService.html":{},"injectables/CompanyService.html":{},"injectables/PersonService.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PersonModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/account/account.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ben_code\n                            \n                            \n                                card\n                            \n                            \n                                companyId\n                            \n                            \n                                date\n                            \n                            \n                                personId\n                            \n                            \n                                time\n                            \n                            \n                                transactionId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ben_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/account/account.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table, DataType , ForeignKey, BelongsTo} from \"sequelize-typescript\";\nimport { Company } from \"../company/company.model\";\nimport { Person } from \"../person/person.model\";\n\n@Table({tableName: 'account'})\nexport class Account extends Model {\n    @Column\n    transactionId: number;\n\n    @Column\n    date: Date;\n\n    @Column({ type: DataType.DECIMAL })\n    value: number;\n\n    @Column\n    card: string;\n\n    @Column\n    time: string;\n\n    @Column\n    ben_code: string;\n\n    @Column\n    personId: number;\n\n    @Column\n    companyId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountController.html":{"url":"controllers/AccountController.html","title":"controller - AccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/account/account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                account\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                registerCnab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        registerCnab\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCnab(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('cnab')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/module/account/account.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UseInterceptors,\n  UploadedFile,\n} from \"@nestjs/common\";\nimport { ApiBase } from \"../../utils/ApiBase\";\nimport { AccountService } from \"./account.service\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\n\n@Controller(\"account\")\nexport class AccountController {\n  constructor(private accountService: AccountService) { }\n\n  @Post(\"cnab\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  public async registerCnab( @UploadedFile() file: Express.Multer.File): Promise {\n    return ApiBase.handleHttpResponse( await this.accountService.registerCnab(file));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_providers\n\n\n\n\nAccountService\n\nAccountService\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/account/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountService } from './account.service';\nimport { AccountController } from './account.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Account } from './account.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Account])],\n  providers: [AccountService],\n  controllers: [AccountController],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/account/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerAccount\n                            \n                            \n                                    Public\n                                    Async\n                                registerCnab\n                            \n                            \n                                    Private\n                                    Async\n                                registerCompany\n                            \n                            \n                                    Private\n                                    Async\n                                registerPerson\n                            \n                            \n                                    Private\n                                    Async\n                                totalizer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/account/account.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        registerAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAccount(accountDataList: IAccount[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountDataList\n                                    \n                                                IAccount[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        registerCnab\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCnab(file: Express.Multer.File, originalFile?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    originalFile\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        registerCompany\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCompany(companyList: ICompany[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    companyList\n                                    \n                                                ICompany[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        registerPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPerson(personList: IPerson[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    personList\n                                    \n                                                IPerson[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        totalizer\n                        \n                    \n                \n            \n            \n                \n                    \n                    totalizer(resultAccount: Account[])\n                \n            \n\n\n            \n                \n                    Defined in src/module/account/account.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resultAccount\n                                    \n                                                Account[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Account } from './account.model'\n//\nimport { PersonService } from '../person/person.service';\nimport { Person } from '../person/person.model';\nimport { CompanyService } from \"../company/company.service\";\nimport { Company } from \"../company/company.model\";\nimport { TransactionService } from \"../transaction/transaction.service\";\nimport { Transaction } from \"../transaction/transaction.model\";\nimport { IAccount, IAccountData } from \"../../interface/IAccount\";\nimport { IPerson } from \"../../interface/IPerson\";\nimport { ICompany } from \"../../interface/ICompany\";\n\n@Injectable()\nexport class AccountService {\n\tconstructor(\n\t\t@InjectModel(Account)\n\t\tprivate accountModel: typeof Account\n\t) { }\n\n\tpublic async registerCnab(file: Express.Multer.File, originalFile?: string ): Promise {\n\t\ttry {\n\t\t\tif (!file && !originalFile) return ApiBase.error('Missing file param', ApiBase.Status.ERROR_NULL_PARAMETER);\n\n\t\t\tconst fileString =  (file) ? file.buffer.toString() : originalFile;\n\t\t\tconst accountList = fileString.split(\"\\n\");\n\n\t\t\tconst accountDataList: IAccount[] = [];\n\t\t\tconst personList: IPerson[] = [];\n\t\t\tconst companyList: ICompany[] = [];\n\n\t\t\t//if (!originalFile) {\n\t\t\t\tconst transactionService = new TransactionService(Transaction);\n\t\t\t\tawait transactionService.registerTransaction();\n\t\t\t//}\n\t\t\t\n\n\t\t\tif (accountList && accountList.length > 0) {\n\t\t\t\tfor (const accountItem of accountList) {\n\t\t\t\t\tif (!accountItem) break;\n\n\t\t\t\t\t// Transform Date\n\t\t\t\t\tconst accountDateStr = accountItem.substring(1, 9);\n\t\t\t\t\tconst transformDate = [];\n\t\t\t\t\ttransformDate.push(accountDateStr.substring(0, 4)) // Year\n\t\t\t\t\ttransformDate.push(accountDateStr.substring(4, 6)) // Month\n\t\t\t\t\ttransformDate.push(accountDateStr.substring(6, 8)) // Day\n\t\t\t\t\tconst accountDate = new Date(`${transformDate[0]}/${transformDate[1]}/${transformDate[2]}`)\n\n\t\t\t\t\t// Prepare account\n\t\t\t\t\tconst accountValue = parseFloat(accountItem.substring(9, 19)) / 100;\n\t\t\t\t\tconst account: IAccount = {\n\t\t\t\t\t\ttransactionId: accountItem.substring(0, 1),\n\t\t\t\t\t\tdate: accountDate,\n\t\t\t\t\t\tvalue: accountValue,\n\t\t\t\t\t\tben_code: accountItem.substring(19, 30),\n\t\t\t\t\t\tcard: accountItem.substring(30, 42),\n\t\t\t\t\t\ttime: accountItem.substring(42, 48),\n\t\t\t\t\t\tperson_name: accountItem.substring(48, 62),\n\t\t\t\t\t\tcompany_name: accountItem.substring(62, 81)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!personList.find(item => item.person_name === account.person_name)) {\n\t\t\t\t\t\tpersonList.push({\n\t\t\t\t\t\t\tperson_name: account.person_name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!companyList.find(item => item.name === account.company_name)) {\n\t\t\t\t\t\tcompanyList.push({ name: account.company_name });\n\t\t\t\t\t}\n\n\t\t\t\t\taccountDataList.push(account);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (personList && personList.length > 0) {\n\t\t\t\tconst result = await this.registerPerson(personList);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t}\n\n\t\t\tif (companyList && companyList.length > 0) {\n\t\t\t\tconst result = await this.registerCompany(companyList);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t}\n\n\t\t\tif (accountDataList && accountDataList.length > 0) {\n\t\t\t\tconst result = await this.registerAccount(accountDataList);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t}\n\n\t\t\tconst resultAccount = await this.accountModel.findAll({})\n\t\t\tif (resultAccount && resultAccount.length > 0) {\n\t\t\t\tconst result = await this.totalizer(resultAccount);\n\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\treturn ApiBase.success(result.$data);\n\t\t\t}\n\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async registerAccount(accountDataList: IAccount[]): Promise {\n\t\ttry {\n\t\t\tif (accountDataList.length  0) {\n\t\t\t\tconst personService = new PersonService(Person);\n\t\t\t\tconst companyService = new CompanyService(Company);\n\t\t\t\tconst transactionService = new TransactionService(Transaction);\n\n\t\t\t\tfor (const accountItem of accountDataList) {\n\t\t\t\t\tlet result = await personService.findPerson(accountItem.person_name);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\tconst personData = result.$data;\n\n\t\t\t\t\tresult = await companyService.findCompany(accountItem.company_name);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\tconst companyData = result.$data\n\n\t\t\t\t\tresult = await transactionService.findTransaction(parseInt(accountItem.transactionId));\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\tconst transactionData = result.$data\n\n\t\t\t\t\tconst accountToUpdate: IAccountData = {\n\t\t\t\t\t\tcard: accountItem.card,\n\t\t\t\t\t\tcompanyId: companyData.id,\n\t\t\t\t\t\tdate: accountItem.date,\n\t\t\t\t\t\tpersonId: personData.id,\n\t\t\t\t\t\tben_code: accountItem.ben_code,\n\t\t\t\t\t\ttime: accountItem.time,\n\t\t\t\t\t\ttransactionId: transactionData.type,\n\t\t\t\t\t\tvalue: accountItem.value\n\t\t\t\t\t}\n\n\t\t\t\t\tconst accountResult = await this.accountModel.create(accountToUpdate);\n\t\t\t\t\tif (!accountResult) return ApiBase.error(`Fail to create account`, ApiBase.Status.FAILED);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async registerPerson(personList: IPerson[]): Promise {\n\t\ttry {\n\t\t\tif (personList.length  0) {\n\t\t\t\tfor (const personItem of personList) {\n\t\t\t\t\tconst result = await personService.findOrCreatePerson(personItem);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async registerCompany(companyList: ICompany[]): Promise {\n\t\ttry {\n\t\t\tif (companyList.length  0) {\n\t\t\t\tfor (const companyItem of companyList) {\n\t\t\t\t\tconst result = await companyService.findOrCreateCompany(companyItem);\n\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tprivate async totalizer(resultAccount: Account[]): Promise {\n\t\ttry {\n\t\t\tif (resultAccount.length  item.companyId).filter((v, i, a) => a.indexOf(v) === i);\n\t\t\tconst account: object[] = []\n\n\t\t\tif (companyIdList && companyIdList.length > 0) {\n\t\t\t\tfor (const companyId of companyIdList) {\n\t\t\t\t\tconst operationByCompany = resultAccount.filter(item => item.companyId === companyId);\n\t\t\t\t\tif (operationByCompany && operationByCompany.length > 0) {\n\n\t\t\t\t\t\tconst companyService = new CompanyService(Company);\n\t\t\t\t\t\tlet result = await companyService.findCompany(null, companyId);\n\t\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\t\tconst companyData: ICompany = result.$data;\n\n\t\t\t\t\t\tconst accountResult = {\n\t\t\t\t\t\t\tcompany: companyData.name,\n\t\t\t\t\t\t\ttransaction: [],\n\t\t\t\t\t\t\ttotal: null\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const operation of operationByCompany) {\n\t\t\t\t\t\t\tconst operationValue: any = operation.value;\n\t\t\t\t\t\t\toperation.value = parseFloat(operationValue);\n\n\t\t\t\t\t\t\tconst transactionService = new TransactionService(Transaction);\n\t\t\t\t\t\t\tresult = await transactionService.findTransaction(operation.transactionId)\n\t\t\t\t\t\t\tif (result.$status !== ApiBase.Status.SUCCESS) return ApiBase.error(result.$data, result.$status)\n\t\t\t\t\t\t\tconst transactionData = result.$data;\n\n\t\t\t\t\t\t\taccountResult.transaction.push({\n\t\t\t\t\t\t\t\ttype: transactionData.name,\n\t\t\t\t\t\t\t\tdate: operation.date,\n\t\t\t\t\t\t\t\tben_code: operation.ben_code,\n\t\t\t\t\t\t\t\tcard: operation.card,\n\t\t\t\t\t\t\t\tvalue: operation.value\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst accountTotal = operationByCompany.reduce((sum, item) => sum + item.value, 0);\n\t\t\t\t\t\taccountResult.total = accountTotal;\n\t\t\t\t\t\taccount.push(accountResult);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ApiBase.success(account);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/all-exception.filter.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/all-exception.filter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ApiBase.ApiResponse, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/all-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                ApiBase.ApiResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import 'dotenv/config';\nimport { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ApiBase } from '../utils/ApiBase';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private readonly logger : Logger \n  constructor(){\n    this.logger = new Logger \n  }\n  catch(exception: ApiBase.ApiResponse, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    const errorResponse = Object.assign({},exception );\n    const statusCode = (exception && exception.$status && exception.$status >= 100) ? exception.$status : ApiBase.Status.INTERNAL_SERVER_ERROR;\n    if (exception && exception.$status && exception.$status \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiResponse.html":{"url":"classes/ApiResponse.html","title":"class - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/ApiBase.ts\n        \n\n\n            \n                Description\n            \n            \n                Default response scope for API.\nreturn Promise\nReturn\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                hasError\n                            \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    $status\n                                \n                                \n                                    $data\n                                \n                                \n                                    $hasError\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/ApiBase.ts:189\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/ApiBase.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/ApiBase.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/ApiBase.ts:187\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        $status\n                    \n                \n\n                \n                    \n                        get$status()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:197\n                                \n                            \n\n                \n                    \n                        set$status(value: Status)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:201\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Status\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $data\n                    \n                \n\n                \n                    \n                        get$data()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:205\n                                \n                            \n\n                \n                    \n                        set$data(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:209\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $hasError\n                    \n                \n\n                \n                    \n                        get$hasError()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:213\n                                \n                            \n\n                \n                    \n                        set$hasError(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/ApiBase.ts:217\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        const util = require('util');\nimport { Logger } from '@nestjs/common';\n\nimport * as dotenv from 'dotenv';\nimport { HttpResponse as ApiHttpResponse } from './rest/HttpResponse';\n//\n\nexport namespace ApiBase {\n\n    export type HttpResponse = ApiHttpResponse;\n\n    /**\n     * Default response http status code.\n     *\n     * @example\n     * `return ApiBase.Status.SUCCESS`\n     * \n     * Return\n     * @returns status HTTP.\n     */\n    export const enum Status {\n        FAILED = 0,\n        EXCEPTION,\n        ERROR_NULL_PARAMETER,\n        ERROR_NULL_VALUE,\n        ERROR_INVALID_PARAMETER,\n        ERROR_NOT_FOUND,\n        ERROR_DUPLICATED_DATA,\n        ERROR_TRUNCATED_DATA,\n        ERROR_REPOSITORY_BEGIN,\n        ERROR_REPOSITORY_END,\n        ERROR_MAX_ATTEMPTS,\n        ERROR_CONFLICT,\n        ERROR_UNKOWN_EVENT,\n        ERROR_PROMISIFY_FAILED,\n        REQUEST_CANCELED_BY_CLIENT,\n        SERVER_OPERATION_TIMEOUT,\n        SERVER_OPERATION_CANCELED,\n        ERROR_INVALID_REQUEST,\n        ERROR_JOB_EXECUTION_FAILED,\n        PROMISE_TIMEOUT,\n        ERROR_ALREADY_REGISTERED,\n        CONTINUE = 100,\n        SWITCHING_PROTOCOLS = 101,\n        PROCESSING = 102,\n        EARLYHINTS = 103,\n        SUCCESS = 200,\n        CREATED = 201,\n        ACCEPTED = 202,\n        NON_AUTHORITATIVE_INFORMATION = 203,\n        NO_CONTENT = 204,\n        RESET_CONTENT = 205,\n        PARTIAL_CONTENT = 206,\n        AMBIGUOUS = 300,\n        MOVED_PERMANENTLY = 301,\n        FOUND = 302,\n        SEE_OTHER = 303,\n        NOT_MODIFIED = 304,\n        TEMPORARY_REDIRECT = 307,\n        PERMANENT_REDIRECT = 308,\n        BAD_REQUEST = 400,\n        UNAUTHORIZED = 401,\n        PAYMENT_REQUIRED = 402,\n        FORBIDDEN = 403,\n        METHOD_NOT_ALLOWED = 405,\n        NOT_ACCEPTABLE = 406,\n        PROXY_AUTHENTICATION_REQUIRED = 407,\n        REQUEST_TIMEOUT = 408,\n        GONE = 410,\n        LENGTH_REQUIRED = 411,\n        PRECONDITION_FAILED = 412,\n        PAYLOAD_TOO_LARGE = 413,\n        URI_TOO_LONG = 414,\n        UNSUPPORTED_MEDIA_TYPE = 415,\n        REQUESTED_RANGE_NOT_SATISFIABLE = 416,\n        EXPECTATION_FAILED = 417,\n        I_AM_A_TEAPOT = 418,\n        MISDIRECTED = 421,\n        UNPROCESSABLE_ENTITY = 422,\n        FAILED_DEPENDENCY = 424,\n        PRECONDITION_REQUIRED = 428,\n        TOO_MANY_REQUESTS = 429,\n        INTERNAL_SERVER_ERROR = 500,\n        NOT_IMPLEMENTED = 501,\n        BAD_GATEWAY = 502,\n        SERVICE_UNAVAILABLE = 503,\n        GATEWAY_TIMEOUT = 504,\n        HTTP_VERSION_NOT_SUPPORTED = 505\n    }\n\n    export function handleHttpResponse(apiResponse: ApiBase.ApiResponse): ApiHttpResponse {\n        try {\n            const response = new ApiHttpResponse();\n            switch (apiResponse.$status) {\n                case Status.SUCCESS:\n                    response.$message = 'Success';\n                    response.$status = 200;\n                    response.$reason = null;\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.FAILED:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Failed';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.EXCEPTION:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Exception';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_NULL_PARAMETER:\n                    response.$message = 'Bad Request';\n                    response.$status = 400;\n                    response.$reason = 'Null parameters';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_NULL_VALUE:\n                    response.$message = 'Bad Request';\n                    response.$status = 400;\n                    response.$reason = 'Null value';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_NOT_FOUND:\n                case Status.NO_CONTENT:\n                    response.$message = 'Not Found';\n                    response.$status = 404;\n                    response.$reason = 'Resource not found';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_CONFLICT:\n                    response.$message = 'Conflict';\n                    response.$status = 409;\n                    response.$reason = 'Unable to process request due to existing data';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_INVALID_PARAMETER:\n                    response.$message = 'Bad Request';\n                    response.$status = 400;\n                    response.$reason = 'Invalid Parameters';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.SERVER_OPERATION_TIMEOUT:\n                case Status.REQUEST_TIMEOUT:\n                case Status.PROMISE_TIMEOUT:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Server operation timeout reached';\n                    response.$data = apiResponse.$data;\n                    break;\n                case Status.ERROR_DUPLICATED_DATA:\n                    response.$message = 'Internal Server Error';\n                    response.$status = 500;\n                    response.$reason = 'Data is already registered';\n                case Status.ERROR_INVALID_REQUEST:\n                    response.$message = 'Atenção';\n                    response.$status = 400;\n                    response.$reason = 'Requisição inválida';\n                    response.$data = apiResponse.$data;\n                    break;\n                default:\n                    response.$message = 'Internal Server Error';\n                    response.$status = apiResponse.$status;\n                    response.$reason = 'Internal error not handled';\n                    response.$data = apiResponse.$data;\n                    break;\n            }\n            return response;\n        } catch (ex) {\n            throw ex;\n        }\n    }\n\n    /**\n     * Default response scope for API.\n     *\n     * @example\n     * `return Promise`\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * @returns hasError indicator.\n     */\n    export class ApiResponse {\n        private status: Status;\n        private data: any;\n        private hasError: boolean;\n\n        constructor() {\n            this.status = null;\n            this.data = null;\n            this.hasError = false;\n        }\n\n        public get $status(): Status {\n            return this.status;\n        }\n\n        public set $status(value: Status) {\n            this.status = value;\n        }\n\n        public get $data(): any {\n            return this.data;\n        }\n\n        public set $data(value: any) {\n            this.data = value;\n        }\n\n        public get $hasError(): boolean {\n            return this.hasError;\n        }\n\n        public set $hasError(value: boolean) {\n            this.hasError = value;\n        }\n    }\n\n    /**\n     * API success.\n     *\n     * @example\n     * `return ApiBase.sucess(body)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * \n     */\n    export function success(data: any): ApiResponse {\n\n        if (data instanceof ApiResponse) return data;\n\n        const apiResult = new ApiResponse();\n        apiResult.$data = data;\n        apiResult.$status = Status.SUCCESS;\n        apiResult.$hasError = false;\n\n        return apiResult;\n    }\n\n    /**\n     * API error.\n     *\n     * @example\n     * `return ApiBase.error(data, statusCode)`\n     *\n     * @param data string or object.\n     * @param statusCode HttpStatus.\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * \n     */\n    export function error(data: any, statusCode: Status): ApiResponse {\n        const apiResult = new ApiResponse();\n        apiResult.$data = (typeof data == 'object') ? ApiBase.objectSerialize(data) : data;\n        apiResult.$status = statusCode;\n        apiResult.$hasError = true;\n\n        if (statusCode !== Status.ERROR_NOT_FOUND) {\n            const logger = new Logger\n            logger.error(`${data}`, `API ERROR - ${statusCode}`);\n        }\n\n        return apiResult;\n    }\n\n    /**\n     * API exception.\n     *\n     * @example\n     * `return ApiBase.exception(error)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns data object.\n     * @returns status HTTP response status code.\n     * \n     */\n    export function exception(dataError: any): ApiResponse {\n        try {\n            const apiException = new Error();\n            const apiError = new ApiResponse();\n\n            // Error by Http request (ex: axios)\n            if (dataError && dataError.hasOwnProperty('response')) {\n                apiException.name = dataError['response']['statusText'];\n                apiException.message = dataError['message'];\n                apiException.stack = dataError['stack'];\n                if (dataError['response']['data'] && dataError['response']['data']['errors'] && dataError['response']['data']['errors'].length > 0) {\n                    apiException.message = dataError['response']['data']['errors'].join(\" - \")\n                } else if (dataError['response']['data'] && dataError['response']['data']['error'] && dataError['response']['data']['error'].length > 0){\n                    apiException.message = dataError['response']['data']['error'].join(\" - \")\n                } else if (dataError['response']['data']) {\n                    apiException.message = dataError['response']['data'];\n                }\n\n                apiError.$data = apiException;\n                apiError.$status = dataError['response']['status'];\n                apiError.$hasError = true;\n\n                ApiBase.registerError(apiException.message, apiException.stack);\n\n                return apiError;\n            }\n\n            // Internal Error\n            if (dataError instanceof TypeError || dataError.hasOwnProperty(\"message\") ) {\n                apiException.message = dataError['message'];\n                apiException.name = dataError['name'];\n                apiException.stack = dataError['stack'];\n\n                apiError.$data = apiException;\n                apiError.$status = Status.INTERNAL_SERVER_ERROR;\n                apiError.$hasError = true;\n\n                ApiBase.registerError(apiException.message, apiException.stack);\n\n                return apiError;\n            }\n\n            return dataError;\n        } catch (ex) {\n            return ex;\n        }\n    }\n\n    /**\n     * API log.\n     *\n     * @example\n     * `return ApiBase.log(msg)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns void.\n     */\n    export function log(msg: object | string, title?: string): void {\n        try {\n            if (!msg) {\n                ApiBase.registerError(new Error('msg is NULL'));\n                return;\n            }\n\n            const data = (typeof (msg) === 'object') ? ApiBase.objectSerialize(msg) : msg;\n\n            const logger = new Logger\n            logger.log(data, (title) ? title : 'Debug');\n\n        } catch (ex) {\n            ApiBase.logException(`Exception on function log(): ${ex}`);\n        }\n    }\n\n    /**\n     * API log error\n     *\n     * @example\n     * `return ApiBase.registerError(msg)`\n     *\n     * @param data string or object.\n     * \n     * Return\n     * @returns void.\n     */\n\n    export function registerError(msg: object | string, errorData?: any): void {\n        try {\n            if (!msg) return;\n\n            const logger = new Logger\n            let msgData = null;\n            if (typeof (msg) === 'object') {\n                if (msg instanceof Error) {\n                    msgData = msg.stack;\n                } else {\n                    msgData = new Error(ApiBase.objectSerialize(msg)).stack;\n                }\n            } else {\n                msgData = msg;\n            }\n            const logData = {\n                msg: msgData,\n                errorData: (errorData && errorData instanceof Error) ? { name: errorData.name, message: errorData.message, stack: errorData.stack } : errorData\n            }\n\n            logger.error(logData, 'API ERROR');\n        } catch (ex) {\n            ApiBase.logException(`Exception on function registerError(): ${ex}`);\n        }\n    }\n\n    /**\n     * API log error\n     *\n     * @example\n     * `return ApiBase.logException(msg)`\n     *\n     * @param data string.\n     * \n     * Return\n     * @returns void.\n     */\n    export function logException(msg: string): void {\n        if (!msg) return;\n\n        const logger = new Logger\n        logger.error(msg, 'Exception');\n    }\n\n    /**\n     * API object serialize\n     *\n     * @example\n     * `return ApiBase.objectSerialize(data)`\n     *\n     * @param data string.\n     * @param data Function.\n     * \n     * Return\n     * @returns string.\n     */\n    export function objectSerialize(data: object | Function): string {\n        return util.inspect(data, { showHidden: true, depth: null });\n    }\n\n    /**\n     * API environment\n     *\n     * @example\n     * `return ApiBase.getApiEnv()`\n     *\n     * Return\n     * @returns string.\n     */\n    export function getApiEnv(): string {\n        dotenv.config();\n        const env = process.env.NODE_ENV ? process.env.NODE_ENV.toLowerCase() : null\n        return env;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccountModule\n\nAccountModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            PersonModule\n                        \n                        \n                            TransactionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // General import\nimport { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { AllExceptionsFilter } from './shared/all-exception.filter';\nimport { SequelizeModule } from '@nestjs/sequelize';\n// Module import\nimport { ConfigModule } from '@nestjs/config';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { LoggerModule } from 'nestjs-pino';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { AccountModule } from './module/account/account.module';\nimport { CompanyModule } from './module/company/company.module';\nimport { PersonModule } from './module/person/person.module';\nimport { TransactionModule } from './module/transaction/transaction.module';\n\n@Module({\n\timports: [\n\t\tAccountModule,\n\t\tCompanyModule,\n\t\tPersonModule,\n\t\tTransactionModule,\n\t\tLoggerModule.forRoot(),\n\t\tConfigModule.forRoot({\n\t\t\tisGlobal: true,\n\t\t}),\n\t\tThrottlerModule.forRoot({\n\t\t\tttl: 60,\n\t\t\tlimit: 10,\n\t\t}),\n\t\tScheduleModule.forRoot(),\n\t\tSequelizeModule.forRoot({\n\t\t\tdialect: 'postgres',\n\t\t\thost: 'localhost',\n\t\t\tport: 5432,\n\t\t\tusername: 'postgres',\n\t\t\tpassword: 'postgres',\n\t\t\tdatabase: 'postgres',\n\t\t\tautoLoadModels: true,\n\t\t\tsynchronize: true,\n\t\t  })],\n\tcontrollers: [],\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: AllExceptionsFilter,\n\t\t},\n\t],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/company/company.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/company/company.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table } from \"sequelize-typescript\";\n\n@Table({tableName: 'company'})\nexport class Company extends Model {\n    @Column\n    name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService\n\nCompanyService\n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/company/company.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Company } from './company.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Company])],\n  providers: [CompanyService],\n  controllers: [],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/company/company.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createPerson\n                            \n                            \n                                    Public\n                                    Async\n                                findCompany\n                            \n                            \n                                    Public\n                                    Async\n                                findOrCreateCompany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/company/company.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPerson(company: Company)\n                \n            \n\n\n            \n                \n                    Defined in src/module/company/company.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    company\n                                    \n                                                Company\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findCompany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCompany(companyName?: string, companyId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/module/company/company.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    companyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    companyId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOrCreateCompany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrCreateCompany(company: ICompany)\n                \n            \n\n\n            \n                \n                    Defined in src/module/company/company.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    company\n                                    \n                                                ICompany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Company } from './company.model'\nimport { ICompany } from \"../../interface/ICompany\";\n\n@Injectable()\nexport class CompanyService  {\n\tconstructor(\n        @InjectModel(Company)\n        private companyModel: typeof Company\n    ) {}\n\n\n\tpublic async createPerson(company: Company): Promise {\n\t\ttry {\n\t\t\tconst result = await this.companyModel.create(company);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findOrCreateCompany(company: ICompany): Promise {\n\t\ttry {\n\t\t\tconst result = await this.companyModel.findOrCreate({\n\t\t\t\twhere: { name: company.name },\n\t\t\t\tdefaults: {\n\t\t\t\t\tname: company.name\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find or create company >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findCompany(companyName?: string, companyId?: number): Promise {\n\t\ttry {\n\n\t\t\tconst filter = (companyName) ? { name: companyName } : (companyId) ? { id: companyId } : null;\n\t\t\tif (!filter) return ApiBase.error(`Filter param is null`, ApiBase.Status.FAILED);\n\n\t\t\tconst result = await this.companyModel.findOne({\n\t\t\t\twhere: filter\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find company >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpResponse.html":{"url":"classes/HttpResponse.html","title":"class - HttpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/rest/HttpResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                message\n                            \n                            \n                                    Private\n                                reason\n                            \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    $message\n                                \n                                \n                                    $status\n                                \n                                \n                                    $reason\n                                \n                                \n                                    $data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/rest/HttpResponse.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/rest/HttpResponse.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        $message\n                    \n                \n\n                \n                    \n                        get$message()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:14\n                                \n                            \n\n                \n                    \n                        set$message(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $status\n                    \n                \n\n                \n                    \n                        get$status()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:22\n                                \n                            \n\n                \n                    \n                        set$status(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $reason\n                    \n                \n\n                \n                    \n                        get$reason()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:30\n                                \n                            \n\n                \n                    \n                        set$reason(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        $data\n                    \n                \n\n                \n                    \n                        get$data()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:38\n                                \n                            \n\n                \n                    \n                        set$data(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/utils/rest/HttpResponse.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export class HttpResponse {\n    private message: string;\n    private status: number;\n    private reason: any;\n    private data: any;\n\n    constructor() {\n        this.message = undefined;\n        this.status = undefined;\n        this.reason = undefined;\n        this.data = undefined;\n    }\n\n    public get $message(): string {\n        return this.message;\n    }\n\n    public set $message(value: string) {\n        this.message = value;\n    }\n\n    public get $status(): number {\n        return this.status;\n    }\n\n    public set $status(value: number) {\n        this.status = value;\n    }\n\n    public get $reason(): any {\n        return this.reason;\n    }\n\n    public set $reason(value: any) {\n        this.reason = value;\n    }\n\n    public get $data(): any {\n        return this.data;\n    }\n\n    public set $data(value: any) {\n        this.data = value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccount.html":{"url":"interfaces/IAccount.html","title":"interface - IAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/IAccount.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ben_code\n                                        \n                                \n                                \n                                        \n                                            card\n                                        \n                                \n                                \n                                        \n                                            company_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            person_name\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            transactionId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ben_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ben_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        card:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        person_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        person_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAccount {\n\ttransactionId: string;\n\tdate: Date;\n\tcompany_name: string;\n\tben_code: string;\n\tperson_name: string;\n\tvalue: number;\n\tcard: string;\n\ttime: string;\n}\n\nexport interface IAccountData {\n\ttransactionId: number;\n\tdate: Date;\n\tvalue: number;\n\tcard: string;\n\tben_code: string;\n\ttime: string;\n\tpersonId: number;\n\tcompanyId: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccountData.html":{"url":"interfaces/IAccountData.html","title":"interface - IAccountData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccountData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/IAccount.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ben_code\n                                        \n                                \n                                \n                                        \n                                            card\n                                        \n                                \n                                \n                                        \n                                            companyId\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            personId\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            transactionId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ben_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ben_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        card:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        companyId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        personId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAccount {\n\ttransactionId: string;\n\tdate: Date;\n\tcompany_name: string;\n\tben_code: string;\n\tperson_name: string;\n\tvalue: number;\n\tcard: string;\n\ttime: string;\n}\n\nexport interface IAccountData {\n\ttransactionId: number;\n\tdate: Date;\n\tvalue: number;\n\tcard: string;\n\tben_code: string;\n\ttime: string;\n\tpersonId: number;\n\tcompanyId: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICompany.html":{"url":"interfaces/ICompany.html","title":"interface - ICompany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICompany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/ICompany.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICompany {\n\tname: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPerson.html":{"url":"interfaces/IPerson.html","title":"interface - IPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/IPerson.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            person_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        person_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        person_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPerson {\n\tperson_name: string\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/transaction/transaction.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nature\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Transaction } from './transaction.model'\n\ninterface ITransaction {\n\ttype: number;\n\tname: string;\n\tnature: string;\n}\n\n@Injectable()\nexport class TransactionService {\n\tconstructor(\n\t\t@InjectModel(Transaction)\n\t\tprivate transactionModel: typeof Transaction\n\t) { }\n\n\tpublic async registerTransaction(): Promise {\n\t\ttry {\n\t\t\tconst transactionList: ITransaction[] = [\n\t\t\t\t{ type: 1, name: 'Débito', nature: 'Entrada' },\n\t\t\t\t{ type: 2, name: 'Boleto', nature: 'Saída' },\n\t\t\t\t{ type: 3, name: 'Financiamento', nature: 'Saída' },\n\t\t\t\t{ type: 4, name: 'Crédito', nature: 'Entrada' },\n\t\t\t\t{ type: 5, name: 'Recebimento Empréstimo', nature: 'Entrada' },\n\t\t\t\t{ type: 6, name: 'Vendas', nature: 'Entrada' },\n\t\t\t\t{ type: 7, name: 'Recebimento TED', nature: 'Entrada' },\n\t\t\t\t{ type: 8, name: 'Recebimento DOC', nature: 'Entrada' },\n\t\t\t\t{ type: 9, name: 'Aluguel', nature: 'Saída' }\n\t\t\t]\n\n\t\t\tfor (const transaction of transactionList) {\n\t\t\t\tconst result = await this.transactionModel.findOrCreate({\n\t\t\t\t\twhere: { type: transaction.type },\n\t\t\t\t\tdefaults: {\n\t\t\t\t\t\ttype: transaction.type,\n\t\t\t\t\t\tname: transaction.name,\n\t\t\t\t\t\tnature: transaction.nature\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\n\tpublic async findTransaction(transactionType: number): Promise {\n\t\ttry {\n\t\t\tconst result = await this.transactionModel.findOne({\n\t\t\t\twhere: { type: transactionType }\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find transaction type >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/person/person.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/person/person.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table } from \"sequelize-typescript\";\n\n@Table({tableName: 'person'})\nexport class Person extends Model {\n    @Column\n    name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonModule.html":{"url":"modules/PersonModule.html","title":"module - PersonModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\n\nPersonService\n\nPersonService\n\n\n\nPersonModule\n\nPersonModule\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/person/person.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PersonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PersonService } from './person.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Person } from './person.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Person])],\n  providers: [PersonService],\n  controllers: [],\n})\nexport class PersonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonService.html":{"url":"injectables/PersonService.html","title":"injectable - PersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/person/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createPerson\n                            \n                            \n                                    Public\n                                    Async\n                                findOrCreatePerson\n                            \n                            \n                                    Public\n                                    Async\n                                findPerson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(personModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/person/person.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPerson(person: Person)\n                \n            \n\n\n            \n                \n                    Defined in src/module/person/person.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOrCreatePerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrCreatePerson(person: IPerson)\n                \n            \n\n\n            \n                \n                    Defined in src/module/person/person.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                IPerson\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPerson(personName?: string, personId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/module/person/person.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    personName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    personId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Person } from './person.model'\nimport { IPerson } from \"../../interface/IPerson\";\n\n@Injectable()\nexport class PersonService {\n\tconstructor(\n\t\t@InjectModel(Person)\n\t\tprivate personModel: typeof Person\n\t) { }\n\n\tpublic async createPerson(person: Person): Promise {\n\t\ttry {\n\t\t\tconst result = await this.personModel.create(person);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findOrCreatePerson(person: IPerson): Promise {\n\t\ttry {\n\t\t\tconst result = await this.personModel.findOrCreate({\n\t\t\t\twhere: { name: person.person_name },\n\t\t\t\tdefaults: {\n\t\t\t\t\tname: person.person_name\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find or create person >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\tpublic async findPerson(personName?: string, personId?: number): Promise {\n\t\ttry {\n\t\t\tconst filter = (personName) ? { name: personName } : (personId) ? { id: personId } : null;\n\t\t\tif (!filter) return ApiBase.error(`Filter param is null`, ApiBase.Status.FAILED);\n\n\t\t\tconst result = await this.personModel.findOne({\n\t\t\t\twhere: filter\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find person >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/transaction/transaction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                nature\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/transaction/transaction.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/transaction/transaction.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/module/transaction/transaction.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Model, Table } from \"sequelize-typescript\";\n\n @Table({tableName: 'transaction'})\nexport class Transaction extends Model {\n    @Column({ \n        unique: true,\n    })\n    type: number;\n\n    @Column\n    name: string;\n\n    @Column\n    nature: string;\n} \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nTransactionService\n\nTransactionService\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/transaction/transaction.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionService } from './transaction.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Transaction } from './transaction.model'\n\n@Module({\n  imports: [SequelizeModule.forFeature([Transaction])],\n  providers: [TransactionService],\n  controllers: [],\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/transaction/transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findTransaction\n                            \n                            \n                                    Public\n                                    Async\n                                registerTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/transaction/transaction.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTransaction(transactionType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/module/transaction/transaction.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        registerTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/module/transaction/transaction.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiBase } from \"../../utils/ApiBase\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/sequelize\";\n//\nimport { Transaction } from './transaction.model'\n\ninterface ITransaction {\n\ttype: number;\n\tname: string;\n\tnature: string;\n}\n\n@Injectable()\nexport class TransactionService {\n\tconstructor(\n\t\t@InjectModel(Transaction)\n\t\tprivate transactionModel: typeof Transaction\n\t) { }\n\n\tpublic async registerTransaction(): Promise {\n\t\ttry {\n\t\t\tconst transactionList: ITransaction[] = [\n\t\t\t\t{ type: 1, name: 'Débito', nature: 'Entrada' },\n\t\t\t\t{ type: 2, name: 'Boleto', nature: 'Saída' },\n\t\t\t\t{ type: 3, name: 'Financiamento', nature: 'Saída' },\n\t\t\t\t{ type: 4, name: 'Crédito', nature: 'Entrada' },\n\t\t\t\t{ type: 5, name: 'Recebimento Empréstimo', nature: 'Entrada' },\n\t\t\t\t{ type: 6, name: 'Vendas', nature: 'Entrada' },\n\t\t\t\t{ type: 7, name: 'Recebimento TED', nature: 'Entrada' },\n\t\t\t\t{ type: 8, name: 'Recebimento DOC', nature: 'Entrada' },\n\t\t\t\t{ type: 9, name: 'Aluguel', nature: 'Saída' }\n\t\t\t]\n\n\t\t\tfor (const transaction of transactionList) {\n\t\t\t\tconst result = await this.transactionModel.findOrCreate({\n\t\t\t\t\twhere: { type: transaction.type },\n\t\t\t\t\tdefaults: {\n\t\t\t\t\t\ttype: transaction.type,\n\t\t\t\t\t\tname: transaction.name,\n\t\t\t\t\t\tnature: transaction.nature\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn ApiBase.success(true);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n\n\n\tpublic async findTransaction(transactionType: number): Promise {\n\t\ttry {\n\t\t\tconst result = await this.transactionModel.findOne({\n\t\t\t\twhere: { type: transactionType }\n\t\t\t});\n\n\t\t\tif (!result) return ApiBase.error(`Fail to find transaction type >`, ApiBase.Status.FAILED);\n\n\t\t\treturn ApiBase.success(result);\n\t\t} catch (ex) {\n\t\t\tthrow ApiBase.exception(ex);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/interface/IAccount.ts\n            \n            interface\n            IAccount\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interface/IAccount.ts\n            \n            interface\n            IAccountData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interface/ICompany.ts\n            \n            interface\n            ICompany\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interface/IPerson.ts\n            \n            interface\n            IPerson\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/account/account.controller.ts\n            \n            controller\n            AccountController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/account/account.model.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/module/account/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/module/company/company.model.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/person/person.model.ts\n            \n            class\n            Person\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/person/person.service.ts\n            \n            injectable\n            PersonService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/transaction/transaction.model.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/transaction/transaction.service.ts\n            \n            interface\n            ITransaction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/all-exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/middleware/options.middleware.ts\n            \n            function\n            OptionsInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            class\n            ApiResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            error\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            exception\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            getApiEnv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            handleHttpResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            logException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            objectSerialize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            registerError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            function\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/ApiBase.ts\n            \n            variable\n            util\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/rest/HttpResponse.ts\n            \n            class\n            HttpResponse\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-modules/mailer : ^1.6.0\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.2.3\n        \n            @nestjs/config : ^1.1.2\n        \n            @nestjs/core : ^8.2.3\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.3\n        \n            @nestjs/schedule : ^1.0.2\n        \n            @nestjs/sequelize : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/throttler : ^2.0.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            handlebars : ^4.7.7\n        \n            helmet : ^4.6.0\n        \n            line-reader : ^0.4.0\n        \n            moment : ^2.29.1\n        \n            multer : ^1.4.3\n        \n            multer-s3 : ^2.10.0\n        \n            mysql2 : ^2.3.3\n        \n            nestjs-newrelic : 0.0.2\n        \n            nestjs-pino : ^2.3.1\n        \n            nodemailer : ^6.7.1\n        \n            passport : ^0.5.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.7.3\n        \n            pino-http : ^6.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.4.0\n        \n            sequelize : ^6.16.1\n        \n            sequelize-typescript : ^2.1.3\n        \n            wsdl-to-ts : ^0.2.3\n        \n            xml2js : ^0.4.23\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Status   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/ApiBase.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            Default response http status code.\n\n                        \n                    \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                 EXCEPTION\n                            \n                        \n                        \n                            \n                                 ERROR_NULL_PARAMETER\n                            \n                        \n                        \n                            \n                                 ERROR_NULL_VALUE\n                            \n                        \n                        \n                            \n                                 ERROR_INVALID_PARAMETER\n                            \n                        \n                        \n                            \n                                 ERROR_NOT_FOUND\n                            \n                        \n                        \n                            \n                                 ERROR_DUPLICATED_DATA\n                            \n                        \n                        \n                            \n                                 ERROR_TRUNCATED_DATA\n                            \n                        \n                        \n                            \n                                 ERROR_REPOSITORY_BEGIN\n                            \n                        \n                        \n                            \n                                 ERROR_REPOSITORY_END\n                            \n                        \n                        \n                            \n                                 ERROR_MAX_ATTEMPTS\n                            \n                        \n                        \n                            \n                                 ERROR_CONFLICT\n                            \n                        \n                        \n                            \n                                 ERROR_UNKOWN_EVENT\n                            \n                        \n                        \n                            \n                                 ERROR_PROMISIFY_FAILED\n                            \n                        \n                        \n                            \n                                 REQUEST_CANCELED_BY_CLIENT\n                            \n                        \n                        \n                            \n                                 SERVER_OPERATION_TIMEOUT\n                            \n                        \n                        \n                            \n                                 SERVER_OPERATION_CANCELED\n                            \n                        \n                        \n                            \n                                 ERROR_INVALID_REQUEST\n                            \n                        \n                        \n                            \n                                 ERROR_JOB_EXECUTION_FAILED\n                            \n                        \n                        \n                            \n                                 PROMISE_TIMEOUT\n                            \n                        \n                        \n                            \n                                 ERROR_ALREADY_REGISTERED\n                            \n                        \n                        \n                            \n                                 CONTINUE\n                            \n                        \n                        \n                            \n                                Value : 100\n                            \n                        \n                        \n                            \n                                 SWITCHING_PROTOCOLS\n                            \n                        \n                        \n                            \n                                Value : 101\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 102\n                            \n                        \n                        \n                            \n                                 EARLYHINTS\n                            \n                        \n                        \n                            \n                                Value : 103\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : 201\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : 202\n                            \n                        \n                        \n                            \n                                 NON_AUTHORITATIVE_INFORMATION\n                            \n                        \n                        \n                            \n                                Value : 203\n                            \n                        \n                        \n                            \n                                 NO_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 204\n                            \n                        \n                        \n                            \n                                 RESET_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 205\n                            \n                        \n                        \n                            \n                                 PARTIAL_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 206\n                            \n                        \n                        \n                            \n                                 AMBIGUOUS\n                            \n                        \n                        \n                            \n                                Value : 300\n                            \n                        \n                        \n                            \n                                 MOVED_PERMANENTLY\n                            \n                        \n                        \n                            \n                                Value : 301\n                            \n                        \n                        \n                            \n                                 FOUND\n                            \n                        \n                        \n                            \n                                Value : 302\n                            \n                        \n                        \n                            \n                                 SEE_OTHER\n                            \n                        \n                        \n                            \n                                Value : 303\n                            \n                        \n                        \n                            \n                                 NOT_MODIFIED\n                            \n                        \n                        \n                            \n                                Value : 304\n                            \n                        \n                        \n                            \n                                 TEMPORARY_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : 307\n                            \n                        \n                        \n                            \n                                 PERMANENT_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : 308\n                            \n                        \n                        \n                            \n                                 BAD_REQUEST\n                            \n                        \n                        \n                            \n                                Value : 400\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : 401\n                            \n                        \n                        \n                            \n                                 PAYMENT_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 402\n                            \n                        \n                        \n                            \n                                 FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : 403\n                            \n                        \n                        \n                            \n                                 METHOD_NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                Value : 405\n                            \n                        \n                        \n                            \n                                 NOT_ACCEPTABLE\n                            \n                        \n                        \n                            \n                                Value : 406\n                            \n                        \n                        \n                            \n                                 PROXY_AUTHENTICATION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 407\n                            \n                        \n                        \n                            \n                                 REQUEST_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : 408\n                            \n                        \n                        \n                            \n                                 GONE\n                            \n                        \n                        \n                            \n                                Value : 410\n                            \n                        \n                        \n                            \n                                 LENGTH_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 411\n                            \n                        \n                        \n                            \n                                 PRECONDITION_FAILED\n                            \n                        \n                        \n                            \n                                Value : 412\n                            \n                        \n                        \n                            \n                                 PAYLOAD_TOO_LARGE\n                            \n                        \n                        \n                            \n                                Value : 413\n                            \n                        \n                        \n                            \n                                 URI_TOO_LONG\n                            \n                        \n                        \n                            \n                                Value : 414\n                            \n                        \n                        \n                            \n                                 UNSUPPORTED_MEDIA_TYPE\n                            \n                        \n                        \n                            \n                                Value : 415\n                            \n                        \n                        \n                            \n                                 REQUESTED_RANGE_NOT_SATISFIABLE\n                            \n                        \n                        \n                            \n                                Value : 416\n                            \n                        \n                        \n                            \n                                 EXPECTATION_FAILED\n                            \n                        \n                        \n                            \n                                Value : 417\n                            \n                        \n                        \n                            \n                                 I_AM_A_TEAPOT\n                            \n                        \n                        \n                            \n                                Value : 418\n                            \n                        \n                        \n                            \n                                 MISDIRECTED\n                            \n                        \n                        \n                            \n                                Value : 421\n                            \n                        \n                        \n                            \n                                 UNPROCESSABLE_ENTITY\n                            \n                        \n                        \n                            \n                                Value : 422\n                            \n                        \n                        \n                            \n                                 FAILED_DEPENDENCY\n                            \n                        \n                        \n                            \n                                Value : 424\n                            \n                        \n                        \n                            \n                                 PRECONDITION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 428\n                            \n                        \n                        \n                            \n                                 TOO_MANY_REQUESTS\n                            \n                        \n                        \n                            \n                                Value : 429\n                            \n                        \n                        \n                            \n                                 INTERNAL_SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n                        \n                            \n                                 NOT_IMPLEMENTED\n                            \n                        \n                        \n                            \n                                Value : 501\n                            \n                        \n                        \n                            \n                                 BAD_GATEWAY\n                            \n                        \n                        \n                            \n                                Value : 502\n                            \n                        \n                        \n                            \n                                 SERVICE_UNAVAILABLE\n                            \n                        \n                        \n                            \n                                Value : 503\n                            \n                        \n                        \n                            \n                                 GATEWAY_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : 504\n                            \n                        \n                        \n                            \n                                 HTTP_VERSION_NOT_SUPPORTED\n                            \n                        \n                        \n                            \n                                Value : 505\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            error   (src/.../ApiBase.ts)\n                        \n                        \n                            exception   (src/.../ApiBase.ts)\n                        \n                        \n                            getApiEnv   (src/.../ApiBase.ts)\n                        \n                        \n                            handleHttpResponse   (src/.../ApiBase.ts)\n                        \n                        \n                            log   (src/.../ApiBase.ts)\n                        \n                        \n                            logException   (src/.../ApiBase.ts)\n                        \n                        \n                            objectSerialize   (src/.../ApiBase.ts)\n                        \n                        \n                            OptionsInterceptor   (src/.../options.middleware.ts)\n                        \n                        \n                            registerError   (src/.../ApiBase.ts)\n                        \n                        \n                            success   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/ApiBase.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(data: any, statusCode: Status)\n                \n            \n\n\n\n\n            \n                \n                    API error.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string or object.\n\n                                    \n                                \n                                \n                                    statusCode\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HttpStatus.\nReturn\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.error(data, statusCode)\n                        \n                    \n                    \n                        Returns :         ApiResponse\n\n                    \n                    \n                        data object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exception\n                        \n                    \n                \n            \n            \n                \nexception(dataError: any)\n                \n            \n\n\n\n\n            \n                \n                    API exception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataError\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.exception(error)\n                        \n                    \n                    \n                        Returns :         ApiResponse\n\n                    \n                    \n                        data object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEnv\n                        \n                    \n                \n            \n            \n                \ngetApiEnv()\n                \n            \n\n\n\n\n            \n                \n                    API environment\n\n\n                    \n                        Example :\n                        \n                            return ApiBase.getApiEnv()\nReturn\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleHttpResponse\n                        \n                    \n                \n            \n            \n                \nhandleHttpResponse(apiResponse)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiResponse\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ApiHttpResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(msg, title?: string)\n                \n            \n\n\n\n\n            \n                \n                    API log.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.log(msg)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logException\n                        \n                    \n                \n            \n            \n                \nlogException(msg: string)\n                \n            \n\n\n\n\n            \n                \n                    API log error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.logException(msg)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectSerialize\n                        \n                    \n                \n            \n            \n                \nobjectSerialize(data)\n                \n            \n\n\n\n\n            \n                \n                    API object serialize\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.objectSerialize(data)\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerError\n                        \n                    \n                \n            \n            \n                \nregisterError(msg, errorData?: any)\n                \n            \n\n\n\n\n            \n                \n                    API log error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorData\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.registerError(msg)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(data: any)\n                \n            \n\n\n\n\n            \n                \n                    API success.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string or object.\nReturn\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            return ApiBase.sucess(body)\n                        \n                    \n                    \n                        Returns :         ApiResponse\n\n                    \n                    \n                        data object.\n\n                    \n                \n            \n        \n    \n    src/shared/middleware/options.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OptionsInterceptor\n                        \n                    \n                \n            \n            \n                \nOptionsInterceptor(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ndesafio-dev\nPrimeiros passos\n\nAo realizar o clone do projeto deve ser executado  os seguintes comandos na pasta raiz:\n\n\n  docker-compose up\n  npm install\n  npm run start:dev\n\n\n\n\nRota\n\nPOST: http://localhost:3050/api/v1/account/cnab\n\nPra realização do teste é necessário apenas o envio do arquivo cnab.txt (Disponível em: https://github.com/ByCodersTec/desafio-ruby-on-rails/blob/master/CNAB.txt)\nOs testes foram realizados utilizando o programa Postman, opção form-data >> KEY: file >> VALUE: arquivo\n\n\nTeste unitário\n\nFoi utilizado o Jest framework para programação dos testes.\nPara realizar o teste é necessario o seguinte comando: npm run test ou selecionar o item \"test\" no package.json. \nAntes de rodar o comando é importante que a API tenha sido iniciada primeiramente, para que as tabelas sejam criadas.\n\n\nTecnologias\n\n  NestJs\n  Sequelize\n  PostgreSql\n  Jest\n  Docker\n  Compodoc\n\n\nDocumentação\nA documentação encontra-se disponóvel na pasta docs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nAccountService\n\nAccountService\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nPersonService\n\nPersonService\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpResponse   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/ApiBase.ts\n    \n    \n        \n            \n                \n                    \n                    HttpResponse\n                \n            \n            \n                \n                            ApiHttpResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            util   (src/.../ApiBase.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/utils/ApiBase.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        util\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('util')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
